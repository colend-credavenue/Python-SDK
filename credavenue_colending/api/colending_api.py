"""
    Allcloud (Allcloud)

    # Integration Document  The following are the endpoints to be called during and pre/post disbursement state of a loan.  ## Authentication  Authentication details and host will be shared privately.  ## Workflow  **Create Loan** is the initial endpoint to be called to create a loan. Loan will be processed in the background and the status of loan will be provided through the configured Webhook. However, the client can also poll the server via the **Get Loan Details** endpoint to know the loan's status(**Get Loan Details** is rate throttled and polling this API will be restricted). Loan's shall be considered rejected if proper response is not available within 10minutes.  All other endpoints are self-explanatory and can be retried upto 3 times before marking as failure.  ## Allowed Links  All Link attributes should contain 1. Accessible File Link URL which can be Public/Expiry URL/Whitelisted File Server Link(Write to tech.colending@credavenue.com for obtaining our IP address to whitelist) 2. File Link URL with Header Authentication (Header values should be shared with tech.colending@credavenue.com)  ## Allowed Fields Length <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">  <colgroup>  <col  class=\"org-left\" />  <col  class=\"org-left\" />  </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-left\">Data Type</th> <th scope=\"col\" class=\"org-left\">Max Length</th> </tr> </thead>  <tbody> <tr> <td class=\"org-left\">String</td> <td class=\"org-left\">65,535 bytes</td> </tr>  <tr> <td class=\"org-left\">Float</td> <td class=\"org-left\">8 bytes</td> </tr>  <tr> <td class=\"org-left\">Integer</td> <td class=\"org-left\">4 bytes</td> </tr>  <tr> <td class=\"org-left\">Date</td> <td class=\"org-left\">10 characters</td> </tr>  </tbody> </table>  # Webhooks  Webhooks can be configured for the below events  1. Loan status change      Response Payload :      {         \"product_id\": \"\",         \"client_loan_id\": \"\",         \"principal_amount\": \"\",         \"interest_rate\": \"\",         \"tenure\": \"\",         \"tenure_frequency\": \"MONTHLY\",         \"cibil_score\": \"\",         \"purpose\": \"\",         \"repayment_frequency\":\"\",         \"number_of_repayments\": \"\",         \"status\": \"\",         \"principal_outstanding\": \"\",         \"reject_reason\": \"\"     }          Statuses : ['new', 'approved', 'rejected', 'agreement_signed', 'dropped', 'disbursement_ready', 'disbursed', 'matured', 'partner_settled']     2. Loan disbursement details (Disbursed through razorpay)      Callback Payload:      {         \"client_loan_id\":\"\",         \"status\":\"borrower_disbursed\",         \"disbursed_date\":\"\",         \"utr_number\":\"\",         \"disbursement_type\":\"\",         \"payment_reversed\": \"TRUE/FALSE\",         \"disbursement_amount\":\"\",         \"investor_disbursed_amount\": \"\",         \"partner_disbursed_amount\": \"\",         \"differential_interest\":\"\",         \"investor_differential_interest\":\"\",         \"partner_differential_interest\":\"\",         \"differential_days\":\"\",         \"interest_start_date\":\"\",         \"investor_processing_fee\":\"\",         \"partner_processing_fee\":\"\",         \"investor_stamp_duty\":\"\",         \"partner_stamp_duty\":\"\",         \"investor_documentation_charges\":\"\",         \"partner_documentation_charges\":\"\"     }  Provide the following details to configure the webhooks 1. callback URL 2. authentication for the callback URL (header authentication)    # Validations  **PAN**  - **Example**: ABGPA1232P - **Sequence**: First five digits will be alpha, next four will be Numerical and again last single digit will be alpha  **GSTIN**  - **Example**: 33AAACT2727Q1ZV - **Sequence**: First two digits is Numerical, Next is PAN sequence as specified above, again thirteenth digit will be numerical, fourteenth digit is alpha, last digit will be alpha or numerical  **CIN**  - **Example**: U65929TN2017PTC117196 - **Sequence**: First digit is Alpha, next 5 numeric digits, next two alpha, next set of 4 numeric digits, Next 3 alpha, last 6 numeric digits  **PASSPORT**  - **Example**: A2096457 - **Sequence**: Total 8 digits, first digit is Alpha, remaining digits are numerical  **AADHAR NO**  - The standard 12 digits numerical.  **MOBILE NO**  - **Sequence**: 10 numerical digits  **IFSC CODE**  - **Example**: PUNB0596600 - **Sequence**: First four alpha, next fifth digit is 0 (zero) always and last six digit is alpha/numeric. Totally 11 digits.  **PIN CODE**  - 6 numerical digits  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Contact: support@colending.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from credavenue_colending.api_client import ApiClient, Endpoint as _Endpoint
from credavenue_colending.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from credavenue_colending.model.agreement_signed_success import AgreementSignedSuccess
from credavenue_colending.model.bad_request import BadRequest
from credavenue_colending.model.body_agreement_signed import BodyAgreementSigned
from credavenue_colending.model.body_create_advance_collection import BodyCreateAdvanceCollection
from credavenue_colending.model.body_create_collection_entry import BodyCreateCollectionEntry
from credavenue_colending.model.body_create_loan import BodyCreateLoan
from credavenue_colending.model.body_create_repayment_schedule import BodyCreateRepaymentSchedule
from credavenue_colending.model.body_create_tranche import BodyCreateTranche
from credavenue_colending.model.body_disburse_loan import BodyDisburseLoan
from credavenue_colending.model.body_get_loan_details import BodyGetLoanDetails
from credavenue_colending.model.body_property_review import BodyPropertyReview
from credavenue_colending.model.body_update_advance_collection import BodyUpdateAdvanceCollection
from credavenue_colending.model.body_update_collection_entry import BodyUpdateCollectionEntry
from credavenue_colending.model.body_update_loan import BodyUpdateLoan
from credavenue_colending.model.body_update_post_disbursement import BodyUpdatePostDisbursement
from credavenue_colending.model.body_update_repayment_schedule import BodyUpdateRepaymentSchedule
from credavenue_colending.model.body_upload_interest_accruals import BodyUploadInterestAccruals
from credavenue_colending.model.create_collection_success import CreateCollectionSuccess
from credavenue_colending.model.create_loan_error import CreateLoanError
from credavenue_colending.model.create_loan_success import CreateLoanSuccess
from credavenue_colending.model.create_rs_success import CreateRSSuccess
from credavenue_colending.model.error422_create_tranche import Error422CreateTranche
from credavenue_colending.model.get_payment_success import GetPaymentSuccess
from credavenue_colending.model.get_rs_success import GetRSSuccess
from credavenue_colending.model.internal_server_error import InternalServerError
from credavenue_colending.model.not_found import NotFound
from credavenue_colending.model.property_review_success import PropertyReviewSuccess
from credavenue_colending.model.request_success import RequestSuccess
from credavenue_colending.model.response_create_tranche import ResponseCreateTranche
from credavenue_colending.model.unauthorized import Unauthorized


class ColendingApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.agreement_signed_endpoint = _Endpoint(
            settings={
                'response_type': (AgreementSignedSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/agreement_signed',
                'operation_id': 'agreement_signed',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_agreement_signed',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_agreement_signed',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'body_agreement_signed':
                        (BodyAgreementSigned,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'body_agreement_signed': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.approve_fund_transfer_endpoint = _Endpoint(
            settings={
                'response_type': (RequestSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/approve_fund_transfer',
                'operation_id': 'approve_fund_transfer',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'body':
                        ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'body': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.create_advance_collection_endpoint = _Endpoint(
            settings={
                'response_type': (AgreementSignedSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/advance_payments',
                'operation_id': 'create_advance_collection',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_create_advance_collection',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_create_advance_collection',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'body_create_advance_collection':
                        (BodyCreateAdvanceCollection,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'body_create_advance_collection': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.create_collection_entry_endpoint = _Endpoint(
            settings={
                'response_type': (CreateCollectionSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/payments/record_payment',
                'operation_id': 'create_collection_entry',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_create_collection_entry',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_create_collection_entry',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'body_create_collection_entry':
                        (BodyCreateCollectionEntry,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'body_create_collection_entry': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.create_loan_endpoint = _Endpoint(
            settings={
                'response_type': (CreateLoanSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans',
                'operation_id': 'create_loan',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'body_create_loan',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'body_create_loan',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'body_create_loan':
                        (BodyCreateLoan,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'body_create_loan': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.create_repayment_schedule_endpoint = _Endpoint(
            settings={
                'response_type': (CreateRSSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/rs',
                'operation_id': 'create_repayment_schedule',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_create_repayment_schedule',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_create_repayment_schedule',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'body_create_repayment_schedule':
                        (BodyCreateRepaymentSchedule,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'body_create_repayment_schedule': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.create_tranche_endpoint = _Endpoint(
            settings={
                'response_type': (ResponseCreateTranche,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/tranches',
                'operation_id': 'create_tranche',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'loan_id',
                    'client_name',
                    'body_create_tranche',
                ],
                'required': [
                    'loan_id',
                    'client_name',
                    'body_create_tranche',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'loan_id':
                        (str,),
                    'client_name':
                        (str,),
                    'body_create_tranche':
                        (BodyCreateTranche,),
                },
                'attribute_map': {
                    'loan_id': 'loan_id',
                    'client_name': 'client_name',
                },
                'location_map': {
                    'loan_id': 'path',
                    'client_name': 'path',
                    'body_create_tranche': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.disburse_loan_endpoint = _Endpoint(
            settings={
                'response_type': (AgreementSignedSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/disburse',
                'operation_id': 'disburse_loan',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_disburse_loan',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_disburse_loan',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'body_disburse_loan':
                        (BodyDisburseLoan,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'body_disburse_loan': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.get_collection_details_endpoint = _Endpoint(
            settings={
                'response_type': (GetPaymentSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/payments',
                'operation_id': 'get_collection_details',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_interest_accrual_endpoint = _Endpoint(
            settings={
                'response_type': (AgreementSignedSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/interest_accruals/{file_id}',
                'operation_id': 'get_interest_accrual',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'file_id',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'file_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'file_id':
                        (str,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                    'file_id': 'file_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'file_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_loan_details_endpoint = _Endpoint(
            settings={
                'response_type': (BodyGetLoanDetails,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}',
                'operation_id': 'get_loan_details',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_repayment_schedule_details_endpoint = _Endpoint(
            settings={
                'response_type': (GetRSSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/rs',
                'operation_id': 'get_repayment_schedule_details',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_tranche_details_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/tranches/{id}',
                'operation_id': 'get_tranche_details',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'id',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'id':
                        (float,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                    'id': 'id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.property_review_endpoint = _Endpoint(
            settings={
                'response_type': (PropertyReviewSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/property_review',
                'operation_id': 'property_review',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_property_review',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_property_review',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'body_property_review':
                        (BodyPropertyReview,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'body_property_review': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.update_advance_collection_endpoint = _Endpoint(
            settings={
                'response_type': (RequestSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/advance_payments/{advance_payment_id}',
                'operation_id': 'update_advance_collection',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'advance_payment_id',
                    'body_update_advance_collection',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'advance_payment_id',
                    'body_update_advance_collection',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'advance_payment_id':
                        (str,),
                    'body_update_advance_collection':
                        (BodyUpdateAdvanceCollection,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                    'advance_payment_id': 'advance_payment_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'advance_payment_id': 'path',
                    'body_update_advance_collection': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.update_collection_entry_endpoint = _Endpoint(
            settings={
                'response_type': (AgreementSignedSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/payments/{payment_id}',
                'operation_id': 'update_collection_entry',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'payment_id',
                    'body_update_collection_entry',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'payment_id',
                    'body_update_collection_entry',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'payment_id':
                        (str,),
                    'body_update_collection_entry':
                        (BodyUpdateCollectionEntry,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                    'payment_id': 'payment_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'payment_id': 'path',
                    'body_update_collection_entry': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.update_loan_endpoint = _Endpoint(
            settings={
                'response_type': (RequestSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}',
                'operation_id': 'update_loan',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_update_loan',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_update_loan',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'body_update_loan':
                        (BodyUpdateLoan,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'body_update_loan': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.update_post_disbursement_endpoint = _Endpoint(
            settings={
                'response_type': (RequestSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/update_post_disbursement',
                'operation_id': 'update_post_disbursement',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_update_post_disbursement',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_update_post_disbursement',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'body_update_post_disbursement':
                        (BodyUpdatePostDisbursement,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'body_update_post_disbursement': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.update_repayment_schedule_endpoint = _Endpoint(
            settings={
                'response_type': (GetRSSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/loans/{loan_id}/rs',
                'operation_id': 'update_repayment_schedule',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_update_repayment_schedule',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_update_repayment_schedule',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'body_update_repayment_schedule':
                        (BodyUpdateRepaymentSchedule,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'body_update_repayment_schedule': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.upload_interest_accruals_endpoint = _Endpoint(
            settings={
                'response_type': (RequestSuccess,),
                'auth': [
                    'api_key'
                ],
                'endpoint_path': '/clients/{client_name}/api/v2/interest_accruals',
                'operation_id': 'upload_interest_accruals',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_upload_interest_accruals',
                ],
                'required': [
                    'product_id',
                    'client_name',
                    'loan_id',
                    'body_upload_interest_accruals',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_id':
                        (str,),
                    'client_name':
                        (str,),
                    'loan_id':
                        (str,),
                    'body_upload_interest_accruals':
                        (BodyUploadInterestAccruals,),
                },
                'attribute_map': {
                    'product_id': 'Product-Id',
                    'client_name': 'client_name',
                    'loan_id': 'loan_id',
                },
                'location_map': {
                    'product_id': 'header',
                    'client_name': 'path',
                    'loan_id': 'path',
                    'body_upload_interest_accruals': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def agreement_signed(
        self,
        product_id,
        client_name,
        loan_id,
        body_agreement_signed,
        **kwargs
    ):
        """#Agreement Signed  # noqa: E501

        Agreement Signed API  This endpoint can be used to update the loan status to agreement signed.  **Expected Loan Status: \"approved\"**    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>sanction_letter_link</td>     <td>array</td>     <td></td>          <td>Sanction letter issued to the customer in joint/lenders letter head</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>sanction_letter_link_password</td>     <td>string</td>     <td></td>          <td>Sanction letter issued to the customer in joint/lenders letter head - Password</td>       <td>12345678</td>  </tr>        <tr>     <td>self_declaration_form_link</td>     <td>array</td>     <td></td>          <td>Self declaration form link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>self_declaration_form_link_password</td>     <td>string</td>     <td></td>          <td>Self declaration form link password</td>       <td>12345678</td>  </tr>        <tr>     <td>fatca_declaration_link</td>     <td>array</td>     <td></td>          <td>FATCA declaration</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>fatca_declaration_link_password</td>     <td>string</td>     <td></td>          <td>FATCA declaration link password</td>       <td>12345678</td>  </tr>        <tr>     <td>entire_set_of_loan_agreements_link</td>     <td>array</td>     <td></td>          <td>Entire loan agreement kit</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>entire_set_of_loan_agreements_link_password</td>     <td>string</td>     <td></td>          <td>Entire loan agreement kit password</td>       <td>12345678</td>  </tr>        <tr>     <td>dpn_link</td>     <td>array</td>     <td></td>          <td>DPN Image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>dpn_link_password</td>     <td>string</td>     <td></td>          <td>DPN Image password</td>       <td>12345678</td>  </tr>        <tr>     <td>drf_link</td>     <td>array</td>     <td></td>          <td>DRF Image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>drf_link_password</td>     <td>string</td>     <td></td>          <td>DRF Image password</td>       <td>12345678</td>  </tr>        <tr>     <td>nach_enach_mandate_link</td>     <td>array</td>     <td></td>          <td>Nach Enach Mandate Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>nach_enach_mandate_link_password</td>     <td>string</td>     <td></td>          <td>Nach Enach Mandate Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>credit_discussion_mail_link</td>     <td>array</td>     <td></td>          <td>Credit Discussion Mail Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>credit_discussion_mail_link_password</td>     <td>string</td>     <td></td>          <td>Credit Discussion Mail Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>field_verification_report_link</td>     <td>array</td>     <td></td>          <td>Field Verification Report Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>field_verification_report_link_password</td>     <td>string</td>     <td></td>          <td>Field Verification Report Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>tele_verification_report_link</td>     <td>array</td>     <td></td>          <td>Tele Verification Report Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>tele_verification_report_link_password</td>     <td>string</td>     <td></td>          <td>Tele Verification Report Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>vehicle_inspection_report_link</td>     <td>array</td>     <td></td>          <td>Vehicle Inspection Report Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>vehicle_inspection_report_link_password</td>     <td>string</td>     <td></td>          <td>Vehicle Inspection Report Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>insurance_application_form_link</td>     <td>array</td>     <td></td>          <td>Insurance Application Form Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>insurance_application_form_link_password</td>     <td>string</td>     <td></td>          <td>Insurance Application Form Link Password</td>       <td>12345678</td>  </tr>    </tbody>       </table>    #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.agreement_signed(product_id, client_name, loan_id, body_agreement_signed, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            body_agreement_signed (BodyAgreementSigned):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            AgreementSignedSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['body_agreement_signed'] = \
            body_agreement_signed
        return self.agreement_signed_endpoint.call_with_http_info(**kwargs)

    def approve_fund_transfer(
        self,
        product_id,
        client_name,
        loan_id,
        body,
        **kwargs
    ):
        """#Approve Fund Transfer  # noqa: E501

        Approve Fund Transfer API    #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.approve_fund_transfer(product_id, client_name, loan_id, body, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            body ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            RequestSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['body'] = \
            body
        return self.approve_fund_transfer_endpoint.call_with_http_info(**kwargs)

    def create_advance_collection(
        self,
        product_id,
        client_name,
        loan_id,
        body_create_advance_collection,
        **kwargs
    ):
        """#Create Advance Collection  # noqa: E501

        Advance Collection API  This endpoint can be used to create an advance transaction for a loan that can be utilized in future payments later    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>amount</td>     <td>number</td>     <td>float</td>          <td>Advance Amount</td>       <td>10000.0</td>  </tr>        <tr>     <td>transaction_date</td>     <td>string</td>     <td>date</td>          <td>Date when customer paid the amount (YYYY-MM-DD)</td>       <td>2021-01-02</td>  </tr>        <tr>     <td>investor_transfer_date</td>     <td>string</td>     <td>date</td>          <td>Date when originator transferred the amount to investor (YYYY-MM-DD)</td>       <td>2021-01-02</td>  </tr>        <tr>     <td>instrument_number</td>     <td>string</td>     <td></td>          <td>UTR / Cheque Number</td>       <td>UTR12345</td>  </tr>        <tr>     <td>instrument_type</td>     <td>string</td>     <td></td>          <td>RTGS / NEFT / UPI / Cheque</td>       <td>NEFT</td>  </tr>        <tr>     <td>advance_outstanding</td>     <td>number</td>     <td>float</td>          <td>Before this collection record to mention advance outstanding for that loan</td>       <td>5000.0</td>  </tr>        <tr>     <td>transaction_type</td>     <td>string</td>     <td></td>          <td>Credit / Refund</td>       <td>Credit</td>  </tr>        <tr>     <td>comment</td>     <td>string</td>     <td></td>          <td>comment</td>       <td>Advance payment</td>  </tr>    </tbody>       </table>    #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_advance_collection(product_id, client_name, loan_id, body_create_advance_collection, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            body_create_advance_collection (BodyCreateAdvanceCollection):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            AgreementSignedSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['body_create_advance_collection'] = \
            body_create_advance_collection
        return self.create_advance_collection_endpoint.call_with_http_info(**kwargs)

    def create_collection_entry(
        self,
        product_id,
        client_name,
        loan_id,
        body_create_collection_entry,
        **kwargs
    ):
        """#Create Collection Entry  # noqa: E501

        Create Collection API  This API endpoint can be used to create a collection entry.  You will get a 201 HTTP response if the collection entry gets created successfully.  You can even cross verify it by checking the principal outstanding in Loan Details Response.    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>installment_no</td>     <td>integer</td>     <td></td>          <td>Installment Number</td>       <td>1</td>  </tr>        <tr>     <td>due_date</td>     <td>string</td>     <td>date</td>          <td>Due Date for the Installment (YYYY-MM-DD)</td>       <td>2021-01-02</td>  </tr>        <tr>     <td>principal</td>     <td>number</td>     <td>float</td>          <td>Total principal amount paid for this installment</td>       <td>10000.0</td>  </tr>        <tr>     <td>interest</td>     <td>number</td>     <td>float</td>          <td>Total interest amount paid for this installement</td>       <td>100.0</td>  </tr>        <tr>     <td>other_charges</td>     <td>number</td>     <td>float</td>          <td>Other Charges</td>       <td>100.0</td>  </tr>        <tr>     <td>overdue_charges</td>     <td>number</td>     <td>float</td>          <td>Total overdue interest paid</td>       <td>100.0</td>  </tr>        <tr>     <td>penalty_charges</td>     <td>number</td>     <td>float</td>          <td>Penalty Charges Paid</td>       <td>100.0</td>  </tr>        <tr>     <td>fee_charges</td>     <td>number</td>     <td>float</td>          <td>Fee Charges Paid</td>       <td>100.0</td>  </tr>        <tr>     <td>bounce_charges</td>     <td>number</td>     <td>float</td>          <td>Bounce charges paid</td>       <td>100.0</td>  </tr>        <tr>     <td>amount</td>     <td>number</td>     <td>float</td>          <td>Total Collection Amount</td>       <td>10600.0</td>  </tr>        <tr>     <td>paid_date</td>     <td>string</td>     <td>date</td>          <td>Date when customer paid the amount (YYYY-MM-DD)</td>       <td>2021-01-02</td>  </tr>        <tr>     <td>investor_transfer_date</td>     <td>string</td>     <td>date</td>          <td>Date when originator transferred the amount to investor (YYYY-MM-DD)</td>       <td>2022-01-02</td>  </tr>        <tr>     <td>reference_no</td>     <td>string</td>     <td></td>          <td>Instrument Number of the collection received</td>       <td>UTR123456</td>  </tr>        <tr>     <td>instrument_type</td>     <td>string</td>     <td></td>          <td>Instrument Type of the collection received</td>       <td>NEFT</td>  </tr>        <tr>     <td>emi_closed</td>     <td>string</td>     <td></td>          <td>Y / N. Input Y if the installment is closed.</td>       <td>Y</td>  </tr>        <tr>     <td>foreclosure</td>     <td>string</td>     <td></td>          <td>Y / N. Input Y if the loan is foreclosed.</td>       <td>Y</td>  </tr>        <tr>     <td>payment_type</td>     <td>string</td>     <td></td>          <td>Normal / Part / Advance</td>       <td>Normal</td>  </tr>        <tr>     <td>pos</td>     <td>number</td>     <td>float</td>          <td>Before the collection record to mention pos for that loan</td>       <td>100000.0</td>  </tr>        <tr>     <td>updated_rs</td>     <td>array</td>     <td></td>          <td>Refer table UpdatedRs for attributes</td>       <td>[{&quot;installment_no&quot;:1,&quot;due_date&quot;:&quot;2021-01-02&quot;,&quot;principal&quot;:10000.0,&quot;interest&quot;:100.0,&quot;amount&quot;:10100.0,&quot;pos&quot;:10000.0,&quot;comment&quot;:&quot;Payment&quot;},{&quot;installment_no&quot;:1,&quot;due_date&quot;:&quot;2021-01-02&quot;,&quot;principal&quot;:10000.0,&quot;interest&quot;:100.0,&quot;amount&quot;:10100.0,&quot;pos&quot;:10000.0,&quot;comment&quot;:&quot;Payment&quot;}]</td>  </tr>    </tbody>       </table>   <h4>UpdatedRs</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>installment_no</td>     <td>integer</td>     <td></td>          <td>Installment Number</td>       <td>1</td>  </tr>        <tr>     <td>due_date</td>     <td>string</td>     <td>date</td>          <td>Due Date for Installment (YYYY-MM-DD)</td>       <td>2021-01-02</td>  </tr>        <tr>     <td>principal</td>     <td>number</td>     <td>float</td>          <td>Total Principal Amount</td>       <td>10000.0</td>  </tr>        <tr>     <td>interest</td>     <td>number</td>     <td>float</td>          <td>Interest</td>       <td>100.0</td>  </tr>        <tr>     <td>amount</td>     <td>number</td>     <td>float</td>          <td>Installment amount</td>       <td>10100.0</td>  </tr>        <tr>     <td>pos</td>     <td>number</td>     <td>float</td>          <td>Closing Principal Outstanding</td>       <td>10000.0</td>  </tr>        <tr>     <td>comment</td>     <td>string</td>     <td></td>          <td>comment</td>       <td>Payment</td>  </tr>    </tbody>       </table>          #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <colgroup> <col  class=\"org-right\" />  <col  class=\"org-left\" />  <col  class=\"org-left\" /> </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-right\">Code</th> <th scope=\"col\" class=\"org-left\">Message</th> <th scope=\"col\" class=\"org-left\">Reason</th> </tr> </thead>  <tbody> <tr> <td class=\"org-right\">201</td> <td class=\"org-left\">Created</td> <td class=\"org-left\">Success</td> </tr>  <tr> <td class=\"org-right\">400</td> <td class=\"org-left\">Bad Request</td> <td class=\"org-left\"><ul><li>Invalid request format</li> <li>Missing required params</li> </ul</td> </tr>  <tr> <td class=\"org-right\">401</td> <td class=\"org-left\">Unauthorized</td> <td class=\"org-left\">Invalid API Key</td> </tr>   <tr> <td class=\"org-right\">404</td> <td class=\"org-left\">Not found</td> <td class=\"org-left\">Loan not found</td> </tr>  <tr> <td class=\"org-right\">422</td> <td class=\"org-left\">Unprocessable Entity</td> <td class=\"org-left\"><ul> <li>Sum of collection payments principal for the installment should be equal to repayment schedule's principal</li> <li>Sum of collection payments interest for the installment should be equal to repayment schedule's interest</li> <li>Amount is not equal to sum of Principal, Interest, Overdue Charges, Other Charges, Fee Charges, Bounce Charges</li> <li>The installment is already paid</li> <li>Investor Transfer Date cannot be in the future</li> <li>Investor Transfer Date cannot be a Sunday</li> <li>Investor transfer date cannot be less than customer transfer date</li> <li>Paid date can't be in the future</li> <li>Paid date can't be before loan disbursement</li> <li>Payment's due date does not match repayment schedule's due date</li> <li>Previous cycle is unpaid</li> <li>Invalid Loan Status: Loan is not disbursed</li> </ul></td> </tr>   <tr> <td class=\"org-right\">500</td> <td class=\"org-left\">Internal Server Error</td> <td class=\"org-left\">Error occurred in the backend</td> </tr> </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_collection_entry(product_id, client_name, loan_id, body_create_collection_entry, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            body_create_collection_entry (BodyCreateCollectionEntry):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CreateCollectionSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['body_create_collection_entry'] = \
            body_create_collection_entry
        return self.create_collection_entry_endpoint.call_with_http_info(**kwargs)

    def create_loan(
        self,
        product_id,
        client_name,
        body_create_loan,
        **kwargs
    ):
        """#Create Loan  # noqa: E501

        Create Loan   This API endpoint can be used to create a loan.  interest_rate: Rate of interest percent per annum  All link fields should have a valid accessible URL or \"NA\".  States should be in INDIAN_STATES array (refer at the end of the table).    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>customer_type</td>     <td>string</td>     <td></td>          <td>Individual / Corporate</td>       <td>individual</td>  </tr>        <tr>     <td>customer_category</td>     <td>string</td>     <td></td>          <td>Salaried, Self-Empolyed</td>       <td>salaried</td>  </tr>        <tr>     <td>client_customer_id</td>     <td>string</td>     <td></td>          <td>Customer id as per partners CRM/LOS</td>       <td>CA_1234</td>  </tr>        <tr>     <td>title</td>     <td>string</td>     <td></td>          <td>Mr / Ms</td>       <td>Mr</td>  </tr>        <tr>     <td>first_name</td>     <td>string</td>     <td></td>          <td>First Name of the Customer</td>       <td>Neeraj</td>  </tr>        <tr>     <td>middle_name</td>     <td>string</td>     <td></td>          <td>Middle Name of the Customer</td>       <td>Kumar</td>  </tr>        <tr>     <td>last_name</td>     <td>string</td>     <td></td>          <td>Last Name of the Customer</td>       <td>Chopra</td>  </tr>        <tr>     <td>gender</td>     <td>string</td>     <td></td>          <td>M / F / O</td>       <td>M</td>  </tr>        <tr>     <td>date_of_birth</td>     <td>string</td>     <td>date</td>          <td>Date of birth in YYYY-MM-DD</td>       <td>1995-12-05</td>  </tr>        <tr>     <td>age</td>     <td>integer</td>     <td></td>          <td>Age in years</td>       <td>26</td>  </tr>        <tr>     <td>mobile_number</td>     <td>integer</td>     <td></td>          <td>Mobile Number of the Customer (10 digits)</td>       <td>9876543210</td>  </tr>        <tr>     <td>phone_number</td>     <td>integer</td>     <td></td>          <td>Contact Number of the Customer</td>       <td>4412345678</td>  </tr>        <tr>     <td>email</td>     <td>string</td>     <td></td>          <td>Permanent Email id of the Customer</td>       <td>minato@gmail.com</td>  </tr>        <tr>     <td>official_email_id</td>     <td>string</td>     <td></td>          <td>Official Email ID of the Customer</td>       <td>minato_namikaze@credavenue.com</td>  </tr>        <tr>     <td>place_of_birth</td>     <td>string</td>     <td></td>          <td>Place of birth of the Customer</td>       <td>Chennai</td>  </tr>        <tr>     <td>current_address</td>     <td>string</td>     <td></td>          <td>Current address of the applicant. Free flowing text</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>current_village</td>     <td>string</td>     <td></td>          <td>Village in which applicant is currently residing. Free flowing for now</td>       <td>Vedaranyam</td>  </tr>        <tr>     <td>current_city_tier</td>     <td>string</td>     <td></td>          <td>tier_1, tier_2 etc. for the current city</td>       <td>tier_1</td>  </tr>        <tr>     <td>current_city</td>     <td>string</td>     <td></td>          <td>City in which applicant is currently residing. Free flowing for now</td>       <td>Chennai</td>  </tr>        <tr>     <td>current_district</td>     <td>string</td>     <td></td>          <td>District in which applicant is currently residing. Free flowing for now</td>       <td>Chennai</td>  </tr>        <tr>     <td>current_state</td>     <td>string</td>     <td></td>          <td>State in which applicant is currently residing. Free flowing for now</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>current_country</td>     <td>string</td>     <td></td>          <td>Country in which applicant is currently residing. Free flowing for now</td>       <td>India</td>  </tr>        <tr>     <td>current_pincode</td>     <td>integer</td>     <td></td>          <td>Pincode of the current address</td>       <td>600089</td>  </tr>        <tr>     <td>residence_type_current_address</td>     <td>string</td>     <td></td>          <td>rented / owned / leased</td>       <td>rented</td>  </tr>        <tr>     <td>years_of_stay_in_current_address</td>     <td>integer</td>     <td></td>          <td>How many years stayed in the current address</td>       <td>5</td>  </tr>        <tr>     <td>permanent_address</td>     <td>string</td>     <td></td>          <td>Permanent address of the customer. Free flowing for now</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>permanent_city</td>     <td>string</td>     <td></td>          <td>Permanent city of the customer. Free flowing for now</td>       <td>Chennai</td>  </tr>        <tr>     <td>permanent_city_tier</td>     <td>string</td>     <td></td>          <td>tier_1, tier_2 etc. for the permanent city</td>       <td>tier_1</td>  </tr>        <tr>     <td>permanent_district</td>     <td>string</td>     <td></td>          <td>Permanent district of the customer. Free flowing for now</td>       <td>Chennai</td>  </tr>        <tr>     <td>permanent_state</td>     <td>string</td>     <td></td>          <td>Permanent state of the customer. Free flowing for now</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>permanent_pincode</td>     <td>integer</td>     <td></td>          <td>Permanent pincode of the customer. Free flowing for now</td>       <td>600089</td>  </tr>        <tr>     <td>residence_type_permanent_address</td>     <td>string</td>     <td></td>          <td>rented / owned / leased</td>       <td>owned</td>  </tr>        <tr>     <td>years_of_stay_in_permanent_address</td>     <td>integer</td>     <td></td>          <td>How many years stayed in the permanent address</td>       <td>5</td>  </tr>        <tr>     <td>mailing_address</td>     <td>string</td>     <td></td>          <td>Mailing address of the customer. Free flowing text</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>marital_status</td>     <td>string</td>     <td></td>          <td>married / unmarried</td>       <td>unmarried</td>  </tr>        <tr>     <td>religion</td>     <td>string</td>     <td></td>          <td>Religion of customer. Free flow text</td>       <td>Hindu</td>  </tr>        <tr>     <td>nationality</td>     <td>string</td>     <td></td>          <td>Nationality of customer. Free flow text</td>       <td>indian</td>  </tr>        <tr>     <td>father_name</td>     <td>string</td>     <td></td>          <td>Father name of customer. Free flow text</td>       <td>Dan Kato</td>  </tr>        <tr>     <td>mother_name</td>     <td>string</td>     <td></td>          <td>Mother name of customer; Free flow text</td>       <td>Tsunade Senju</td>  </tr>        <tr>     <td>spouse_name</td>     <td>string</td>     <td></td>          <td>Spouse name of customer; Free flow text</td>       <td>Kushina Uzumaki</td>  </tr>        <tr>     <td>education_qualification</td>     <td>string</td>     <td></td>          <td>Educational Qualifications</td>       <td>MBA</td>  </tr>        <tr>     <td>net_monthly_income</td>     <td>number</td>     <td>float</td>          <td>Monthly Income of the Customer (in Rupees)</td>       <td>10000.0</td>  </tr>        <tr>     <td>annual_income</td>     <td>number</td>     <td>float</td>          <td>Annual income of the customer in number (don’t convert into thousand/lacs etc)</td>       <td>120000.0</td>  </tr>        <tr>     <td>no_of_dependants</td>     <td>integer</td>     <td></td>          <td>Number of dependants</td>       <td>3</td>  </tr>        <tr>     <td>occupation</td>     <td>string</td>     <td></td>          <td>salaried / business / retired / self_employed and others</td>       <td>salaried</td>  </tr>        <tr>     <td>partner_score_on_the_customer</td>     <td>number</td>     <td>float</td>          <td>Partner score</td>       <td>3.0</td>  </tr>        <tr>     <td>politically_exposed</td>     <td>string</td>     <td></td>          <td>Political Exposure of the Customer</td>       <td>f</td>  </tr>        <tr>     <td>income_source</td>     <td>string</td>     <td></td>          <td>Cash / Cheque / Fund transfer</td>       <td>Cash</td>  </tr>        <tr>     <td>applicant_profession</td>     <td>string</td>     <td></td>          <td>Profession of the Customer</td>       <td>IT Consultant</td>  </tr>        <tr>     <td>caution_negative_profile</td>     <td>string</td>     <td></td>          <td>Is the customer categories as a negative profile?</td>       <td>t</td>  </tr>        <tr>     <td>udyam_number</td>     <td>string</td>     <td></td>          <td>Udyam Number of the Customer</td>       <td>UDYAM-UP-00-0123456</td>  </tr>        <tr>     <td>pan_check</td>     <td>string</td>     <td></td>          <td>Result of the pan check</td>       <td>Success</td>  </tr>        <tr>     <td>dedupe_status</td>     <td>string</td>     <td></td>          <td>Result of the dedupe</td>       <td>Failed</td>  </tr>        <tr>     <td>pan_number</td>     <td>string</td>     <td></td>          <td>PAN number of customer</td>       <td>BMMPH9018G</td>  </tr>        <tr>     <td>pan_number_link</td>     <td>array</td>     <td></td>          <td>PAN image of the document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>pan_number_link_password</td>     <td>string</td>     <td></td>          <td>PAN image password</td>       <td>12345678</td>  </tr>        <tr>     <td>form_60_link</td>     <td>array</td>     <td></td>          <td>Form 60 If applicable</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>form_60_link_password</td>     <td>string</td>     <td></td>          <td>Form 60 password If applicable</td>       <td>12345678</td>  </tr>        <tr>     <td>aadhar_number</td>     <td>string</td>     <td></td>          <td>Aadhar number of customer</td>       <td>794065231234</td>  </tr>        <tr>     <td>aadhar_number_link</td>     <td>array</td>     <td></td>          <td>Aadhar image of the document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>aadhar_number_link_password</td>     <td>string</td>     <td></td>          <td>Aadhar image password</td>       <td>12345678</td>  </tr>        <tr>     <td>voter_id_number</td>     <td>string</td>     <td></td>          <td>Voter ID Number of customer</td>       <td>RTG2291234</td>  </tr>        <tr>     <td>voting_id_link</td>     <td>array</td>     <td></td>          <td>Voter ID image of the document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>voting_id_link_password</td>     <td>string</td>     <td></td>          <td>Voter ID image password</td>       <td>12345678</td>  </tr>        <tr>     <td>driving_license_number</td>     <td>string</td>     <td></td>          <td>Driving license number of customer</td>       <td>TN0112345</td>  </tr>        <tr>     <td>driving_license_number_link</td>     <td>array</td>     <td></td>          <td>Driving License image of the document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>driving_license_number_link_password</td>     <td>string</td>     <td></td>          <td>Driving license image password</td>       <td>12345678</td>  </tr>        <tr>     <td>driving_license_expiry_date</td>     <td>string</td>     <td>date</td>          <td>Expiry date of driving license</td>       <td>2000-10-01</td>  </tr>        <tr>     <td>passport_number</td>     <td>string</td>     <td></td>          <td>Passport number of customer</td>       <td>L4018345</td>  </tr>        <tr>     <td>passport_number_link</td>     <td>array</td>     <td></td>          <td>Passport image of the document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>passport_number_link_password</td>     <td>string</td>     <td></td>          <td>Passport image password</td>       <td>12345678</td>  </tr>        <tr>     <td>video_image_link</td>     <td>array</td>     <td></td>          <td>Video KYC of the Applicant</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>video_image_link_password</td>     <td>string</td>     <td></td>          <td>Video KYC link password</td>       <td>12345678</td>  </tr>        <tr>     <td>video_kyc_detail</td>     <td>object</td>     <td></td>     <td>Refer table VideoKycDetail for attributes</td>       <td>{&quot;profile_id&quot;:&quot;AB12345&quot;,&quot;account_id&quot;:&quot;AB12345&quot;,&quot;key&quot;:&quot;abc@123&quot;,&quot;auditor&quot;:&quot;Neeraj Chopra&quot;,&quot;officer&quot;:&quot;Neeraj Chopra&quot;}</td>  </tr>        <tr>     <td>other_kyc_number</td>     <td>string</td>     <td></td>          <td>KYC Number of the Customer</td>       <td>ABC1234</td>  </tr>        <tr>     <td>other_kyc_link</td>     <td>array</td>     <td></td>          <td>KYC Image of the Customer</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>other_kyc_link_password</td>     <td>string</td>     <td></td>          <td>KYC Image link password</td>       <td>12345678</td>  </tr>        <tr>     <td>rent_agreement_link</td>     <td>array</td>     <td></td>          <td>KYC number of customer</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>rent_agreement_link_password</td>     <td>string</td>     <td></td>          <td>Rent agreement link password</td>       <td>12345678</td>  </tr>        <tr>     <td>utility_bills_link</td>     <td>array</td>     <td></td>          <td>Utility bills link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>utility_bills_link_password</td>     <td>string</td>     <td></td>          <td>Utility bills link password</td>       <td>12345678</td>  </tr>        <tr>     <td>photo_link</td>     <td>array</td>     <td></td>          <td>Photo Image of the Customer</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>photo_link_password</td>     <td>string</td>     <td></td>          <td>Photo Image password</td>       <td>12345678</td>  </tr>        <tr>     <td>employer_tier</td>     <td>string</td>     <td></td>          <td>tier_1, tier_2 etc. for  the employer</td>       <td>tier_1</td>  </tr>        <tr>     <td>employer_category</td>     <td>string</td>     <td></td>          <td>Category of the employer</td>       <td>Private</td>  </tr>        <tr>     <td>employment_type</td>     <td>string</td>     <td></td>          <td>salaried / self_employed</td>       <td>self_employed</td>  </tr>        <tr>     <td>employment_details_name</td>     <td>string</td>     <td></td>          <td>Employer name. Free flowing text</td>       <td>Credavenue</td>  </tr>        <tr>     <td>employment_details_address</td>     <td>string</td>     <td></td>          <td>Office address. Free flowing text</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>employment_details_years_of_experience</td>     <td>number</td>     <td>float</td>          <td>Applicant Number of years in the current organization</td>       <td>5.0</td>  </tr>        <tr>     <td>employment_details_designation</td>     <td>string</td>     <td></td>          <td>Designation in current role, free flowing text</td>       <td>Manager</td>  </tr>        <tr>     <td>employement_vintage_current_organisation</td>     <td>integer</td>     <td></td>          <td>No of Years in the same Organisation</td>       <td>3</td>  </tr>        <tr>     <td>total_work_experience</td>     <td>number</td>     <td>float</td>          <td>Total years of experience</td>       <td>5.0</td>  </tr>        <tr>     <td>payslip_link</td>     <td>array</td>     <td></td>          <td>Last three month pay slip</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>payslip_link_password</td>     <td>string</td>     <td></td>          <td>Last three month pay slip link password</td>       <td>12345678</td>  </tr>        <tr>     <td>tds_certificate_link</td>     <td>array</td>     <td></td>          <td>Last Three Year TDS Certificate Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>tds_certificate_link_password</td>     <td>string</td>     <td></td>          <td>Last Three Year TDS Certificate Link</td>       <td>12345678</td>  </tr>        <tr>     <td>business</td>     <td>object</td>     <td></td>    <td>Refer table Business for attributes</td>       <td>{&quot;name_of_business&quot;:&quot;Credavenue&quot;,&quot;nature_of_business&quot;:&quot;Electronics&quot;,&quot;type_of_constitution&quot;:&quot;partnership&quot;,&quot;type_of_ownership&quot;:&quot;type_of_ownership_35&quot;,&quot;registration_date&quot;:&quot;1995-01-01&quot;,&quot;incorporation_date&quot;:&quot;1995-01-01&quot;,&quot;industry_type&quot;:&quot;trading&quot;,&quot;sector_type&quot;:&quot;Financial services&quot;,&quot;sub_sector_type&quot;:&quot;Banking&quot;,&quot;business_vintage&quot;:4,&quot;business_registered_office_address&quot;:&quot;221B, Baker Street, Chennai&quot;,&quot;business_registered_office_district&quot;:&quot;Chennai&quot;,&quot;business_registered_office_city&quot;:&quot;Chennai&quot;,&quot;business_registered_office_state&quot;:&quot;tamil_nadu&quot;,&quot;business_registered_office_pincode&quot;:600025,&quot;business_mailing_office_address&quot;:&quot;221B, Baker Street, Chennai&quot;,&quot;business_mailing_office_city&quot;:&quot;Chennai&quot;,&quot;business_mailing_office_state&quot;:&quot;Chennai&quot;,&quot;business_mailing_office_pincode&quot;:600025,&quot;business_registered_office_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_registered_office_link_password&quot;:&quot;12345678&quot;,&quot;business_mailing_office_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_mailing_office_link_password&quot;:&quot;12345678&quot;,&quot;business_phone_number&quot;:[9876543210,9876543210],&quot;business_email_id&quot;:[&quot;holmes@credavenue.com&quot;,&quot;holmes@credavenue.com&quot;],&quot;business_partner_score&quot;:3.0,&quot;business_pan_number&quot;:&quot;BMMPG9018G&quot;,&quot;business_pan_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_pan_link_password&quot;:&quot;12345678&quot;,&quot;business_rc_number&quot;:&quot;U72200MH2009PLC123456&quot;,&quot;business_rc_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_rc_link_password&quot;:&quot;12345678&quot;,&quot;business_gst_number&quot;:&quot;29ABCDE1234F2Z5&quot;,&quot;business_gst_copy_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_gst_copy_link_password&quot;:&quot;12345678&quot;,&quot;business_udyog_aadhar_number&quot;:&quot;794065346725&quot;,&quot;business_udyog_aadhar_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_udyog_aadhar_link_password&quot;:&quot;12345678&quot;,&quot;business_ssi_number&quot;:&quot;7589297314&quot;,&quot;business_ssi_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_ssi_link_password&quot;:&quot;12345678&quot;,&quot;business_shops_est_number&quot;:&quot;2017086025&quot;,&quot;business_shops_est_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_shops_est_link_password&quot;:&quot;12345678&quot;,&quot;business_factory_regn_number&quot;:&quot;TVEIQ0615232&quot;,&quot;business_factory_regn_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_factory_regn_link_password&quot;:&quot;12345678&quot;,&quot;business_trade_license_number&quot;:&quot;EA131102014709112&quot;,&quot;business_trade_license_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_trade_license_link_password&quot;:&quot;12345678&quot;,&quot;business_place_photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_place_photo_link_password&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_continuity_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;business_continuity_proof_link_password&quot;:&quot;12345678&quot;,&quot;other_business_address_proof_number&quot;:&quot;ABC12345&quot;,&quot;other_business_address_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_business_address_proof_link_password&quot;:&quot;12345678&quot;,&quot;no_of_business_authorised_persons&quot;:3,&quot;partnerships&quot;:[&quot;{&quot;partnership_type&quot;:&quot;director&quot;,&quot;name&quot;:&quot;Neeraj Chopra&quot;,&quot;poi_number&quot;:&quot;794065346728&quot;,&quot;poi_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;poi_link_password&quot;:&quot;12345678&quot;,&quot;poa_number&quot;:&quot;L4018348&quot;,&quot;poa_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;poa_link_password&quot;:&quot;12345678&quot;,&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link_password&quot;:&quot;12345678&quot;}&quot;,&quot;{&quot;partnership_type&quot;:&quot;director&quot;,&quot;name&quot;:&quot;Neeraj Chopra&quot;,&quot;poi_number&quot;:&quot;794065346728&quot;,&quot;poi_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;poi_link_password&quot;:&quot;12345678&quot;,&quot;poa_number&quot;:&quot;L4018348&quot;,&quot;poa_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;poa_link_password&quot;:&quot;12345678&quot;,&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link_password&quot;:&quot;12345678&quot;}&quot;],&quot;partnership_detail&quot;:&quot;{&quot;partnership_firm_pan&quot;:&quot;BMMPG9018G&quot;,&quot;partnership_pan_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;partnership_pan_link_password&quot;:&quot;12345678&quot;,&quot;partnership_deed_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;partnership_deed_link_password&quot;:&quot;12345678&quot;,&quot;beneficiary_owner_details_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;beneficiary_owner_details_link_password&quot;:&quot;12345678&quot;}&quot;,&quot;private_entity_detail&quot;:&quot;{&quot;cin_number&quot;:&quot;L21091KA2019OPC141331&quot;,&quot;cin_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;cin_link_password&quot;:&quot;12345678&quot;,&quot;moa_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;moa_link_password&quot;:&quot;12345678&quot;,&quot;aoa_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;aoa_link_password&quot;:&quot;12345678&quot;,&quot;board_resoultion_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;board_resoultion_link_password&quot;:&quot;12345678&quot;,&quot;share_holding_pattern_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;share_holding_pattern_link_password&quot;:&quot;12345678&quot;,&quot;other_company_proof&quot;:&quot;ABC12345&quot;,&quot;other_company_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_company_proof_link_password&quot;:&quot;12345678&quot;}&quot;}</td>  </tr>        <tr>     <td>guarantors</td>     <td>array</td>     <td></td>          <td>Refer table Guarantors for attributes</td>       <td>[{&quot;relationship_with_applicant&quot;:&quot;father&quot;,&quot;first_name&quot;:&quot;Minato&quot;,&quot;middle_name&quot;:&quot;Kumar&quot;,&quot;last_name&quot;:&quot;Namikaze&quot;,&quot;date_of_birth&quot;:&quot;1995-12-05&quot;,&quot;age&quot;:26,&quot;gender&quot;:&quot;M&quot;,&quot;current_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;current_district&quot;:&quot;Chennai&quot;,&quot;current_city&quot;:&quot;Chennai&quot;,&quot;current_city_tier&quot;:&quot;tier_1&quot;,&quot;current_state&quot;:&quot;tamil_nadu&quot;,&quot;current_pincode&quot;:600089,&quot;years_of_stay_in_current_address&quot;:5,&quot;residence_type_current_address&quot;:&quot;rented&quot;,&quot;permanent_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;permanent_district&quot;:&quot;Chennai&quot;,&quot;permanent_city&quot;:&quot;Chennai&quot;,&quot;permanent_city_tier&quot;:&quot;tier_1&quot;,&quot;permanent_state&quot;:&quot;tamil_nadu&quot;,&quot;permanent_pincode&quot;:600089,&quot;years_of_stay_in_permanent_address&quot;:5,&quot;residence_type_permanent_address&quot;:&quot;owned&quot;,&quot;mobile_number&quot;:9876543210,&quot;email&quot;:&quot;minato@gmail.com&quot;,&quot;pan_number&quot;:&quot;BMMPG9018Y&quot;,&quot;pan_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;pan_number_link_password&quot;:&quot;12345678&quot;,&quot;aadhar_number&quot;:&quot;794065346725&quot;,&quot;aadhar_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;aadhar_number_link_password&quot;:&quot;12345678&quot;,&quot;voter_id_number&quot;:&quot;RTG2291234&quot;,&quot;voting_id_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;voting_id_number_link_password&quot;:&quot;12345678&quot;,&quot;driving_license_number&quot;:&quot;TN01123345&quot;,&quot;driving_licence_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;driving_licence_number_link_password&quot;:&quot;12345678&quot;,&quot;passport_number&quot;:&quot;L4018345&quot;,&quot;passport_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;passport_number_link_password&quot;:&quot;12345678&quot;,&quot;video_image_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;video_image_link_password&quot;:&quot;12345678&quot;,&quot;video_kyc_detail&quot;:&quot;{&quot;profile_id&quot;:&quot;abc12345&quot;,&quot;account_id&quot;:&quot;abc12345&quot;,&quot;key&quot;:&quot;abc@123&quot;,&quot;auditor&quot;:&quot;Neeraj Chopra&quot;,&quot;officer&quot;:&quot;Neeraj Chopra&quot;}&quot;,&quot;other_kyc_number&quot;:&quot;other_kyc_number_40&quot;,&quot;other_kyc_number_link&quot;:[&quot;abc12345&quot;,&quot;abc12345&quot;],&quot;other_kyc_number_link_password&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;rent_agreement_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;rent_agreement_link_password&quot;:&quot;12345678&quot;,&quot;utility_bills_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;utility_bills_link_password&quot;:&quot;12345678&quot;,&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link_password&quot;:&quot;12345678&quot;,&quot;marital_status&quot;:&quot;unmarried&quot;,&quot;religion&quot;:&quot;Hindu&quot;,&quot;nationality&quot;:&quot;indian&quot;,&quot;bureau_score&quot;:700,&quot;bureau_report_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bureau_report_link_password&quot;:&quot;12345678&quot;,&quot;partner_score&quot;:3.0},{&quot;relationship_with_applicant&quot;:&quot;father&quot;,&quot;first_name&quot;:&quot;Minato&quot;,&quot;middle_name&quot;:&quot;Kumar&quot;,&quot;last_name&quot;:&quot;Namikaze&quot;,&quot;date_of_birth&quot;:&quot;1995-12-05&quot;,&quot;age&quot;:26,&quot;gender&quot;:&quot;M&quot;,&quot;current_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;current_district&quot;:&quot;Chennai&quot;,&quot;current_city&quot;:&quot;Chennai&quot;,&quot;current_city_tier&quot;:&quot;tier_1&quot;,&quot;current_state&quot;:&quot;tamil_nadu&quot;,&quot;current_pincode&quot;:600089,&quot;years_of_stay_in_current_address&quot;:5,&quot;residence_type_current_address&quot;:&quot;rented&quot;,&quot;permanent_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;permanent_district&quot;:&quot;Chennai&quot;,&quot;permanent_city&quot;:&quot;Chennai&quot;,&quot;permanent_city_tier&quot;:&quot;tier_1&quot;,&quot;permanent_state&quot;:&quot;tamil_nadu&quot;,&quot;permanent_pincode&quot;:600089,&quot;years_of_stay_in_permanent_address&quot;:5,&quot;residence_type_permanent_address&quot;:&quot;owned&quot;,&quot;mobile_number&quot;:9876543210,&quot;email&quot;:&quot;minato@gmail.com&quot;,&quot;pan_number&quot;:&quot;BMMPG9018Y&quot;,&quot;pan_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;pan_number_link_password&quot;:&quot;12345678&quot;,&quot;aadhar_number&quot;:&quot;794065346725&quot;,&quot;aadhar_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;aadhar_number_link_password&quot;:&quot;12345678&quot;,&quot;voter_id_number&quot;:&quot;RTG2291234&quot;,&quot;voting_id_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;voting_id_number_link_password&quot;:&quot;12345678&quot;,&quot;driving_license_number&quot;:&quot;TN01123345&quot;,&quot;driving_licence_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;driving_licence_number_link_password&quot;:&quot;12345678&quot;,&quot;passport_number&quot;:&quot;L4018345&quot;,&quot;passport_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;passport_number_link_password&quot;:&quot;12345678&quot;,&quot;video_image_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;video_image_link_password&quot;:&quot;12345678&quot;,&quot;video_kyc_detail&quot;:&quot;{&quot;profile_id&quot;:&quot;abc12345&quot;,&quot;account_id&quot;:&quot;abc12345&quot;,&quot;key&quot;:&quot;abc@123&quot;,&quot;auditor&quot;:&quot;Neeraj Chopra&quot;,&quot;officer&quot;:&quot;Neeraj Chopra&quot;}&quot;,&quot;other_kyc_number&quot;:&quot;other_kyc_number_15&quot;,&quot;other_kyc_number_link&quot;:[&quot;abc12345&quot;,&quot;abc12345&quot;],&quot;other_kyc_number_link_password&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;rent_agreement_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;rent_agreement_link_password&quot;:&quot;12345678&quot;,&quot;utility_bills_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;utility_bills_link_password&quot;:&quot;12345678&quot;,&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link_password&quot;:&quot;12345678&quot;,&quot;marital_status&quot;:&quot;unmarried&quot;,&quot;religion&quot;:&quot;Hindu&quot;,&quot;nationality&quot;:&quot;indian&quot;,&quot;bureau_score&quot;:700,&quot;bureau_report_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bureau_report_link_password&quot;:&quot;12345678&quot;,&quot;partner_score&quot;:3.0}]</td>  </tr>        <tr>     <td>co_applicants</td>     <td>array</td>     <td></td>          <td>Refer table CoApplicants for attributes</td>       <td>[{&quot;relationship_with_applicant&quot;:&quot;father&quot;,&quot;first_name&quot;:&quot;Minato&quot;,&quot;middle_name&quot;:&quot;Kumar&quot;,&quot;last_name&quot;:&quot;Namikaze&quot;,&quot;gender&quot;:&quot;M&quot;,&quot;date_of_birth&quot;:&quot;1995-12-05&quot;,&quot;age&quot;:26,&quot;mobile_number&quot;:9876543210,&quot;email&quot;:&quot;minato@gmail.com&quot;,&quot;current_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;current_city&quot;:&quot;Chennai&quot;,&quot;current_city_tier&quot;:&quot;tier_1&quot;,&quot;current_district&quot;:&quot;Chennai&quot;,&quot;current_state&quot;:&quot;tamil_nadu&quot;,&quot;current_pincode&quot;:600089,&quot;residence_type_current_address&quot;:&quot;rented&quot;,&quot;years_of_stay_in_current_address&quot;:5,&quot;permanent_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;permanent_city&quot;:&quot;Chennai&quot;,&quot;permanent_city_tier&quot;:&quot;tier_1&quot;,&quot;permanent_district&quot;:&quot;Chennai&quot;,&quot;permanent_state&quot;:&quot;tamil_nadu&quot;,&quot;permanent_pincode&quot;:600089,&quot;residence_type_permanent_address&quot;:&quot;owned&quot;,&quot;years_of_stay_in_permanent_address&quot;:5,&quot;marital_status&quot;:&quot;unmarried&quot;,&quot;religion&quot;:&quot;buddhist&quot;,&quot;nationality&quot;:&quot;indian&quot;,&quot;father_name&quot;:&quot;Dan Kato&quot;,&quot;mother_name&quot;:&quot;Tsunade Senju&quot;,&quot;spouse_name&quot;:&quot;Kushina Uzumaki&quot;,&quot;education&quot;:&quot;Hokage&quot;,&quot;annual_income&quot;:120000.0,&quot;income_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;income_proof_link_password&quot;:&quot;12345678&quot;,&quot;bank_statement_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bank_statement_link_password&quot;:&quot;12345678&quot;,&quot;pan_number&quot;:&quot;BMMPG9018Y&quot;,&quot;pan_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;pan_number_link_password&quot;:&quot;12345678&quot;,&quot;aadhar_number&quot;:&quot;794065346725&quot;,&quot;aadhar_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;aadhar_number_link_password&quot;:&quot;12345678&quot;,&quot;voter_id_number&quot;:&quot;RTG2291234&quot;,&quot;voting_id_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;voting_id_number_link_password&quot;:&quot;12345678&quot;,&quot;driving_license_number&quot;:&quot;TN01123345&quot;,&quot;driving_licence_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;driving_licence_number_link_password&quot;:&quot;12345678&quot;,&quot;passport_number&quot;:&quot;L4018345&quot;,&quot;passport_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;passport_number_link_password&quot;:&quot;12345678&quot;,&quot;video_image_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;video_image_link_password&quot;:&quot;12345678&quot;,&quot;video_kyc_detail&quot;:&quot;{&quot;profile_id&quot;:&quot;ABC12345&quot;,&quot;account_id&quot;:&quot;ABC12345&quot;,&quot;key&quot;:&quot;abc_123&quot;,&quot;auditor&quot;:&quot;Neeraj Chopra&quot;,&quot;officer&quot;:&quot;Neeraj Chopra&quot;}&quot;,&quot;other_kyc_number&quot;:&quot;ABC12456&quot;,&quot;other_kyc_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_kyc_number_link_password&quot;:&quot;12345678&quot;,&quot;rent_agreement_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;rent_agreement_link_password&quot;:&quot;12345678&quot;,&quot;utility_bills_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;utility_bills_link_password&quot;:&quot;12345678&quot;,&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link_password&quot;:&quot;12345678&quot;,&quot;bureau_score&quot;:700,&quot;bureau_report_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bureau_report_link_password&quot;:&quot;12345678&quot;,&quot;employment_details_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;employment_details_link_password&quot;:&quot;12345678&quot;,&quot;partner_score&quot;:3.0},{&quot;relationship_with_applicant&quot;:&quot;father&quot;,&quot;first_name&quot;:&quot;Minato&quot;,&quot;middle_name&quot;:&quot;Kumar&quot;,&quot;last_name&quot;:&quot;Namikaze&quot;,&quot;gender&quot;:&quot;M&quot;,&quot;date_of_birth&quot;:&quot;1995-12-05&quot;,&quot;age&quot;:26,&quot;mobile_number&quot;:9876543210,&quot;email&quot;:&quot;minato@gmail.com&quot;,&quot;current_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;current_city&quot;:&quot;Chennai&quot;,&quot;current_city_tier&quot;:&quot;tier_1&quot;,&quot;current_district&quot;:&quot;Chennai&quot;,&quot;current_state&quot;:&quot;tamil_nadu&quot;,&quot;current_pincode&quot;:600089,&quot;residence_type_current_address&quot;:&quot;rented&quot;,&quot;years_of_stay_in_current_address&quot;:5,&quot;permanent_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;permanent_city&quot;:&quot;Chennai&quot;,&quot;permanent_city_tier&quot;:&quot;tier_1&quot;,&quot;permanent_district&quot;:&quot;Chennai&quot;,&quot;permanent_state&quot;:&quot;tamil_nadu&quot;,&quot;permanent_pincode&quot;:600089,&quot;residence_type_permanent_address&quot;:&quot;owned&quot;,&quot;years_of_stay_in_permanent_address&quot;:5,&quot;marital_status&quot;:&quot;unmarried&quot;,&quot;religion&quot;:&quot;buddhist&quot;,&quot;nationality&quot;:&quot;indian&quot;,&quot;father_name&quot;:&quot;Dan Kato&quot;,&quot;mother_name&quot;:&quot;Tsunade Senju&quot;,&quot;spouse_name&quot;:&quot;Kushina Uzumaki&quot;,&quot;education&quot;:&quot;Hokage&quot;,&quot;annual_income&quot;:120000.0,&quot;income_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;income_proof_link_password&quot;:&quot;12345678&quot;,&quot;bank_statement_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bank_statement_link_password&quot;:&quot;12345678&quot;,&quot;pan_number&quot;:&quot;BMMPG9018Y&quot;,&quot;pan_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;pan_number_link_password&quot;:&quot;12345678&quot;,&quot;aadhar_number&quot;:&quot;794065346725&quot;,&quot;aadhar_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;aadhar_number_link_password&quot;:&quot;12345678&quot;,&quot;voter_id_number&quot;:&quot;RTG2291234&quot;,&quot;voting_id_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;voting_id_number_link_password&quot;:&quot;12345678&quot;,&quot;driving_license_number&quot;:&quot;TN01123345&quot;,&quot;driving_licence_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;driving_licence_number_link_password&quot;:&quot;12345678&quot;,&quot;passport_number&quot;:&quot;L4018345&quot;,&quot;passport_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;passport_number_link_password&quot;:&quot;12345678&quot;,&quot;video_image_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;video_image_link_password&quot;:&quot;12345678&quot;,&quot;video_kyc_detail&quot;:&quot;{&quot;profile_id&quot;:&quot;ABC12345&quot;,&quot;account_id&quot;:&quot;ABC12345&quot;,&quot;key&quot;:&quot;abc_123&quot;,&quot;auditor&quot;:&quot;Neeraj Chopra&quot;,&quot;officer&quot;:&quot;Neeraj Chopra&quot;}&quot;,&quot;other_kyc_number&quot;:&quot;ABC12456&quot;,&quot;other_kyc_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_kyc_number_link_password&quot;:&quot;12345678&quot;,&quot;rent_agreement_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;rent_agreement_link_password&quot;:&quot;12345678&quot;,&quot;utility_bills_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;utility_bills_link_password&quot;:&quot;12345678&quot;,&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link_password&quot;:&quot;12345678&quot;,&quot;bureau_score&quot;:700,&quot;bureau_report_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bureau_report_link_password&quot;:&quot;12345678&quot;,&quot;employment_details_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;employment_details_link_password&quot;:&quot;12345678&quot;,&quot;partner_score&quot;:3.0}]</td>  </tr>        <tr>     <td>bank_statement</td>     <td>object</td>     <td></td>    <td>Refer table BankStatement for attributes</td>       <td>{&quot;bank_statement_savings_account_12_months_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bank_statement_savings_account_12_months_link_password&quot;:&quot;12345678&quot;,&quot;bank_statement_current_account_12_months_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bank_statement_current_account_12_months_link_password&quot;:&quot;12345678&quot;,&quot;no_of_inward_chq_returns_savings_account&quot;:3,&quot;no_of_outward_chq_returns_savings_account&quot;:4,&quot;no_of_inward_chq_returns_current_account&quot;:5,&quot;no_of_outward_chq_returns_current_account&quot;:6,&quot;bank_account_type_for_assessment&quot;:&quot;savings&quot;,&quot;perfios_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;perfios_link_password&quot;:&quot;12345678&quot;,&quot;perfios_json_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;perfios_json_link_password&quot;:&quot;12345678&quot;,&quot;perfios_json&quot;:[&quot;NA&quot;,&quot;NA&quot;],&quot;finbit_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;finbit_link_password&quot;:&quot;12345678&quot;,&quot;finbit_json_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;finbit_json_link_password&quot;:&quot;12345678&quot;,&quot;finbit_json&quot;:[&quot;NA&quot;,&quot;NA&quot;],&quot;abb&quot;:25000.0,&quot;abd&quot;:10000.0,&quot;credit_summation&quot;:&quot;50000&quot;}</td>  </tr>        <tr>     <td>name_of_bureau</td>     <td>string</td>     <td></td>          <td>Cibil / Experian / Himark</td>       <td>cibil</td>  </tr>        <tr>     <td>bureau_vintage</td>     <td>integer</td>     <td></td>          <td>Vintage in the bureau. Number of years from the first trade line</td>       <td>3</td>  </tr>        <tr>     <td>bureau_score</td>     <td>integer</td>     <td></td>          <td>Bureau Score</td>       <td>650</td>  </tr>        <tr>     <td>bureau_report_json_link</td>     <td>array</td>     <td></td>          <td>Document of the bureau</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bureau_report_json_link_password</td>     <td>string</td>     <td></td>          <td>Document of the bureau - Password</td>       <td>12345678</td>  </tr>        <tr>     <td>bureau_json_link</td>     <td>array</td>     <td></td>          <td>Bureau Json placed in a link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bureau_json_link_password</td>     <td>string</td>     <td></td>          <td>Bureau Json placed in a link - Password</td>       <td>12345678</td>  </tr>        <tr>     <td>bureau_json</td>     <td>array</td>     <td></td>          <td>Bureau Json response</td>       <td>[&quot;NA&quot;, &quot;NA&quot;]</td>  </tr>        <tr>     <td>commercial_bureau_score</td>     <td>integer</td>     <td></td>          <td>CRIF score</td>       <td>330</td>  </tr>        <tr>     <td>commercial_bureau_score_link</td>     <td>array</td>     <td></td>          <td>Commercial Bureau Document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>commercial_bureau_score_link_password</td>     <td>string</td>     <td></td>          <td>Commercial Bureau Document Password</td>       <td>12345678</td>  </tr>        <tr>     <td>partner_score_on_the_customer_including_bureau_report</td>     <td>number</td>     <td>float</td>          <td>Score Captured by the Partner</td>       <td>800.0</td>  </tr>        <tr>     <td>total_existing_obligations</td>     <td>integer</td>     <td></td>          <td>Total Existing Obligations basis the Bureau Report</td>       <td>25000</td>  </tr>        <tr>     <td>credit_card_limit</td>     <td>integer</td>     <td></td>          <td>Total Credit Card Limit basis the Bureau Report</td>       <td>30000</td>  </tr>        <tr>     <td>no_of_credit_cards</td>     <td>integer</td>     <td></td>          <td>Total Number of Credit Cards per Bureau Report</td>       <td>3</td>  </tr>        <tr>     <td>total_number_of_unsecured_loans</td>     <td>integer</td>     <td></td>          <td>Total Number of Unsecured Loans per Bureau Report</td>       <td>2</td>  </tr>        <tr>     <td>value_of_total_unsecured_loans</td>     <td>number</td>     <td>float</td>          <td>Total value of unsecured loans</td>       <td>20000.0</td>  </tr>        <tr>     <td>total_number_of_loans</td>     <td>integer</td>     <td></td>          <td>Total Number of Loans per Bureau Report</td>       <td>2</td>  </tr>        <tr>     <td>value_of_total_loans</td>     <td>number</td>     <td>float</td>          <td>Total value of loans</td>       <td>20000.0</td>  </tr>        <tr>     <td>number_of_enquiries_3months</td>     <td>integer</td>     <td></td>          <td>Number of Enquiries in the Last 3 Months per Bureau Report</td>       <td>3</td>  </tr>        <tr>     <td>number_of_enquiries_6months</td>     <td>integer</td>     <td></td>          <td>Number of Enquiries in the Last 6 Months per Bureau Report</td>       <td>3</td>  </tr>        <tr>     <td>number_of_enquiries_12months</td>     <td>integer</td>     <td></td>          <td>Number of Enquiries in the Last 12 Months per Bureau Report</td>       <td>4</td>  </tr>        <tr>     <td>number_of_writeoff_suitfiled_settled_in_the_last_12_months</td>     <td>integer</td>     <td></td>          <td>Number of Writeoff Suitfiled Settled in the Last 12 Months</td>       <td>4</td>  </tr>        <tr>     <td>max_dpd_tradeline_last_12months</td>     <td>integer</td>     <td></td>          <td>Maximum DPD Tradeline in the Last 12 Months</td>       <td>6</td>  </tr>        <tr>     <td>max_overdue_tradeline</td>     <td>integer</td>     <td></td>          <td>Maximum Overdue Tradeline</td>       <td>6</td>  </tr>        <tr>     <td>total_overdue_amount_in_last_12m</td>     <td>number</td>     <td>float</td>          <td>Total Overdue Amount in the Last 12 Months</td>       <td>10000.0</td>  </tr>        <tr>     <td>amount_of_loan_settled_in_last_12m</td>     <td>number</td>     <td>float</td>          <td>Loan Amount Settled in the Last 12 Months</td>       <td>25000.0</td>  </tr>        <tr>     <td>nature_of_loan_settled1</td>     <td>string</td>     <td></td>          <td>The nature of past loan settlement if any (Loan 1) - Settled/ Closed/ Written-off</td>       <td>settled</td>  </tr>        <tr>     <td>nature_of_loan_settled2</td>     <td>string</td>     <td></td>          <td>The nature of past loan settlement if any (Loan 2) - Settled/ Closed/ Written-off</td>       <td>closed</td>  </tr>        <tr>     <td>total_emi_bounces</td>     <td>integer</td>     <td></td>          <td>Total EMI Bounces</td>       <td>3</td>  </tr>        <tr>     <td>bounces_in_last_6m</td>     <td>integer</td>     <td></td>          <td>EMI Bounces in the Last 6 Months</td>       <td>3</td>  </tr>        <tr>     <td>bounces_in_last_12m</td>     <td>integer</td>     <td></td>          <td>EMI Bounces in the Last 12 Months</td>       <td>3</td>  </tr>        <tr>     <td>bureau_validity_date</td>     <td>string</td>     <td>date</td>          <td>Validity of bureau report</td>       <td>1996-01-01</td>  </tr>        <tr>     <td>financial_data</td>     <td>object</td>     <td></td>     <td>Refer table FinancialData for attributes</td>       <td>{&quot;annual_business_turnover&quot;:1000000.0,&quot;annual_gross_profit&quot;:8000000.0,&quot;annual_business_ebitda&quot;:5000000.0,&quot;monthly_net_profit&quot;:14000.0,&quot;annual_net_income&quot;:4000000,&quot;annual_net_profit&quot;:30000000.0,&quot;gst_annual_turnover&quot;:20000,&quot;gst_return_year_1_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;gst_return_year_1_link_password&quot;:&quot;12345678&quot;,&quot;gst_return_year_2_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;gst_return_year_2_link_password&quot;:&quot;12345678&quot;,&quot;gst_return_year_3_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;gst_return_year_3_link_password&quot;:&quot;12345678&quot;,&quot;it_return_year_1_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;it_return_year_1_link_password&quot;:&quot;12345678&quot;,&quot;it_return_year_2_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;it_return_year_2_link_password&quot;:&quot;12345678&quot;,&quot;it_return_year_3_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;it_return_year_3_link_password&quot;:&quot;12345678&quot;,&quot;other_income_assesment_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_income_assesment_proof_link_password&quot;:&quot;12345678&quot;,&quot;cam_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;cam_link_password&quot;:&quot;12345678&quot;,&quot;cfa_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;cfa_link_password&quot;:&quot;12345678&quot;}</td>  </tr>        <tr>     <td>abb_emi_ratio</td>     <td>number</td>     <td>float</td>          <td>Average Bank balance to EMI</td>       <td>2.0</td>  </tr>        <tr>     <td>dscr</td>     <td>number</td>     <td>float</td>          <td>Debt Service Coverage Ratio</td>       <td>3.0</td>  </tr>        <tr>     <td>foir</td>     <td>number</td>     <td>float</td>          <td>Fixed Obligations to Income Ratio</td>       <td>4.0</td>  </tr>        <tr>     <td>ltr</td>     <td>number</td>     <td>float</td>          <td>Loan Transfer Ratio</td>       <td>5.0</td>  </tr>        <tr>     <td>insr</td>     <td>number</td>     <td>float</td>          <td>INSR</td>       <td>6.0</td>  </tr>        <tr>     <td>eligibility_as_per_insr</td>     <td>number</td>     <td>float</td>          <td>Eligibility as per INSR</td>       <td>10000.0</td>  </tr>        <tr>     <td>eligibility_as_per_foir</td>     <td>number</td>     <td>float</td>          <td>Eligibility as per FOIR</td>       <td>20000.0</td>  </tr>        <tr>     <td>eligibility_as_per_ltv</td>     <td>number</td>     <td>float</td>          <td>Eligibility as per LTV</td>       <td>30000.0</td>  </tr>        <tr>     <td>eligibility_loan_amount</td>     <td>number</td>     <td>float</td>          <td>Eligibility Loan amount</td>       <td>40000.0</td>  </tr>        <tr>     <td>fcf</td>     <td>integer</td>     <td></td>          <td>Free Cash Flows</td>       <td>24000</td>  </tr>        <tr>     <td>emi_obligations</td>     <td>integer</td>     <td></td>          <td>Existing EMI obligations</td>       <td>20000</td>  </tr>        <tr>     <td>viability_ratio</td>     <td>number</td>     <td>float</td>          <td>Net Assets/ Debt</td>       <td>2.0</td>  </tr>        <tr>     <td>product_id</td>     <td>string</td>     <td></td>          <td>Product ID created in CA</td>       <td>CONSUMER_001</td>  </tr>        <tr>     <td>client_loan_id</td>     <td>string</td>     <td></td>          <td>Loan ID as per Partner&#39;s LMS</td>       <td>LOAN00001</td>  </tr>        <tr>     <td>application_id</td>     <td>string</td>     <td></td>          <td>Application ID as per Partner&#39;s CRM/LOS</td>       <td>LOAN00001</td>  </tr>        <tr>     <td>loan_cycle</td>     <td>integer</td>     <td></td>          <td>Denotes the Cycle number of the loan given to the borrower</td>       <td>0</td>  </tr>        <tr>     <td>partner_branch_code</td>     <td>string</td>     <td></td>          <td>Branch Code as per Partner&#39;s LOS</td>       <td>ABC123</td>  </tr>        <tr>     <td>partner_branch_name</td>     <td>string</td>     <td></td>          <td>Branch Name as per Partner&#39;s LOS</td>       <td>ABC123</td>  </tr>        <tr>     <td>product_type</td>     <td>string</td>     <td></td>          <td></td>       <td>Consumer</td>  </tr>        <tr>     <td>partner_product_code</td>     <td>string</td>     <td></td>          <td>Product code as per partners LOS/LMS</td>       <td>CONSUMER_001</td>  </tr>        <tr>     <td>partner_scheme_code</td>     <td>string</td>     <td></td>          <td></td>       <td>partner_scheme_code_54</td>  </tr>        <tr>     <td>category</td>     <td>string</td>     <td></td>          <td>secured / unsecured</td>       <td>secured</td>  </tr>        <tr>     <td>sub_category</td>     <td>string</td>     <td></td>          <td>bt / top_up / fresh</td>       <td>fresh</td>  </tr>        <tr>     <td>purpose</td>     <td>string</td>     <td></td>          <td>Free flowing text</td>       <td>Personal Loan</td>  </tr>        <tr>     <td>disbursement_type</td>     <td>string</td>     <td></td>          <td>Tranche / Single Disbursement</td>       <td>single</td>  </tr>        <tr>     <td>number_of_tranches</td>     <td>integer</td>     <td></td>          <td>Total number of Tranches</td>       <td>2</td>  </tr>        <tr>     <td>end_borrower_amount</td>     <td>number</td>     <td>float</td>          <td>End borrower amount in case of multiple disbursals</td>       <td>40000.0</td>  </tr>        <tr>     <td>existing_lender_amount</td>     <td>number</td>     <td>float</td>          <td>Existing Lender Amount in case of multiple disbursals</td>       <td>10000.0</td>  </tr>        <tr>     <td>principal_amount</td>     <td>number</td>     <td>float</td>          <td>Total loan amount in Rs (Overall amount to the borrower)</td>       <td>100000.0</td>  </tr>        <tr>     <td>interest_rate</td>     <td>number</td>     <td>float</td>          <td>Reducing balance interest rate of the customer in %. This is the interest rate to be mentioned in the sanction letter as well</td>       <td>20.2</td>  </tr>        <tr>     <td>interest_type</td>     <td>string</td>     <td></td>          <td>Interest Type of the Loan</td>       <td>floating</td>  </tr>        <tr>     <td>tenure</td>     <td>integer</td>     <td></td>          <td>Tenure of the loan</td>       <td>12</td>  </tr>        <tr>     <td>tenure_frequency</td>     <td>string</td>     <td></td>          <td>Whether the tenure is monthly/yearly/weekly</td>       <td>monthly</td>  </tr>        <tr>     <td>repayment_frequency</td>     <td>string</td>     <td></td>          <td>Daily/Weekly/Once in 2 weeks/Monthly/Quarterly/Bullet</td>       <td>monthly</td>  </tr>        <tr>     <td>number_of_repayments</td>     <td>integer</td>     <td></td>          <td>Number of repayments as per the repayment schedule</td>       <td>12</td>  </tr>        <tr>     <td>first_repayment_date</td>     <td>string</td>     <td>date</td>          <td>First repayment date as per the repayment schedule (YYYY-MM-DD)</td>       <td>2021-08-30</td>  </tr>        <tr>     <td>repayment_mode</td>     <td>string</td>     <td></td>          <td>Cash / NACH</td>       <td>nach</td>  </tr>        <tr>     <td>advance_emi</td>     <td>number</td>     <td>float</td>          <td>Advance EMI Amount (If collected any)</td>       <td>1000.0</td>  </tr>        <tr>     <td>umrn</td>     <td>string</td>     <td></td>          <td>To update if UMRN generated at this stage, else in PDD stage</td>       <td>umrn_12345</td>  </tr>        <tr>     <td>interest_start_date</td>     <td>string</td>     <td>date</td>          <td>Pre Emi interest due date</td>       <td>1995-10-10</td>  </tr>        <tr>     <td>differential_interest</td>     <td>number</td>     <td>float</td>          <td>Broken Period Interest Amount (in Rupees)</td>       <td>100.0</td>  </tr>        <tr>     <td>processing_fee</td>     <td>number</td>     <td>float</td>          <td>Processing Fee (Inclusive of GST)</td>       <td>100.0</td>  </tr>        <tr>     <td>stamp_duty</td>     <td>number</td>     <td>float</td>          <td>Stamp duty amount</td>       <td>100.0</td>  </tr>        <tr>     <td>insurance_charges</td>     <td>number</td>     <td>float</td>          <td>Insurance premium inclusive of GST</td>       <td>100.0</td>  </tr>        <tr>     <td>documentation_charges</td>     <td>number</td>     <td>float</td>          <td>Total documentation charges inclusive of GST</td>       <td>100.0</td>  </tr>        <tr>     <td>other_charges</td>     <td>number</td>     <td>float</td>          <td>Any Other Charges Inclusive of GST</td>       <td>100.0</td>  </tr>        <tr>     <td>loan_plr_type</td>     <td>string</td>     <td></td>          <td></td>       <td>loan_plr_type_61</td>  </tr>        <tr>     <td>loan_plr_rate</td>     <td>number</td>     <td>float</td>          <td>Prime Lending Rate of the loan</td>       <td>20.2</td>  </tr>        <tr>     <td>spread_id</td>     <td>string</td>     <td></td>          <td></td>       <td>spread_id_18</td>  </tr>        <tr>     <td>loan_emi</td>     <td>number</td>     <td>float</td>          <td>EMI of the loan</td>       <td>1000.0</td>  </tr>        <tr>     <td>rcu_status</td>     <td>string</td>     <td></td>          <td>Document Verification Status (Y/N)</td>       <td>t</td>  </tr>        <tr>     <td>surrogate</td>     <td>string</td>     <td></td>          <td>Surrogate</td>       <td>surrogate_89</td>  </tr>        <tr>     <td>sub_class</td>     <td>string</td>     <td></td>          <td>Sub Class</td>       <td>sub_class_80</td>  </tr>        <tr>     <td>weaker_section</td>     <td>string</td>     <td></td>          <td>Whether the borrower belongs to the weaker section as defined under RBI norms</td>       <td>small marginal farmers</td>  </tr>        <tr>     <td>disbursement_accounts</td>     <td>array</td>     <td></td>          <td>Refer table DisbursementAccounts for attributes</td>       <td>[{&quot;account_type&quot;:&quot;dealer&quot;,&quot;bank_name&quot;:&quot;HDFC&quot;,&quot;bank_account_type&quot;:&quot;savings&quot;,&quot;account_name&quot;:&quot;Neeraj Chopra&quot;,&quot;date_of_bank_account_opening&quot;:&quot;1995-01-01&quot;,&quot;bank_branch_name&quot;:&quot;Rajaji Salai&quot;,&quot;ifsc_code&quot;:&quot;HDFC000123&quot;,&quot;entity_type&quot;:&quot;dealer&quot;,&quot;account_no&quot;:&quot;1234567890&quot;,&quot;amount&quot;:10000.0},{&quot;account_type&quot;:&quot;dealer&quot;,&quot;bank_name&quot;:&quot;HDFC&quot;,&quot;bank_account_type&quot;:&quot;savings&quot;,&quot;account_name&quot;:&quot;Neeraj Chopra&quot;,&quot;date_of_bank_account_opening&quot;:&quot;1995-01-01&quot;,&quot;bank_branch_name&quot;:&quot;Rajaji Salai&quot;,&quot;ifsc_code&quot;:&quot;HDFC000123&quot;,&quot;entity_type&quot;:&quot;dealer&quot;,&quot;account_no&quot;:&quot;1234567890&quot;,&quot;amount&quot;:10000.0}]</td>  </tr>        <tr>     <td>assets</td>     <td>array</td>     <td></td>          <td>Refer table Assets for attributes</td>       <td>[{&quot;asset_category&quot;:&quot;residential&quot;,&quot;asset_owned_by&quot;:&quot;Polygon&quot;,&quot;relationship_to_the_business&quot;:&quot;Promoter&quot;,&quot;asset_value_self_declared&quot;:&quot;100000&quot;,&quot;asset_market_value&quot;:&quot;80000&quot;,&quot;ltv_asset_market_value&quot;:&quot;50000&quot;,&quot;area_type&quot;:&quot;Urban&quot;,&quot;ltv_asset_value_self_declared&quot;:100000.0,&quot;age_of_the_collateral&quot;:4,&quot;mortgage_in_favour_of&quot;:&quot;PNB Housing&quot;,&quot;machinery_type&quot;:&quot;Heavy machinery&quot;,&quot;hypothecation_value&quot;:2000.0,&quot;hypothecation_percentage&quot;:35.0,&quot;new_machinery_value&quot;:30000.0,&quot;old_machinery_value&quot;:10000.0,&quot;new_machinery_ltv&quot;:20000.0,&quot;old_machinery_ltv&quot;:10000.0,&quot;total_number_of_machines&quot;:4,&quot;total_value_of_machines&quot;:500000.0,&quot;manufacturer_name&quot;:&quot;BMW&quot;,&quot;machinery_hypothecated_to&quot;:&quot;Neeraj&quot;,&quot;property_address&quot;:&quot;221B, Baker Street, Chennai&quot;,&quot;property_city&quot;:&quot;Chennai&quot;,&quot;property_district&quot;:&quot;Chennai&quot;,&quot;property_state&quot;:&quot;tamil_nadu&quot;,&quot;property_pincode&quot;:600025},{&quot;asset_category&quot;:&quot;residential&quot;,&quot;asset_owned_by&quot;:&quot;Polygon&quot;,&quot;relationship_to_the_business&quot;:&quot;Promoter&quot;,&quot;asset_value_self_declared&quot;:&quot;100000&quot;,&quot;asset_market_value&quot;:&quot;80000&quot;,&quot;ltv_asset_market_value&quot;:&quot;50000&quot;,&quot;area_type&quot;:&quot;Urban&quot;,&quot;ltv_asset_value_self_declared&quot;:100000.0,&quot;age_of_the_collateral&quot;:4,&quot;mortgage_in_favour_of&quot;:&quot;PNB Housing&quot;,&quot;machinery_type&quot;:&quot;Heavy machinery&quot;,&quot;hypothecation_value&quot;:2000.0,&quot;hypothecation_percentage&quot;:35.0,&quot;new_machinery_value&quot;:30000.0,&quot;old_machinery_value&quot;:10000.0,&quot;new_machinery_ltv&quot;:20000.0,&quot;old_machinery_ltv&quot;:10000.0,&quot;total_number_of_machines&quot;:4,&quot;total_value_of_machines&quot;:500000.0,&quot;manufacturer_name&quot;:&quot;BMW&quot;,&quot;machinery_hypothecated_to&quot;:&quot;Neeraj&quot;,&quot;property_address&quot;:&quot;221B, Baker Street, Chennai&quot;,&quot;property_city&quot;:&quot;Chennai&quot;,&quot;property_district&quot;:&quot;Chennai&quot;,&quot;property_state&quot;:&quot;tamil_nadu&quot;,&quot;property_pincode&quot;:600025}]</td>  </tr>        <tr>     <td>references</td>     <td>array</td>     <td></td>          <td>Refer table References for attributes</td>       <td>[{&quot;name&quot;:&quot;Neeraj Chopra&quot;,&quot;address&quot;:&quot;221B, Baker Street, Chennai&quot;,&quot;pincode&quot;:&quot;600001&quot;,&quot;phone&quot;:&quot;9876543210&quot;},{&quot;name&quot;:&quot;Neeraj Chopra&quot;,&quot;address&quot;:&quot;221B, Baker Street, Chennai&quot;,&quot;pincode&quot;:&quot;600001&quot;,&quot;phone&quot;:&quot;9876543210&quot;}]</td>  </tr>        <tr>     <td>insurance_details</td>     <td>array</td>     <td></td>          <td>Refer table InsuranceDetails for attributes</td>       <td>[{&quot;insurance_type&quot;:&quot;credit&quot;,&quot;insurer_name&quot;:&quot;Tata AIG&quot;,&quot;nominee_details&quot;:&quot;Neeraj&quot;,&quot;nominee_date_of_birth&quot;:&quot;1990-01-01&quot;,&quot;relationship&quot;:&quot;friend&quot;,&quot;premium&quot;:100000.0,&quot;insurance_amount&quot;:300000.0,&quot;policy_number&quot;:0},{&quot;insurance_type&quot;:&quot;credit&quot;,&quot;insurer_name&quot;:&quot;Tata AIG&quot;,&quot;nominee_details&quot;:&quot;Neeraj&quot;,&quot;nominee_date_of_birth&quot;:&quot;1990-01-01&quot;,&quot;relationship&quot;:&quot;friend&quot;,&quot;premium&quot;:100000.0,&quot;insurance_amount&quot;:300000.0,&quot;policy_number&quot;:0}]</td>  </tr>        <tr>     <td>psl_flag</td>     <td>string</td>     <td></td>          <td>Does this loan belong to Priority Sector Lending?</td>       <td>t</td>  </tr>        <tr>     <td>psl_description</td>     <td>string</td>     <td></td>          <td>Description on Priority Sector Lending</td>       <td>psl_description_38</td>  </tr>        <tr>     <td>psl_code</td>     <td>string</td>     <td></td>          <td>Priority Sector Lending code</td>       <td>psl_code_78</td>  </tr>        <tr>     <td>psl_proof_link</td>     <td>array</td>     <td></td>          <td>Any documents as proof for PSL</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>psl_proof_link_password</td>     <td>string</td>     <td></td>          <td>Document Password</td>       <td>12345678</td>  </tr>        <tr>     <td>tranches</td>     <td>array</td>     <td></td>          <td>Refer table Tranches for attributes</td>       <td>[{&quot;tranche_number&quot;:1,&quot;principal_amount&quot;:10000,&quot;differential_interest&quot;:100,&quot;processing_fee&quot;:50,&quot;stamp_duty&quot;:100,&quot;insurance_charges&quot;:100,&quot;documentation_charges&quot;:100,&quot;other_charges&quot;:100,&quot;closing_loan_principal&quot;:5000},{&quot;tranche_number&quot;:1,&quot;principal_amount&quot;:10000,&quot;differential_interest&quot;:100,&quot;processing_fee&quot;:50,&quot;stamp_duty&quot;:100,&quot;insurance_charges&quot;:100,&quot;documentation_charges&quot;:100,&quot;other_charges&quot;:100,&quot;closing_loan_principal&quot;:5000}]</td>  </tr>        <tr>     <td>linked_loan_infos</td>     <td>array</td>     <td></td>          <td>Refer table LinkedLoanInfos for attributes</td>       <td>[{&quot;linked_loan_id&quot;:&quot;CA_123&quot;,&quot;foreclosure&quot;:&quot;t&quot;,&quot;principal&quot;:1000.0,&quot;interest&quot;:100.0,&quot;other_charges&quot;:50.0,&quot;overdue_charges&quot;:100.0,&quot;penalty_charges&quot;:100.0,&quot;fee_charges&quot;:100.0,&quot;bounce_charges&quot;:100.0,&quot;amount&quot;:100.0},{&quot;linked_loan_id&quot;:&quot;CA_123&quot;,&quot;foreclosure&quot;:&quot;t&quot;,&quot;principal&quot;:1000.0,&quot;interest&quot;:100.0,&quot;other_charges&quot;:50.0,&quot;overdue_charges&quot;:100.0,&quot;penalty_charges&quot;:100.0,&quot;fee_charges&quot;:100.0,&quot;bounce_charges&quot;:100.0,&quot;amount&quot;:100.0}]</td>  </tr>        <tr>     <td>sourcing_detail</td>     <td>object</td>     <td></td>      <td>Refer table SourcingDetail for attributes</td>       <td>{&quot;source_code&quot;:&quot;PNB&quot;,&quot;referrer_code&quot;:&quot;referrer_code_80&quot;,&quot;referrer_group&quot;:&quot;referrer_group_14&quot;,&quot;referrer_name&quot;:&quot;Albus&quot;,&quot;channel_code&quot;:&quot;DSA sourcing&quot;,&quot;dst_code&quot;:&quot;dst_code_87&quot;,&quot;dsa&quot;:&quot;John Pvt Ltd.&quot;,&quot;dse&quot;:&quot;John&quot;,&quot;relationship_manager&quot;:&quot;Harry&quot;}</td>  </tr>        <tr>     <td>deviation_details</td>     <td>array</td>     <td></td>          <td>Refer table DeviationDetails for attributes</td>       <td>[{&quot;summary&quot;:&quot;This deviation refers to the nature of the segment itself where the corporate on onboarding high debt can continue to keep capex funding at optimum levels, thus TD/NCA is typically high in these funding cases&quot;,&quot;desc&quot;:&quot;High TD/NCA&quot;,&quot;mitigant&quot;:&quot;Even though interest liabilities are higher on account of all current facilities, the company has shown substantial asset growth and cash flow has remained robust over the past 3 FY&quot;,&quot;level&quot;:&quot;high&quot;},{&quot;summary&quot;:&quot;This deviation refers to the nature of the segment itself where the corporate on onboarding high debt can continue to keep capex funding at optimum levels, thus TD/NCA is typically high in these funding cases&quot;,&quot;desc&quot;:&quot;High TD/NCA&quot;,&quot;mitigant&quot;:&quot;Even though interest liabilities are higher on account of all current facilities, the company has shown substantial asset growth and cash flow has remained robust over the past 3 FY&quot;,&quot;level&quot;:&quot;high&quot;}]</td>  </tr>    </tbody>       </table>   <h4>VideoKycDetail</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>profile_id</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Profile ID of the case as per the video KYC vendor</td>       <td>AB12345</td>  </tr>        <tr>     <td>account_id</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Account ID of the case as per the video KYC vendor</td>       <td>AB12345</td>  </tr>        <tr>     <td>key</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Key as per the video KYC vendor</td>       <td>abc@123</td>  </tr>        <tr>     <td>auditor</td>     <td>string</td>     <td></td>          <td>Name of the Video KYC Auditor</td>       <td>Neeraj Chopra</td>  </tr>        <tr>     <td>officer</td>     <td>string</td>     <td></td>          <td>Name of the Video KYC Officer</td>       <td>Neeraj Chopra</td>  </tr>    </tbody>       </table>   <h4>Partnerships</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>partnership_type</td>     <td>string</td>     <td></td>          <td>director / signatory / person / partner</td>       <td>director</td>  </tr>        <tr>     <td>name</td>     <td>string</td>     <td></td>          <td>Name of 1st authorized person</td>       <td>Neeraj Chopra</td>  </tr>        <tr>     <td>poi_number</td>     <td>string</td>     <td></td>          <td>KYC number of the authorised person/director</td>       <td>794065346728</td>  </tr>        <tr>     <td>poi_link</td>     <td>array</td>     <td></td>          <td>Proof of Identity for 1st authorized person</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>poi_link_password</td>     <td>string</td>     <td></td>          <td>Proof of Identity for 1st authorized person</td>       <td>12345678</td>  </tr>        <tr>     <td>poa_number</td>     <td>string</td>     <td></td>          <td>KYC number of the authorised person/director</td>       <td>L4018348</td>  </tr>        <tr>     <td>poa_link</td>     <td>array</td>     <td></td>          <td>Proof of address for 1st authorized person/director</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>poa_link_password</td>     <td>string</td>     <td></td>          <td>Proof of address for 1st authorized person/director</td>       <td>12345678</td>  </tr>        <tr>     <td>photo_link</td>     <td>array</td>     <td></td>          <td>Photo of the 1st authorised person/director</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>photo_link_password</td>     <td>string</td>     <td></td>          <td>Photo of the 1st authorised person/director</td>       <td>12345678</td>  </tr>    </tbody>       </table>   <h4>PartnershipDetail</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>partnership_firm_pan</td>     <td>string</td>     <td></td>          <td>PAN number of partnership</td>       <td>BMMPG9018G</td>  </tr>        <tr>     <td>partnership_pan_link</td>     <td>array</td>     <td></td>          <td>PAN image of partnership</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>partnership_pan_link_password</td>     <td>string</td>     <td></td>          <td>PAN image password of partnership</td>       <td>12345678</td>  </tr>        <tr>     <td>partnership_deed_link</td>     <td>array</td>     <td></td>          <td>Partnership deed image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>partnership_deed_link_password</td>     <td>string</td>     <td></td>          <td>Partnership deed image password</td>       <td>12345678</td>  </tr>        <tr>     <td>beneficiary_owner_details_link</td>     <td>array</td>     <td></td>          <td>Shareholding pattern of the firm</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>beneficiary_owner_details_link_password</td>     <td>string</td>     <td></td>          <td>Shareholding pattern of the firm - password</td>       <td>12345678</td>  </tr>    </tbody>       </table>   <h4>PrivateEntityDetail</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>cin_number</td>     <td>string</td>     <td></td>          <td>CIN number in case of a company</td>       <td>L21091KA2019OPC141331</td>  </tr>        <tr>     <td>cin_link</td>     <td>array</td>     <td></td>          <td>CIN image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>cin_link_password</td>     <td>string</td>     <td></td>          <td>CIN image password</td>       <td>12345678</td>  </tr>        <tr>     <td>moa_link</td>     <td>array</td>     <td></td>          <td>MOA image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>moa_link_password</td>     <td>string</td>     <td></td>          <td>MOA image password</td>       <td>12345678</td>  </tr>        <tr>     <td>aoa_link</td>     <td>array</td>     <td></td>          <td>AOA image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>aoa_link_password</td>     <td>string</td>     <td></td>          <td>AOA image password</td>       <td>12345678</td>  </tr>        <tr>     <td>board_resoultion_link</td>     <td>array</td>     <td></td>          <td>Board resolution image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>board_resoultion_link_password</td>     <td>string</td>     <td></td>          <td>Board resolution image password</td>       <td>12345678</td>  </tr>        <tr>     <td>share_holding_pattern_link</td>     <td>array</td>     <td></td>          <td>Shareholding pattern image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>share_holding_pattern_link_password</td>     <td>string</td>     <td></td>          <td>Shareholding pattern image password</td>       <td>12345678</td>  </tr>        <tr>     <td>other_company_proof</td>     <td>string</td>     <td></td>          <td>Free flowing text</td>       <td>ABC12345</td>  </tr>        <tr>     <td>other_company_proof_link</td>     <td>array</td>     <td></td>          <td>Image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>other_company_proof_link_password</td>     <td>string</td>     <td></td>          <td>Image password</td>       <td>12345678</td>  </tr>    </tbody>       </table>   <h4>Business</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>name_of_business</td>     <td>string</td>     <td></td>          <td>Business name</td>       <td>Credavenue</td>  </tr>        <tr>     <td>nature_of_business</td>     <td>string</td>     <td></td>          <td>The sector this business belongs to</td>       <td>Electronics</td>  </tr>        <tr>     <td>type_of_constitution</td>     <td>string</td>     <td></td>          <td>Partnership/Propertorship/Private Ltd</td>       <td>partnership</td>  </tr>        <tr>     <td>type_of_ownership</td>     <td>string</td>     <td></td>          <td>Type of Ownership</td>       <td>type_of_ownership_15</td>  </tr>        <tr>     <td>registration_date</td>     <td>string</td>     <td>date</td>          <td>Registration date of the business</td>       <td>1995-01-01</td>  </tr>        <tr>     <td>incorporation_date</td>     <td>string</td>     <td>date</td>          <td>Incorporation date of the business</td>       <td>1995-01-01</td>  </tr>        <tr>     <td>industry_type</td>     <td>string</td>     <td></td>          <td>trading/ manufacturing/ services</td>       <td>trading</td>  </tr>        <tr>     <td>sector_type</td>     <td>string</td>     <td></td>          <td>Name of the sector</td>       <td>Financial services</td>  </tr>        <tr>     <td>sub_sector_type</td>     <td>string</td>     <td></td>          <td>Name of the Sub sector</td>       <td>Banking</td>  </tr>        <tr>     <td>business_vintage</td>     <td>integer</td>     <td></td>          <td>Number of years of business existence</td>       <td>4</td>  </tr>        <tr>     <td>business_registered_office_address</td>     <td>string</td>     <td></td>          <td>Address of the business location</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>business_registered_office_district</td>     <td>string</td>     <td></td>          <td>Address of the business location</td>       <td>Chennai</td>  </tr>        <tr>     <td>business_registered_office_city</td>     <td>string</td>     <td></td>          <td>City of business address</td>       <td>Chennai</td>  </tr>        <tr>     <td>business_registered_office_state</td>     <td>string</td>     <td></td>          <td>State of business address</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>business_registered_office_pincode</td>     <td>integer</td>     <td></td>          <td>Pincode of business address</td>       <td>600025</td>  </tr>        <tr>     <td>business_mailing_office_address</td>     <td>string</td>     <td></td>          <td>Address of business location</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>business_mailing_office_city</td>     <td>string</td>     <td></td>          <td>City of business address</td>       <td>Chennai</td>  </tr>        <tr>     <td>business_mailing_office_state</td>     <td>string</td>     <td></td>          <td>State of business location</td>       <td>Chennai</td>  </tr>        <tr>     <td>business_mailing_office_pincode</td>     <td>integer</td>     <td></td>          <td>Pincode of business location</td>       <td>600025</td>  </tr>        <tr>     <td>business_registered_office_link</td>     <td>array</td>     <td></td>          <td>Registered office document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_registered_office_link_password</td>     <td>string</td>     <td></td>          <td>Registered office document password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_mailing_office_link</td>     <td>array</td>     <td></td>          <td>Mailing office document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_mailing_office_link_password</td>     <td>string</td>     <td></td>          <td>Mailing office document password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_phone_number</td>     <td>array</td>     <td></td>          <td>Phone number of business address</td>       <td>[9876543210, 9876543210]</td>  </tr>        <tr>     <td>business_email_id</td>     <td>array</td>     <td></td>          <td>Email id of the business</td>       <td>[&quot;holmes@credavenue.com&quot;, &quot;holmes@credavenue.com&quot;]</td>  </tr>        <tr>     <td>business_partner_score</td>     <td>number</td>     <td>float</td>          <td>Partner score for the business</td>       <td>3.0</td>  </tr>        <tr>     <td>business_pan_number</td>     <td>string</td>     <td></td>          <td>PAN number of business</td>       <td>BMMPG9018G</td>  </tr>        <tr>     <td>business_pan_link</td>     <td>array</td>     <td></td>          <td>PAN image of business</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_pan_link_password</td>     <td>string</td>     <td></td>          <td>PAN image password of business</td>       <td>12345678</td>  </tr>        <tr>     <td>business_rc_number</td>     <td>string</td>     <td></td>          <td>Registration number of the business</td>       <td>U72200MH2009PLC123456</td>  </tr>        <tr>     <td>business_rc_link</td>     <td>array</td>     <td></td>          <td>Image of the RC</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_rc_link_password</td>     <td>string</td>     <td></td>          <td>Image password of the RC</td>       <td>12345678</td>  </tr>        <tr>     <td>business_gst_number</td>     <td>string</td>     <td></td>          <td>Business GST number</td>       <td>29ABCDE1234F2Z5</td>  </tr>        <tr>     <td>business_gst_copy_link</td>     <td>array</td>     <td></td>          <td>Business GST image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_gst_copy_link_password</td>     <td>string</td>     <td></td>          <td>Business GST image password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_udyog_aadhar_number</td>     <td>string</td>     <td></td>          <td>Business Udyog Aadhar Number</td>       <td>794065346725</td>  </tr>        <tr>     <td>business_udyog_aadhar_link</td>     <td>array</td>     <td></td>          <td>Business Udyog Aadhar Document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_udyog_aadhar_link_password</td>     <td>string</td>     <td></td>          <td>Business Udyog Aadhar Document Password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_ssi_number</td>     <td>string</td>     <td></td>          <td>Small scall industries registration number</td>       <td>7589297314</td>  </tr>        <tr>     <td>business_ssi_link</td>     <td>array</td>     <td></td>          <td>Small scall industries registration document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_ssi_link_password</td>     <td>string</td>     <td></td>          <td>Small scall industries registration document password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_shops_est_number</td>     <td>string</td>     <td></td>          <td>Shop establishment number</td>       <td>2017086025</td>  </tr>        <tr>     <td>business_shops_est_link</td>     <td>array</td>     <td></td>          <td>Shop establishment document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_shops_est_link_password</td>     <td>string</td>     <td></td>          <td>Shop establishment document password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_factory_regn_number</td>     <td>string</td>     <td></td>          <td>Factory riegistration number</td>       <td>TVEIQ0615232</td>  </tr>        <tr>     <td>business_factory_regn_link</td>     <td>array</td>     <td></td>          <td>Factory riegistration document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_factory_regn_link_password</td>     <td>string</td>     <td></td>          <td>Factory riegistration document password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_trade_license_number</td>     <td>string</td>     <td></td>          <td>Trade license number</td>       <td>EA131102014709112</td>  </tr>        <tr>     <td>business_trade_license_link</td>     <td>array</td>     <td></td>          <td>Trade license document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_trade_license_link_password</td>     <td>string</td>     <td></td>          <td>Trade license document password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_place_photo_link</td>     <td>array</td>     <td></td>          <td>Business place photo image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_place_photo_link_password</td>     <td>string</td>     <td></td>          <td>Business place photo image</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_continuity_proof_link</td>     <td>array</td>     <td></td>          <td>Business continuity proof document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>business_continuity_proof_link_password</td>     <td>string</td>     <td></td>          <td>Business continuity proof document password</td>       <td>12345678</td>  </tr>        <tr>     <td>other_business_address_proof_number</td>     <td>string</td>     <td></td>          <td>any other adddress proof number</td>       <td>ABC12345</td>  </tr>        <tr>     <td>other_business_address_proof_link</td>     <td>array</td>     <td></td>          <td>any other adddress proof image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>other_business_address_proof_link_password</td>     <td>string</td>     <td></td>          <td>any other adddress proof image password</td>       <td>12345678</td>  </tr>        <tr>     <td>no_of_business_authorised_persons</td>     <td>integer</td>     <td></td>          <td>Number of authorized person for business</td>       <td>3</td>  </tr>        <tr>     <td>partnerships</td>     <td>array</td>     <td></td>          <td>Refer table Partnerships for attributes</td>       <td>[{&quot;partnership_type&quot;:&quot;director&quot;,&quot;name&quot;:&quot;Neeraj Chopra&quot;,&quot;poi_number&quot;:&quot;794065346728&quot;,&quot;poi_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;poi_link_password&quot;:&quot;12345678&quot;,&quot;poa_number&quot;:&quot;L4018348&quot;,&quot;poa_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;poa_link_password&quot;:&quot;12345678&quot;,&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link_password&quot;:&quot;12345678&quot;},{&quot;partnership_type&quot;:&quot;director&quot;,&quot;name&quot;:&quot;Neeraj Chopra&quot;,&quot;poi_number&quot;:&quot;794065346728&quot;,&quot;poi_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;poi_link_password&quot;:&quot;12345678&quot;,&quot;poa_number&quot;:&quot;L4018348&quot;,&quot;poa_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;poa_link_password&quot;:&quot;12345678&quot;,&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link_password&quot;:&quot;12345678&quot;}]</td>  </tr>        <tr>     <td>partnership_detail</td>     <td>object</td>      <td></td>     <td>Refer table PartnershipDetail for attributes</td>       <td>{&quot;partnership_firm_pan&quot;:&quot;BMMPG9018G&quot;,&quot;partnership_pan_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;partnership_pan_link_password&quot;:&quot;12345678&quot;,&quot;partnership_deed_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;partnership_deed_link_password&quot;:&quot;12345678&quot;,&quot;beneficiary_owner_details_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;beneficiary_owner_details_link_password&quot;:&quot;12345678&quot;}</td>  </tr>        <tr>     <td>private_entity_detail</td>     <td>object</td>     <td></td>     <td>Refer table PrivateEntityDetail for attributes</td>       <td>{&quot;cin_number&quot;:&quot;L21091KA2019OPC141331&quot;,&quot;cin_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;cin_link_password&quot;:&quot;12345678&quot;,&quot;moa_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;moa_link_password&quot;:&quot;12345678&quot;,&quot;aoa_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;aoa_link_password&quot;:&quot;12345678&quot;,&quot;board_resoultion_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;board_resoultion_link_password&quot;:&quot;12345678&quot;,&quot;share_holding_pattern_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;share_holding_pattern_link_password&quot;:&quot;12345678&quot;,&quot;other_company_proof&quot;:&quot;ABC12345&quot;,&quot;other_company_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_company_proof_link_password&quot;:&quot;12345678&quot;}</td>  </tr>    </tbody>       </table>   <h4>Guarantors</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>relationship_with_applicant</td>     <td>string</td>     <td></td>          <td>Father/Mother/Brother/Son/Daughter/Friend/Other relative</td>       <td>father</td>  </tr>        <tr>     <td>first_name</td>     <td>string</td>     <td></td>          <td>First Name of the Guarantor</td>       <td>Minato</td>  </tr>        <tr>     <td>middle_name</td>     <td>string</td>     <td></td>          <td>Middle Name of the Guarantor</td>       <td>Kumar</td>  </tr>        <tr>     <td>last_name</td>     <td>string</td>     <td></td>          <td>Last Name of the Guarantor</td>       <td>Namikaze</td>  </tr>        <tr>     <td>date_of_birth</td>     <td>string</td>     <td>date</td>          <td>Date of Birth (YYYY-MM-DD)</td>       <td>1995-12-05</td>  </tr>        <tr>     <td>age</td>     <td>integer</td>     <td></td>          <td>Age in years</td>       <td>26</td>  </tr>        <tr>     <td>gender</td>     <td>string</td>     <td></td>          <td>M / F / O</td>       <td>M</td>  </tr>        <tr>     <td>current_address</td>     <td>string</td>     <td></td>          <td>Free flowing text</td>       <td>2, Mount Road, Teynampet</td>  </tr>        <tr>     <td>current_district</td>     <td>string</td>     <td></td>          <td>District in which Guarantor is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>current_city</td>     <td>string</td>     <td></td>          <td>City in which Guarantor is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>current_city_tier</td>     <td>string</td>     <td></td>          <td>tier_1, tier_2 etc. for the current city</td>       <td>tier_1</td>  </tr>        <tr>     <td>current_state</td>     <td>string</td>     <td></td>          <td>State in which Guarantor is currently residing</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>current_pincode</td>     <td>integer</td>     <td></td>          <td>Pincode of the current address</td>       <td>600089</td>  </tr>        <tr>     <td>years_of_stay_in_current_address</td>     <td>integer</td>     <td></td>          <td>How many years stayed in the current address</td>       <td>5</td>  </tr>        <tr>     <td>residence_type_current_address</td>     <td>string</td>     <td></td>          <td>rented / owned / leased</td>       <td>rented</td>  </tr>        <tr>     <td>permanent_address</td>     <td>string</td>     <td></td>          <td>Free flowing text</td>       <td>2, Mount Road, Teynampet</td>  </tr>        <tr>     <td>permanent_district</td>     <td>string</td>     <td></td>          <td>District in which Guarantor is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>permanent_city</td>     <td>string</td>     <td></td>          <td>City in which Guarantor is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>permanent_city_tier</td>     <td>string</td>     <td></td>          <td>tier_1, tier_2 etc. for the permanent city</td>       <td>tier_1</td>  </tr>        <tr>     <td>permanent_state</td>     <td>string</td>     <td></td>          <td>State in which Guarantor is currently residing</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>permanent_pincode</td>     <td>integer</td>     <td></td>          <td>Pincode of the current address</td>       <td>600089</td>  </tr>        <tr>     <td>years_of_stay_in_permanent_address</td>     <td>integer</td>     <td></td>          <td>How many years stayed in the permanent address</td>       <td>5</td>  </tr>        <tr>     <td>residence_type_permanent_address</td>     <td>string</td>     <td></td>          <td>rented / owned / leased</td>       <td>owned</td>  </tr>        <tr>     <td>mobile_number</td>     <td>integer</td>     <td></td>          <td>Mobile Number of the Guarantor (10 digits)</td>       <td>9876543210</td>  </tr>        <tr>     <td>email</td>     <td>string</td>     <td></td>          <td>Personal Email ID of the Guarantor</td>       <td>minato@gmail.com</td>  </tr>        <tr>     <td>pan_number</td>     <td>string</td>     <td></td>          <td>PAN Number of the Guarantor (10 digit Alphanumeric)</td>       <td>BMMPG9018Y</td>  </tr>        <tr>     <td>pan_number_link</td>     <td>array</td>     <td></td>          <td>PAN Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>pan_number_link_password</td>     <td>string</td>     <td></td>          <td>PAN Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>aadhar_number</td>     <td>string</td>     <td></td>          <td>Aadhar Number of the Guarantor (12 digits)</td>       <td>794065346725</td>  </tr>        <tr>     <td>aadhar_number_link</td>     <td>array</td>     <td></td>          <td>Aadhar Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>aadhar_number_link_password</td>     <td>string</td>     <td></td>          <td>Aadhar Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>voter_id_number</td>     <td>string</td>     <td></td>          <td>Voter ID Number of the Guarantor</td>       <td>RTG2291234</td>  </tr>        <tr>     <td>voting_id_number_link</td>     <td>array</td>     <td></td>          <td>Voter Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>voting_id_number_link_password</td>     <td>string</td>     <td></td>          <td>Voter Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>driving_license_number</td>     <td>string</td>     <td></td>          <td>Driving License Number of the Guarantor</td>       <td>TN01123345</td>  </tr>        <tr>     <td>driving_licence_number_link</td>     <td>array</td>     <td></td>          <td>Driving License Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>driving_licence_number_link_password</td>     <td>string</td>     <td></td>          <td>Driving License Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>passport_number</td>     <td>string</td>     <td></td>          <td>Passport Number of the Guarantor</td>       <td>L4018345</td>  </tr>        <tr>     <td>passport_number_link</td>     <td>array</td>     <td></td>          <td>Passport Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>passport_number_link_password</td>     <td>string</td>     <td></td>          <td>Passport Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>video_image_link</td>     <td>array</td>     <td></td>          <td>Video KYC of the Guarantor</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>video_image_link_password</td>     <td>string</td>     <td></td>          <td>Video KYC Image link Password of the Guarantor</td>       <td>12345678</td>  </tr>        <tr>     <td>video_kyc_detail</td>     <td>object</td>     <td></td>     <td>Refer table VideoKycDetail for attributes</td>       <td>{&quot;profile_id&quot;:&quot;abc12345&quot;,&quot;account_id&quot;:&quot;abc12345&quot;,&quot;key&quot;:&quot;abc@123&quot;,&quot;auditor&quot;:&quot;Neeraj Chopra&quot;,&quot;officer&quot;:&quot;Neeraj Chopra&quot;}</td>  </tr>        <tr>     <td>other_kyc_number</td>     <td>string</td>     <td></td>          <td>KYC Number of the Guarantor</td>       <td>other_kyc_number_21</td>  </tr>        <tr>     <td>other_kyc_number_link</td>     <td>array</td>     <td></td>          <td>KYC Image of the Guarantor</td>       <td>[&quot;abc12345&quot;, &quot;abc12345&quot;]</td>  </tr>        <tr>     <td>other_kyc_number_link_password</td>     <td>string</td>     <td></td>          <td>KYC Image Link Password of the Guarantor</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>rent_agreement_link</td>     <td>array</td>     <td></td>          <td>Rent Agreement Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>rent_agreement_link_password</td>     <td>string</td>     <td></td>          <td>Rent Agreement Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>utility_bills_link</td>     <td>array</td>     <td></td>          <td>Utility Bills Copies (If any)</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>utility_bills_link_password</td>     <td>string</td>     <td></td>          <td>Utility Bills Copies Password (If any)</td>       <td>12345678</td>  </tr>        <tr>     <td>photo_link</td>     <td>array</td>     <td></td>          <td>Photo Image of the Guarantor</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>photo_link_password</td>     <td>string</td>     <td></td>          <td>Photo Image Password of the Guarantor</td>       <td>12345678</td>  </tr>        <tr>     <td>marital_status</td>     <td>string</td>     <td></td>          <td>married / unmarried</td>       <td>unmarried</td>  </tr>        <tr>     <td>religion</td>     <td>string</td>     <td></td>          <td>Religion of the Guarantor</td>       <td>Hindu</td>  </tr>        <tr>     <td>nationality</td>     <td>string</td>     <td></td>          <td>Nationality of the Guarantor</td>       <td>indian</td>  </tr>        <tr>     <td>bureau_score</td>     <td>integer</td>     <td></td>          <td>Bureau Score of the Guarantor</td>       <td>700</td>  </tr>        <tr>     <td>bureau_report_link</td>     <td>array</td>     <td></td>          <td>Guarantor&#39;s Bureau Report PDF</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bureau_report_link_password</td>     <td>string</td>     <td></td>          <td>Guarantor&#39;s Bureau Report Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>partner_score</td>     <td>number</td>     <td>float</td>          <td>Score Captured by the Partner</td>       <td>3.0</td>  </tr>    </tbody>       </table>   <h4>CoApplicants</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>relationship_with_applicant</td>     <td>string</td>     <td></td>          <td>Father/Mother/Brother/Son/Daughter/Friend/Other relative</td>       <td>father</td>  </tr>        <tr>     <td>first_name</td>     <td>string</td>     <td></td>          <td>First Name of the CoApplicant</td>       <td>Minato</td>  </tr>        <tr>     <td>middle_name</td>     <td>string</td>     <td></td>          <td>Middle Name of the CoApplicant</td>       <td>Kumar</td>  </tr>        <tr>     <td>last_name</td>     <td>string</td>     <td></td>          <td>Last Name of the CoApplicant</td>       <td>Namikaze</td>  </tr>        <tr>     <td>gender</td>     <td>string</td>     <td></td>          <td>M / F / O</td>       <td>M</td>  </tr>        <tr>     <td>date_of_birth</td>     <td>string</td>     <td>date</td>          <td>Date of Birth (YYYY-MM-DD)</td>       <td>1995-12-05</td>  </tr>        <tr>     <td>age</td>     <td>integer</td>     <td></td>          <td>Age in years</td>       <td>26</td>  </tr>        <tr>     <td>mobile_number</td>     <td>integer</td>     <td></td>          <td>Mobile Number of the CoApplicant (10 digits)</td>       <td>9876543210</td>  </tr>        <tr>     <td>email</td>     <td>string</td>     <td></td>          <td>Personal Email ID of the CoApplicant</td>       <td>minato@gmail.com</td>  </tr>        <tr>     <td>current_address</td>     <td>string</td>     <td></td>          <td>Free flowing text</td>       <td>2, Mount Road, Teynampet</td>  </tr>        <tr>     <td>current_city</td>     <td>string</td>     <td></td>          <td>City in which CoApplicant is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>current_city_tier</td>     <td>string</td>     <td></td>          <td>tier_1, tier_2 etc. for the current city</td>       <td>tier_1</td>  </tr>        <tr>     <td>current_district</td>     <td>string</td>     <td></td>          <td>District in which CoApplicant is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>current_state</td>     <td>string</td>     <td></td>          <td>State in which CoApplicant is currently residing</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>current_pincode</td>     <td>integer</td>     <td></td>          <td>Pincode of the current address</td>       <td>600089</td>  </tr>        <tr>     <td>residence_type_current_address</td>     <td>string</td>     <td></td>          <td>rented / owned / leased</td>       <td>rented</td>  </tr>        <tr>     <td>years_of_stay_in_current_address</td>     <td>integer</td>     <td></td>          <td>How many years stayed in the current address</td>       <td>5</td>  </tr>        <tr>     <td>permanent_address</td>     <td>string</td>     <td></td>          <td>Free flowing text</td>       <td>2, Mount Road, Teynampet</td>  </tr>        <tr>     <td>permanent_city</td>     <td>string</td>     <td></td>          <td>City in which CoApplicant is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>permanent_city_tier</td>     <td>string</td>     <td></td>          <td>tier_1, tier_2 etc. for the permanent city</td>       <td>tier_1</td>  </tr>        <tr>     <td>permanent_district</td>     <td>string</td>     <td></td>          <td>District in which CoApplicant is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>permanent_state</td>     <td>string</td>     <td></td>          <td>State in which CoApplicant is currently residing</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>permanent_pincode</td>     <td>integer</td>     <td></td>          <td>Pincode of the current address</td>       <td>600089</td>  </tr>        <tr>     <td>residence_type_permanent_address</td>     <td>string</td>     <td></td>          <td>rented / owned / leased</td>       <td>owned</td>  </tr>        <tr>     <td>years_of_stay_in_permanent_address</td>     <td>integer</td>     <td></td>          <td>How many years stayed in the permanent address</td>       <td>5</td>  </tr>        <tr>     <td>marital_status</td>     <td>string</td>     <td></td>          <td>Married / Unmarried</td>       <td>unmarried</td>  </tr>        <tr>     <td>religion</td>     <td>string</td>     <td></td>          <td>Religion of the CoApplicant</td>       <td>buddhist</td>  </tr>        <tr>     <td>nationality</td>     <td>string</td>     <td></td>          <td>Nationality of the CoApplicant</td>       <td>indian</td>  </tr>        <tr>     <td>father_name</td>     <td>string</td>     <td></td>          <td>Father Name of the CoApplicant</td>       <td>Dan Kato</td>  </tr>        <tr>     <td>mother_name</td>     <td>string</td>     <td></td>          <td>Mother Name of the CoApplicant</td>       <td>Tsunade Senju</td>  </tr>        <tr>     <td>spouse_name</td>     <td>string</td>     <td></td>          <td>Spouse Name of the CoApplicant</td>       <td>Kushina Uzumaki</td>  </tr>        <tr>     <td>education</td>     <td>string</td>     <td></td>          <td>Free flowing text</td>       <td>Hokage</td>  </tr>        <tr>     <td>annual_income</td>     <td>number</td>     <td>float</td>          <td>Annual Income of the CoApplicant (in Rupees)</td>       <td>120000.0</td>  </tr>        <tr>     <td>income_proof_link</td>     <td>array</td>     <td></td>          <td>CoApplicant Income Proof Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>income_proof_link_password</td>     <td>string</td>     <td></td>          <td>CoApplicant Income Proof Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>bank_statement_link</td>     <td>array</td>     <td></td>          <td>CoApplicant Bank Statement Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bank_statement_link_password</td>     <td>string</td>     <td></td>          <td>CoApplicant Bank Statement Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>pan_number</td>     <td>string</td>     <td></td>          <td>PAN Number of the CoApplicant (10 digit Alphanumeric)</td>       <td>BMMPG9018Y</td>  </tr>        <tr>     <td>pan_number_link</td>     <td>array</td>     <td></td>          <td>PAN Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>pan_number_link_password</td>     <td>string</td>     <td></td>          <td>PAN Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>aadhar_number</td>     <td>string</td>     <td></td>          <td>Aadhar Number of the CoApplicant (12 digits)</td>       <td>794065346725</td>  </tr>        <tr>     <td>aadhar_number_link</td>     <td>array</td>     <td></td>          <td>Aadhar Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>aadhar_number_link_password</td>     <td>string</td>     <td></td>          <td>Aadhar Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>voter_id_number</td>     <td>string</td>     <td></td>          <td>Voter ID Number of the CoApplicant</td>       <td>RTG2291234</td>  </tr>        <tr>     <td>voting_id_number_link</td>     <td>array</td>     <td></td>          <td>Voter Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>voting_id_number_link_password</td>     <td>string</td>     <td></td>          <td>Voter Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>driving_license_number</td>     <td>string</td>     <td></td>          <td>Driving License Number of the CoApplicant</td>       <td>TN01123345</td>  </tr>        <tr>     <td>driving_licence_number_link</td>     <td>array</td>     <td></td>          <td>Driving License Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>driving_licence_number_link_password</td>     <td>string</td>     <td></td>          <td>Driving License Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>passport_number</td>     <td>string</td>     <td></td>          <td>Passport Number of the CoApplicant</td>       <td>L4018345</td>  </tr>        <tr>     <td>passport_number_link</td>     <td>array</td>     <td></td>          <td>Passport Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>passport_number_link_password</td>     <td>string</td>     <td></td>          <td>Passport Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>video_image_link</td>     <td>array</td>     <td></td>          <td>Video KYC of the CoApplicant</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>video_image_link_password</td>     <td>string</td>     <td></td>          <td>Video KYC Password of the CoApplicant</td>       <td>12345678</td>  </tr>        <tr>     <td>video_kyc_detail</td>     <td>object</td>     <td></td>     <td>Refer table VideoKycDetail for attributes</td>       <td>{&quot;profile_id&quot;:&quot;ABC12345&quot;,&quot;account_id&quot;:&quot;ABC12345&quot;,&quot;key&quot;:&quot;abc_123&quot;,&quot;auditor&quot;:&quot;Neeraj Chopra&quot;,&quot;officer&quot;:&quot;Neeraj Chopra&quot;}</td>  </tr>        <tr>     <td>other_kyc_number</td>     <td>string</td>     <td></td>          <td>KYC Number of the CoApplicant</td>       <td>ABC12456</td>  </tr>        <tr>     <td>other_kyc_number_link</td>     <td>array</td>     <td></td>          <td>KYC Image of the CoApplicant</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>other_kyc_number_link_password</td>     <td>string</td>     <td></td>          <td>KYC Image Password of the CoApplicant</td>       <td>12345678</td>  </tr>        <tr>     <td>rent_agreement_link</td>     <td>array</td>     <td></td>          <td>CoApplicant Rent Agreement Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>rent_agreement_link_password</td>     <td>string</td>     <td></td>          <td>CoApplicant Rent Agreement Document Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>utility_bills_link</td>     <td>array</td>     <td></td>          <td>Utility Bills Copies (If any)</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>utility_bills_link_password</td>     <td>string</td>     <td></td>          <td>Utility Bills Copies Password (If any)</td>       <td>12345678</td>  </tr>        <tr>     <td>photo_link</td>     <td>array</td>     <td></td>          <td>Photo Image of the CoApplicant</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>photo_link_password</td>     <td>string</td>     <td></td>          <td>Photo Image Password of the CoApplicant</td>       <td>12345678</td>  </tr>        <tr>     <td>bureau_score</td>     <td>integer</td>     <td></td>          <td>Bureau Score of the CoApplicant</td>       <td>700</td>  </tr>        <tr>     <td>bureau_report_link</td>     <td>array</td>     <td></td>          <td>CoApplicant&#39;s Bureau Report Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bureau_report_link_password</td>     <td>string</td>     <td></td>          <td>CoApplicant&#39;s Bureau Report Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>employment_details_link</td>     <td>array</td>     <td></td>          <td>CoApplicant&#39;s Employment Details Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>employment_details_link_password</td>     <td>string</td>     <td></td>          <td>CoApplicant&#39;s Employment Details Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>partner_score</td>     <td>number</td>     <td>float</td>          <td>Score Captured by the Partner</td>       <td>3.0</td>  </tr>    </tbody>       </table>   <h4>BankStatement</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>bank_statement_savings_account_12_months_link</td>     <td>array</td>     <td></td>          <td>Savings bank account statement for last 12 months</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bank_statement_savings_account_12_months_link_password</td>     <td>string</td>     <td></td>          <td>Savings bank account statement for last 12 months Document Password</td>       <td>12345678</td>  </tr>        <tr>     <td>bank_statement_current_account_12_months_link</td>     <td>array</td>     <td></td>          <td>Current account bank details for last 12 months</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bank_statement_current_account_12_months_link_password</td>     <td>string</td>     <td></td>          <td>Current account bank details for last 12 months Document Password</td>       <td>12345678</td>  </tr>        <tr>     <td>no_of_inward_chq_returns_savings_account</td>     <td>integer</td>     <td></td>          <td>Number of inward cheque returns in savings account</td>       <td>3</td>  </tr>        <tr>     <td>no_of_outward_chq_returns_savings_account</td>     <td>integer</td>     <td></td>          <td>Number of outward cheque returns in savings account</td>       <td>4</td>  </tr>        <tr>     <td>no_of_inward_chq_returns_current_account</td>     <td>integer</td>     <td></td>          <td>Number of inward cheque returns in current account</td>       <td>5</td>  </tr>        <tr>     <td>no_of_outward_chq_returns_current_account</td>     <td>integer</td>     <td></td>          <td>Number of outward cheque returns in current account</td>       <td>6</td>  </tr>        <tr>     <td>bank_account_type_for_assessment</td>     <td>string</td>     <td></td>          <td>Savings / Current / Overdraft / CC</td>       <td>savings</td>  </tr>        <tr>     <td>perfios_link</td>     <td>array</td>     <td></td>          <td>Perfios report in form of document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>perfios_link_password</td>     <td>string</td>     <td></td>          <td>Perfios report in form of document - password</td>       <td>12345678</td>  </tr>        <tr>     <td>perfios_json_link</td>     <td>array</td>     <td></td>          <td>Perfios Json placed in a link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>perfios_json_link_password</td>     <td>string</td>     <td></td>          <td>Perfios Json placed in a link - password</td>       <td>12345678</td>  </tr>        <tr>     <td>perfios_json</td>     <td>array</td>     <td></td>          <td>Perfios Json response</td>       <td>[&quot;NA&quot;, &quot;NA&quot;]</td>  </tr>        <tr>     <td>finbit_link</td>     <td>array</td>     <td></td>          <td>Finbit report in form of document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>finbit_link_password</td>     <td>string</td>     <td></td>          <td>Finbit report in form of document - Password</td>       <td>12345678</td>  </tr>        <tr>     <td>finbit_json_link</td>     <td>array</td>     <td></td>          <td>Finbit Json placed in a link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>finbit_json_link_password</td>     <td>string</td>     <td></td>          <td>FINBIT Json placed in a link - Password</td>       <td>12345678</td>  </tr>        <tr>     <td>finbit_json</td>     <td>array</td>     <td></td>          <td>FINBIT Json response</td>       <td>[&quot;NA&quot;, &quot;NA&quot;]</td>  </tr>        <tr>     <td>abb</td>     <td>number</td>     <td>float</td>          <td>Average Bank Balance maintaiend on the EMI dates (Calculated by the Originator for the Last 12 Months)</td>       <td>25000.0</td>  </tr>        <tr>     <td>abd</td>     <td>number</td>     <td>float</td>          <td>Average Monthly Bank Deposits for the Last 12 Months</td>       <td>10000.0</td>  </tr>        <tr>     <td>credit_summation</td>     <td>string</td>     <td></td>          <td>Sum of all the credits in the bank statement</td>       <td>50000</td>  </tr>    </tbody>       </table>   <h4>FinancialData</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>annual_business_turnover</td>     <td>number</td>     <td>float</td>          <td>Annual Business Turnover (in Rupees)</td>       <td>1000000.0</td>  </tr>        <tr>     <td>annual_gross_profit</td>     <td>number</td>     <td>float</td>          <td>Annual Gross Profit (in Rupees)</td>       <td>8000000.0</td>  </tr>        <tr>     <td>annual_business_ebitda</td>     <td>number</td>     <td>float</td>          <td>Annual Business EBITDA (in Rupees)</td>       <td>5000000.0</td>  </tr>        <tr>     <td>monthly_net_profit</td>     <td>number</td>     <td>float</td>          <td>Monthly Net Profit (in Rupees)</td>       <td>14000.0</td>  </tr>        <tr>     <td>annual_net_income</td>     <td>integer</td>     <td></td>          <td>Annual Net Income</td>       <td>4000000</td>  </tr>        <tr>     <td>annual_net_profit</td>     <td>number</td>     <td>float</td>          <td>Net Profit After Tax (in Rupees)</td>       <td>30000000.0</td>  </tr>        <tr>     <td>gst_annual_turnover</td>     <td>integer</td>     <td></td>          <td>GST Annual Turnover</td>       <td>20000</td>  </tr>        <tr>     <td>gst_return_year_1_link</td>     <td>array</td>     <td></td>          <td>GST return image for last year</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>gst_return_year_1_link_password</td>     <td>string</td>     <td></td>          <td>GST return image password for last year</td>       <td>12345678</td>  </tr>        <tr>     <td>gst_return_year_2_link</td>     <td>array</td>     <td></td>          <td>GST return image for last year -1</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>gst_return_year_2_link_password</td>     <td>string</td>     <td></td>          <td>GST return image password for last year -1</td>       <td>12345678</td>  </tr>        <tr>     <td>gst_return_year_3_link</td>     <td>array</td>     <td></td>          <td>GST return image for last year -2</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>gst_return_year_3_link_password</td>     <td>string</td>     <td></td>          <td>GST return image password for last year -2</td>       <td>12345678</td>  </tr>        <tr>     <td>it_return_year_1_link</td>     <td>array</td>     <td></td>          <td>IT return image for last year</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>it_return_year_1_link_password</td>     <td>string</td>     <td></td>          <td>IT return image password for last year</td>       <td>12345678</td>  </tr>        <tr>     <td>it_return_year_2_link</td>     <td>array</td>     <td></td>          <td>IT return image for last year -1</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>it_return_year_2_link_password</td>     <td>string</td>     <td></td>          <td>IT return image for last year -1</td>       <td>12345678</td>  </tr>        <tr>     <td>it_return_year_3_link</td>     <td>array</td>     <td></td>          <td>IT return image for last year - 2</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>it_return_year_3_link_password</td>     <td>string</td>     <td></td>          <td>IT return image for last year - 2</td>       <td>12345678</td>  </tr>        <tr>     <td>other_income_assesment_proof_link</td>     <td>array</td>     <td></td>          <td>Image of other bills</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>other_income_assesment_proof_link_password</td>     <td>string</td>     <td></td>          <td>Image password of other bills</td>       <td>12345678</td>  </tr>        <tr>     <td>cam_link</td>     <td>array</td>     <td></td>          <td>CAM Document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>cam_link_password</td>     <td>string</td>     <td></td>          <td>CAM Document Password</td>       <td>12345678</td>  </tr>        <tr>     <td>cfa_link</td>     <td>array</td>     <td></td>          <td>CFA Document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>cfa_link_password</td>     <td>string</td>     <td></td>          <td>CFA Document Password</td>       <td>12345678</td>  </tr>    </tbody>       </table>   <h4>DisbursementAccounts</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>account_type</td>     <td>string</td>     <td></td>          <td>borrower / existing_lender / dealer / sub_dealer / seller / financier</td>       <td>dealer</td>  </tr>        <tr>     <td>bank_name</td>     <td>string</td>     <td></td>          <td>Name of the bank where disbursement needs to be done</td>       <td>HDFC</td>  </tr>        <tr>     <td>bank_account_type</td>     <td>string</td>     <td></td>          <td>Account type - Savings/Current/Overdraft/CC</td>       <td>savings</td>  </tr>        <tr>     <td>account_name</td>     <td>string</td>     <td></td>          <td>Bank account name where disbursement needs to be done</td>       <td>Neeraj Chopra</td>  </tr>        <tr>     <td>date_of_bank_account_opening</td>     <td>string</td>     <td>date</td>          <td>Date on which the bank account is opened</td>       <td>1995-01-01</td>  </tr>        <tr>     <td>bank_branch_name</td>     <td>string</td>     <td></td>          <td>Bank branch name where disbursement needs to be done</td>       <td>Rajaji Salai</td>  </tr>        <tr>     <td>ifsc_code</td>     <td>string</td>     <td></td>          <td>Bank IFSC where disbursement needs to be done</td>       <td>HDFC000123</td>  </tr>        <tr>     <td>entity_type</td>     <td>string</td>     <td></td>          <td>dealer / sub_dealer / originator / existing_lender / end_customer</td>       <td>dealer</td>  </tr>        <tr>     <td>account_no</td>     <td>string</td>     <td></td>          <td>Account number of the bank where disbursement needs to be done</td>       <td>1234567890</td>  </tr>        <tr>     <td>amount</td>     <td>number</td>     <td>float</td>          <td>Amount to be transferred to particular Vendor/Borrower</td>       <td>10000.0</td>  </tr>    </tbody>       </table>   <h4>Assets</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>asset_category</td>     <td>string</td>     <td></td>          <td>Residential/Commercial/Plot/Vacant/Machinery/LIC/FD/Mutual Funds/Vehicle/Bonds/KVB patra/Post Office Schemes</td>       <td>residential</td>  </tr>        <tr>     <td>asset_owned_by</td>     <td>string</td>     <td></td>          <td>Name of owner</td>       <td>Polygon</td>  </tr>        <tr>     <td>relationship_to_the_business</td>     <td>string</td>     <td></td>          <td>Promoter/Family/Partner</td>       <td>Promoter</td>  </tr>        <tr>     <td>asset_value_self_declared</td>     <td>string</td>     <td></td>          <td>Approx asset value</td>       <td>100000</td>  </tr>        <tr>     <td>asset_market_value</td>     <td>string</td>     <td></td>          <td>Asset market value</td>       <td>80000</td>  </tr>        <tr>     <td>ltv_asset_market_value</td>     <td>string</td>     <td></td>          <td>Ltv market value</td>       <td>50000</td>  </tr>        <tr>     <td>area_type</td>     <td>string</td>     <td></td>          <td>Urban/Rural/Semi-urban</td>       <td>Urban</td>  </tr>        <tr>     <td>ltv_asset_value_self_declared</td>     <td>number</td>     <td>float</td>          <td>LTV asset image for last self declared</td>       <td>100000.0</td>  </tr>        <tr>     <td>age_of_the_collateral</td>     <td>integer</td>     <td></td>          <td>Age of the collateral</td>       <td>4</td>  </tr>        <tr>     <td>mortgage_in_favour_of</td>     <td>string</td>     <td></td>          <td>Mortgagee in whose name the lien on the mortgage is being placed</td>       <td>PNB Housing</td>  </tr>        <tr>     <td>machinery_type</td>     <td>string</td>     <td></td>          <td>Which type of machinery is it?</td>       <td>Heavy machinery</td>  </tr>        <tr>     <td>hypothecation_value</td>     <td>number</td>     <td>float</td>          <td>Hypothecation value</td>       <td>2000.0</td>  </tr>        <tr>     <td>hypothecation_percentage</td>     <td>number</td>     <td>float</td>          <td>Hypothecation Percentage</td>       <td>35.0</td>  </tr>        <tr>     <td>new_machinery_value</td>     <td>number</td>     <td>float</td>          <td>Value of New Machinery</td>       <td>30000.0</td>  </tr>        <tr>     <td>old_machinery_value</td>     <td>number</td>     <td>float</td>          <td>Value of Old Machinery</td>       <td>10000.0</td>  </tr>        <tr>     <td>new_machinery_ltv</td>     <td>number</td>     <td>float</td>          <td>LTV of New Machinery</td>       <td>20000.0</td>  </tr>        <tr>     <td>old_machinery_ltv</td>     <td>number</td>     <td>float</td>          <td>LTV of Old Machinery</td>       <td>10000.0</td>  </tr>        <tr>     <td>total_number_of_machines</td>     <td>integer</td>     <td></td>          <td>Total Number of Machines</td>       <td>4</td>  </tr>        <tr>     <td>total_value_of_machines</td>     <td>number</td>     <td>float</td>          <td>Total Value of Machines</td>       <td>500000.0</td>  </tr>        <tr>     <td>manufacturer_name</td>     <td>string</td>     <td></td>          <td>Name of the Manufacturer</td>       <td>BMW</td>  </tr>        <tr>     <td>machinery_hypothecated_to</td>     <td>string</td>     <td></td>          <td>Which institution/ individual is the machinery hypothecated to currently?</td>       <td>Neeraj</td>  </tr>        <tr>     <td>property_address</td>     <td>string</td>     <td></td>          <td>Property address</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>property_city</td>     <td>string</td>     <td></td>          <td>Property City</td>       <td>Chennai</td>  </tr>        <tr>     <td>property_district</td>     <td>string</td>     <td></td>          <td>Property District</td>       <td>Chennai</td>  </tr>        <tr>     <td>property_state</td>     <td>string</td>     <td></td>          <td>Property State</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>property_pincode</td>     <td>integer</td>     <td></td>          <td>Property Pincode</td>       <td>600025</td>  </tr>    </tbody>       </table>   <h4>References</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>name</td>     <td>string</td>     <td></td>          <td>Name of reference</td>       <td>Neeraj Chopra</td>  </tr>        <tr>     <td>address</td>     <td>string</td>     <td></td>          <td>Address details of reference</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>pincode</td>     <td>string</td>     <td></td>          <td>Pincode of reference address</td>       <td>600001</td>  </tr>        <tr>     <td>phone</td>     <td>string</td>     <td></td>          <td>Phone number of reference</td>       <td>9876543210</td>  </tr>    </tbody>       </table>   <h4>InsuranceDetails</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>insurance_type</td>     <td>string</td>     <td></td>          <td>Enter &#39;credit&#39;</td>       <td>credit</td>  </tr>        <tr>     <td>insurer_name</td>     <td>string</td>     <td></td>          <td>Loan Insurer Name</td>       <td>Tata AIG</td>  </tr>        <tr>     <td>nominee_details</td>     <td>string</td>     <td></td>          <td>Applicable if Credit Shield insurance is taken. Name of the nominee to be provided</td>       <td>Neeraj</td>  </tr>        <tr>     <td>nominee_date_of_birth</td>     <td>string</td>     <td>date</td>          <td>Applicable if Credit Shield insurance is taken. DOB of the nominee to be provided</td>       <td>1990-01-01</td>  </tr>        <tr>     <td>relationship</td>     <td>string</td>     <td></td>          <td>Applicable if Credit Shield insurance is taken. Relationship of nominee to be provided</td>       <td>friend</td>  </tr>        <tr>     <td>premium</td>     <td>number</td>     <td>float</td>          <td>Applicable if Credit Shield insurance is taken. Premium amount</td>       <td>100000.0</td>  </tr>        <tr>     <td>insurance_amount</td>     <td>number</td>     <td>float</td>          <td>Applicable if Credit Shield insurance is taken. Total insurance amount</td>       <td>300000.0</td>  </tr>        <tr>     <td>policy_number</td>     <td>integer</td>     <td></td>          <td>Applicable if Credit Shield insurance is taken. Policy number</td>       <td>0</td>  </tr>    </tbody>       </table>   <h4>Tranches</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>tranche_number</td>     <td>integer</td>     <td></td>          <td>Tranche Number</td>       <td>1</td>  </tr>        <tr>     <td>principal_amount</td>     <td>integer</td>     <td></td>          <td>Principal amount to be disbursed in the tranche</td>       <td>10000</td>  </tr>        <tr>     <td>differential_interest</td>     <td>integer</td>     <td></td>          <td>Broken period interest amount</td>       <td>100</td>  </tr>        <tr>     <td>processing_fee</td>     <td>integer</td>     <td></td>          <td>Processing fee amount (Inckusive of GST)</td>       <td>50</td>  </tr>        <tr>     <td>stamp_duty</td>     <td>integer</td>     <td></td>          <td>Stamp duty amount</td>       <td>100</td>  </tr>        <tr>     <td>insurance_charges</td>     <td>integer</td>     <td></td>          <td>Insurance premium inclusive of GST</td>       <td>100</td>  </tr>        <tr>     <td>documentation_charges</td>     <td>integer</td>     <td></td>          <td>Total documentation charges inclusive of GST</td>       <td>100</td>  </tr>        <tr>     <td>other_charges</td>     <td>integer</td>     <td></td>          <td>Any other charges inclusive of GST</td>       <td>100</td>  </tr>        <tr>     <td>closing_loan_principal</td>     <td>integer</td>     <td></td>          <td>Balance principal amount after this tranche</td>       <td>5000</td>  </tr>    </tbody>       </table>   <h4>LinkedLoanInfos</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>linked_loan_id</td>     <td>string</td>     <td></td>          <td>client Loan id of the loan that have to be linked to the current loan</td>       <td>CA_123</td>  </tr>        <tr>     <td>foreclosure</td>     <td>string</td>     <td></td>          <td>whether the loan has to be foreclosed or not. true/false</td>       <td>t</td>  </tr>        <tr>     <td>principal</td>     <td>number</td>     <td>float</td>          <td>Foreclosure principal for corresponding Linked loan being foreclosed</td>       <td>1000.0</td>  </tr>        <tr>     <td>interest</td>     <td>number</td>     <td>float</td>          <td>Foreclosure interest for corresponding Linked loan being foreclosed</td>       <td>100.0</td>  </tr>        <tr>     <td>other_charges</td>     <td>number</td>     <td>float</td>          <td>Foreclosure charges for corresponding Linked loan being foreclosed</td>       <td>50.0</td>  </tr>        <tr>     <td>overdue_charges</td>     <td>number</td>     <td>float</td>          <td>Foreclosure charges for corresponding Linked loan being foreclosed</td>       <td>100.0</td>  </tr>        <tr>     <td>penalty_charges</td>     <td>number</td>     <td>float</td>          <td>Foreclosure charges for corresponding Linked loan being foreclosed</td>       <td>100.0</td>  </tr>        <tr>     <td>fee_charges</td>     <td>number</td>     <td>float</td>          <td>Foreclosure charges for corresponding Linked loan being foreclosed</td>       <td>100.0</td>  </tr>        <tr>     <td>bounce_charges</td>     <td>number</td>     <td>float</td>          <td>Foreclosure charges for corresponding Linked loan being foreclosed</td>       <td>100.0</td>  </tr>        <tr>     <td>amount</td>     <td>number</td>     <td>float</td>          <td>Foreclosure charges for corresponding Linked loan being foreclosed</td>       <td>100.0</td>  </tr>    </tbody>       </table>   <h4>SourcingDetail</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>source_code</td>     <td>string</td>     <td></td>          <td>Originating system code</td>       <td>PNB</td>  </tr>        <tr>     <td>referrer_code</td>     <td>string</td>     <td></td>          <td>Referrer code in the financial institution&#39;s own CRM system</td>       <td>referrer_code_34</td>  </tr>        <tr>     <td>referrer_group</td>     <td>string</td>     <td></td>          <td>Referrer banking vertical in the financial institution&#39;s own CRM system</td>       <td>referrer_group_44</td>  </tr>        <tr>     <td>referrer_name</td>     <td>string</td>     <td></td>          <td>Name of the lead referrer</td>       <td>Albus</td>  </tr>        <tr>     <td>channel_code</td>     <td>string</td>     <td></td>          <td>Which channel of sourcing it was?</td>       <td>DSA sourcing</td>  </tr>        <tr>     <td>dst_code</td>     <td>string</td>     <td></td>          <td></td>       <td>dst_code_48</td>  </tr>        <tr>     <td>dsa</td>     <td>string</td>     <td></td>          <td>Name of the Direct Selling Agent</td>       <td>John Pvt Ltd.</td>  </tr>        <tr>     <td>dse</td>     <td>string</td>     <td></td>          <td>Name of the Direct Selling Executive</td>       <td>John</td>  </tr>        <tr>     <td>relationship_manager</td>     <td>string</td>     <td></td>          <td>Name of the Relationship Manager</td>       <td>Harry</td>  </tr>    </tbody>       </table>   <h4>DeviationDetails</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>summary</td>     <td>string</td>     <td></td>          <td>Summary details of the deviation being taken</td>       <td>This deviation refers to the nature of the segment itself where the corporate on onboarding high debt can continue to keep capex funding at optimum levels, thus TD/NCA is typically high in these funding cases</td>  </tr>        <tr>     <td>desc</td>     <td>string</td>     <td></td>          <td>Description of the deviation requested</td>       <td>High TD/NCA</td>  </tr>        <tr>     <td>mitigant</td>     <td>string</td>     <td></td>          <td>Mitigant description</td>       <td>Even though interest liabilities are higher on account of all current facilities, the company has shown substantial asset growth and cash flow has remained robust over the past 3 FY</td>  </tr>        <tr>     <td>level</td>     <td>string</td>     <td></td>          <td>Severity of the deviation being requested</td>       <td>high</td>  </tr>    </tbody>       </table>      #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>    <tbody>     <tr>       <td class=\"org-right\">201</td>       <td class=\"org-left\">Created</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Invalid request format</li>           <li>Missing required params</li>       </ul></td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">422</td>       <td class=\"org-left\">Unprocessable Entity</td>       <td class=\"org-left\"><ul>           <li>Client Loan Already Taken</li>           <li>Product Not Found</li>           <li>Document not found/accessible</li>       </td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    ## INDIAN STATES  - jammu_kashmir - himachal_pradesh - punjab - chandigarh - uttaranchal - haryana - delhi - rajasthan - uttar_pradesh - bihar - sikkim - arunachal_pradesh - nagaland - manipur - mizoram - tripura - meghalaya - assam - west_bengal - jharkhand - orissa - chhattisgarh - madhya_pradesh - gujarat - daman_diu - dadra_nagar_haveli - maharashtra - andhra_pradesh - karnataka - goa - lakshadweep - kerala - tamil_nadu - pondicherry - andaman_nicobar_islands - telangana  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_loan(product_id, client_name, body_create_loan, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            body_create_loan (BodyCreateLoan):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CreateLoanSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['body_create_loan'] = \
            body_create_loan
        return self.create_loan_endpoint.call_with_http_info(**kwargs)

    def create_repayment_schedule(
        self,
        product_id,
        client_name,
        loan_id,
        body_create_repayment_schedule,
        **kwargs
    ):
        """#Create Repayment Schedule  # noqa: E501

        Create Repayment Schedule    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>repayment_schedules</td>     <td>array</td>     <td></td>          <td>Refer table RepaymentSchedules for attributes</td>       <td>[{&quot;installment_no&quot;:1,&quot;due_date&quot;:&quot;2021-02-02&quot;,&quot;principal&quot;:10000.0,&quot;interest&quot;:100.0,&quot;amount&quot;:10200.0,&quot;pos&quot;:20000.0,&quot;other_charges&quot;:100.0},{&quot;installment_no&quot;:1,&quot;due_date&quot;:&quot;2021-02-02&quot;,&quot;principal&quot;:10000.0,&quot;interest&quot;:100.0,&quot;amount&quot;:10200.0,&quot;pos&quot;:20000.0,&quot;other_charges&quot;:100.0}]</td>  </tr>    </tbody>       </table>   <h4>RepaymentSchedules</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>installment_no</td>     <td>integer</td>     <td></td>          <td>Installment Number</td>       <td>1</td>  </tr>        <tr>     <td>due_date</td>     <td>string</td>     <td>date</td>          <td>Due Date for the Installment (YYYY-MM-DD)</td>       <td>2021-02-02</td>  </tr>        <tr>     <td>principal</td>     <td>number</td>     <td>float</td>          <td>Principal to be paid in the installment</td>       <td>10000.0</td>  </tr>        <tr>     <td>interest</td>     <td>number</td>     <td>float</td>          <td>Interest to be paid in the installment</td>       <td>100.0</td>  </tr>        <tr>     <td>amount</td>     <td>number</td>     <td>float</td>          <td>Total EMI amount</td>       <td>10200.0</td>  </tr>        <tr>     <td>pos</td>     <td>number</td>     <td>float</td>          <td>Closing Principal Outstanding</td>       <td>20000.0</td>  </tr>        <tr>     <td>other_charges</td>     <td>number</td>     <td>float</td>          <td>Other Charges</td>       <td>100.0</td>  </tr>    </tbody>       </table>     #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <colgroup> <col  class=\"org-right\" />  <col  class=\"org-left\" />  <col  class=\"org-left\" /> </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-right\">Code</th> <th scope=\"col\" class=\"org-left\">Message</th> <th scope=\"col\" class=\"org-left\">Reason</th> </tr> </thead>  <tbody> <tr> <td class=\"org-right\">201</td> <td class=\"org-left\">Created</td> <td class=\"org-left\">Success</td> </tr>   <tr> <td class=\"org-right\">400</td> <td class=\"org-left\">Bad Request</td> <td class=\"org-left\"><ul><li>Invalid request format</li> <li>Missing required params</li> </td> </tr>  <tr> <td class=\"org-right\">401</td> <td class=\"org-left\">Unauthorized</td> <td class=\"org-left\">Invalid API Key</td> </tr>  <tr> <td class=\"org-right\">404</td> <td class=\"org-left\">Not found</td> <td class=\"org-left\">Loan not found</td> </tr>   <tr> <td class=\"org-right\">412</td> <td class=\"org-left\">Pre-condition failed</td> <td class=\"org-left\"><ul><li>Installment(s) already exists</li> <li>Loan disbursement details not present</li> <li>Sum of Principal amount in the repayment schedule is not equal to loan's principal amount</li> <li>Number of installments in the repayment schedule should be equal to tenure or tenure + 1</li> <li>First installment date cannot be greater than 60 days from the date of disbursement</li> <li>First installment due date cannot be before loan disbursement date</li> <li>Amount is not equal to sum of Principal and Interest</li> <li>Invalid installment number</li> </td> </tr>   <tr> <td class=\"org-right\">500</td> <td class=\"org-left\">Internal Server Error</td> <td class=\"org-left\">Error occurred in the backend</td> </tr> </tbody> </table>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_repayment_schedule(product_id, client_name, loan_id, body_create_repayment_schedule, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            body_create_repayment_schedule (BodyCreateRepaymentSchedule):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CreateRSSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['body_create_repayment_schedule'] = \
            body_create_repayment_schedule
        return self.create_repayment_schedule_endpoint.call_with_http_info(**kwargs)

    def create_tranche(
        self,
        loan_id,
        client_name,
        body_create_tranche,
        **kwargs
    ):
        """#Create Tranche  # noqa: E501

        Create Tranche   This API endpoint can be used to create a tranche.  <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>tranche_number</td>     <td>integer</td>     <td></td>          <td>Tranche Number</td>       <td>1</td>  </tr>        <tr>     <td>principal_amount</td>     <td>integer</td>     <td></td>          <td>Principal amount to be disbursed in the tranche</td>       <td>100000</td>  </tr>        <tr>     <td>differential_interest</td>     <td>integer</td>     <td></td>          <td>Broken period interest amount</td>       <td>100</td>  </tr>        <tr>     <td>interest_start_date</td>     <td>string</td>     <td>date</td>          <td>Pre Emi interest due date</td>       <td>2021-01-01</td>  </tr>        <tr>     <td>processing_fee</td>     <td>integer</td>     <td></td>          <td>Processing fee amount (Inckusive of GST)</td>       <td>100</td>  </tr>        <tr>     <td>stamp_duty</td>     <td>integer</td>     <td></td>          <td>Stamp duty amount</td>       <td>100</td>  </tr>        <tr>     <td>insurance_charges</td>     <td>integer</td>     <td></td>          <td>Insurance premium inclusive of GST</td>       <td>100</td>  </tr>        <tr>     <td>documentation_charges</td>     <td>integer</td>     <td></td>          <td>Total documentation charges inclusive of GST</td>       <td>100</td>  </tr>        <tr>     <td>other_charges</td>     <td>integer</td>     <td></td>          <td>Any other charges inclusive of GST</td>       <td>100</td>  </tr>        <tr>     <td>closing_loan_principal</td>     <td>integer</td>     <td></td>          <td>Balance principal amount after this tranche</td>       <td>100000</td>  </tr>        <tr>     <td>tranche_doc_link</td>     <td>string</td>     <td></td>          <td>Link to the corresponding document</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>tranche_doc_link_password</td>     <td>string</td>     <td></td>          <td>Link to the corresponding document</td>       <td>12345678</td>  </tr>        <tr>     <td>disbursement_accounts</td>     <td>array</td>     <td></td>          <td>Refer table DisbursementAccounts for attributes</td>       <td>[{&quot;bank_name&quot;:&quot;HDFC&quot;,&quot;bank_account_type&quot;:&quot;savings&quot;,&quot;account_name&quot;:&quot;Arya&quot;,&quot;bank_branch_name&quot;:&quot;Nandanam&quot;,&quot;ifsc_code&quot;:&quot;HDFC000123&quot;,&quot;entity_type&quot;:&quot;dealer&quot;,&quot;account_no&quot;:987656453423,&quot;amount&quot;:1000000},{&quot;bank_name&quot;:&quot;HDFC&quot;,&quot;bank_account_type&quot;:&quot;savings&quot;,&quot;account_name&quot;:&quot;Arya&quot;,&quot;bank_branch_name&quot;:&quot;Nandanam&quot;,&quot;ifsc_code&quot;:&quot;HDFC000123&quot;,&quot;entity_type&quot;:&quot;dealer&quot;,&quot;account_no&quot;:987656453423,&quot;amount&quot;:1000000}]</td>  </tr>        <tr>     <td>loan_data</td>     <td>array</td>     <td></td>          <td>Refer table LoanData for attributes</td>       <td>[{&quot;pan_number&quot;:&quot;POIUY1234H&quot;,&quot;pan_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;pan_link_password&quot;:&quot;12345678&quot;,&quot;form_60_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;form_60_link_password&quot;:&quot;12345678&quot;,&quot;aadhar_number&quot;:&quot;987612345432&quot;,&quot;aadhar_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;aadhar_number_link_password&quot;:&quot;12345678&quot;,&quot;voter_id_number&quot;:&quot;RTG2291234&quot;,&quot;voter_id_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;voter_id_number_link_password&quot;:&quot;12345678&quot;,&quot;driving_license_number&quot;:&quot;TN0112345&quot;,&quot;driving_license_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;driving_license_number_link_password&quot;:&quot;12345678&quot;,&quot;passport_number&quot;:&quot;L4018345&quot;,&quot;passport_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;passport_link_password&quot;:&quot;12345678&quot;,&quot;video_image_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;video_image_link_password&quot;:&quot;12345678&quot;,&quot;video_kyc_detail&quot;:&quot;{&quot;profile_id&quot;:&quot;ABC12345&quot;,&quot;account_id&quot;:&quot;ABC12345&quot;,&quot;key&quot;:&quot;abc@123&quot;}&quot;,&quot;other_kyc_number&quot;:&quot;ABC12345&quot;,&quot;other_kyc_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_kyc_number_link_password&quot;:&quot;12345678&quot;,&quot;rent_agreement_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;rent_agreement_link_password&quot;:&quot;12345678&quot;,&quot;utility_bills_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;utility_bills_link_password&quot;:&quot;12345678&quot;,&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link_password&quot;:&quot;12345678&quot;,&quot;employer_tier&quot;:&quot;tier_1&quot;,&quot;employment_type&quot;:&quot;salaried&quot;,&quot;employment_details_name&quot;:&quot;Credavenue&quot;,&quot;employment_details_address&quot;:&quot;221B, Baker Street, Chennai&quot;,&quot;employment_details_years_of_experience&quot;:3.0,&quot;employment_details_designation&quot;:&quot;IT Consultant&quot;,&quot;employement_vintage_current_organisation&quot;:&quot;3&quot;,&quot;payslip_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;payslip_link_password&quot;:&quot;12345678&quot;,&quot;tds_certificate_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;tds_certificate_link_password&quot;:&quot;12345678&quot;},{&quot;pan_number&quot;:&quot;POIUY1234H&quot;,&quot;pan_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;pan_link_password&quot;:&quot;12345678&quot;,&quot;form_60_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;form_60_link_password&quot;:&quot;12345678&quot;,&quot;aadhar_number&quot;:&quot;987612345432&quot;,&quot;aadhar_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;aadhar_number_link_password&quot;:&quot;12345678&quot;,&quot;voter_id_number&quot;:&quot;RTG2291234&quot;,&quot;voter_id_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;voter_id_number_link_password&quot;:&quot;12345678&quot;,&quot;driving_license_number&quot;:&quot;TN0112345&quot;,&quot;driving_license_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;driving_license_number_link_password&quot;:&quot;12345678&quot;,&quot;passport_number&quot;:&quot;L4018345&quot;,&quot;passport_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;passport_link_password&quot;:&quot;12345678&quot;,&quot;video_image_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;video_image_link_password&quot;:&quot;12345678&quot;,&quot;video_kyc_detail&quot;:&quot;{&quot;profile_id&quot;:&quot;ABC12345&quot;,&quot;account_id&quot;:&quot;ABC12345&quot;,&quot;key&quot;:&quot;abc@123&quot;}&quot;,&quot;other_kyc_number&quot;:&quot;ABC12345&quot;,&quot;other_kyc_number_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_kyc_number_link_password&quot;:&quot;12345678&quot;,&quot;rent_agreement_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;rent_agreement_link_password&quot;:&quot;12345678&quot;,&quot;utility_bills_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;utility_bills_link_password&quot;:&quot;12345678&quot;,&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link_password&quot;:&quot;12345678&quot;,&quot;employer_tier&quot;:&quot;tier_1&quot;,&quot;employment_type&quot;:&quot;salaried&quot;,&quot;employment_details_name&quot;:&quot;Credavenue&quot;,&quot;employment_details_address&quot;:&quot;221B, Baker Street, Chennai&quot;,&quot;employment_details_years_of_experience&quot;:3.0,&quot;employment_details_designation&quot;:&quot;IT Consultant&quot;,&quot;employement_vintage_current_organisation&quot;:&quot;3&quot;,&quot;payslip_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;payslip_link_password&quot;:&quot;12345678&quot;,&quot;tds_certificate_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;tds_certificate_link_password&quot;:&quot;12345678&quot;}]</td>  </tr>        <tr>     <td>bureau_report_data</td>     <td>object</td>     <td></td>     <td>Refer table BureauReportData for attributes</td>       <td>{&quot;name_of_bureau&quot;:&quot;cibil&quot;,&quot;bureau_vintage&quot;:3,&quot;bureau_score&quot;:650,&quot;bureau_report_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bureau_report_link_password&quot;:&quot;12345678&quot;,&quot;bureau_json_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bureau_json_link_password&quot;:&quot;12345678&quot;,&quot;bureau_json&quot;:[&quot;{}&quot;,&quot;{}&quot;],&quot;commercial_bureau_score&quot;:330,&quot;commercial_bureau_score_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;commercial_bureau_score_link_password&quot;:&quot;12345678&quot;,&quot;partner_score_on_the_customer&quot;:800,&quot;total_existing_obligations&quot;:25000,&quot;credit_card_limit&quot;:30000,&quot;number_of_credit_cards&quot;:3,&quot;number_of_unsecured_loans&quot;:2,&quot;value_of_total_unsecured_loans&quot;:20000.0,&quot;number_of_loans&quot;:2,&quot;value_of_total_loans&quot;:20000.0,&quot;number_of_enquiries_3months&quot;:3,&quot;number_of_enquiries_6months&quot;:3,&quot;number_of_enquiries_12months&quot;:4,&quot;number_of_writeoff_suitfiled_settled_12months&quot;:4,&quot;max_dpd_tradeline_12months&quot;:6,&quot;max_overdue_tradeline&quot;:6,&quot;total_overdue_amount_12months&quot;:10000.0,&quot;loan_amount_settled_12months&quot;:25000.0,&quot;nature_of_loan_settled1&quot;:&quot;settled&quot;,&quot;nature_of_loan_settled2&quot;:&quot;closed&quot;,&quot;total_emi_bounces&quot;:3,&quot;emi_bounces_6months&quot;:3,&quot;emi_bounces_12months&quot;:3}</td>  </tr>        <tr>     <td>client_loan_id</td>     <td>string</td>     <td></td>          <td>Loan ID as per Partner&#39;s LMS</td>       <td>LOAN00001</td>  </tr>        <tr>     <td>business_data</td>     <td>object</td>     <td></td>     <td>Refer table BusinessData for attributes</td>       <td>{&quot;business_pan_number&quot;:&quot;BMMPG9018G&quot;,&quot;business_pan_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_pan_link_password&quot;:&quot;12345678&quot;,&quot;business_rc_number&quot;:&quot;U72200MH2009PLC123456&quot;,&quot;business_rc_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_rc_link_password&quot;:&quot;12345678&quot;,&quot;business_gst_number&quot;:&quot;29ABCDE1234F2Z5&quot;,&quot;business_gst_copy_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_gst_copy_link_password&quot;:&quot;12345678&quot;,&quot;business_udyog_aadhar_number&quot;:&quot;794065346725&quot;,&quot;business_udyog_aadhar_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_udyog_aadhar_link_password&quot;:&quot;12345678&quot;,&quot;business_ssi_number&quot;:&quot;7589297314&quot;,&quot;business_ssi_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_ssi_link_password&quot;:&quot;12345678&quot;,&quot;business_shops_est_number&quot;:&quot;2017086025&quot;,&quot;business_shops_est_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_shops_est_link_password&quot;:&quot;12345678&quot;,&quot;business_factory_regn_number&quot;:&quot;TVEIQ0615232&quot;,&quot;business_factory_regn_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_factory_regn_link_password&quot;:&quot;12345678&quot;,&quot;business_trade_license_number&quot;:&quot;EA131102014709112&quot;,&quot;business_trade_license_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_trade_license_link_password&quot;:&quot;12345678&quot;,&quot;business_place_photo_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_place_photo_link_password&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_continuity_proof_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;business_continuity_proof_link_password&quot;:&quot;12345678&quot;,&quot;other_business_address_proof_number&quot;:&quot;ABC12345&quot;,&quot;other_business_address_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_business_address_proof_link_password&quot;:&quot;12345678&quot;,&quot;no_of_business_authorised_persons&quot;:&quot;3&quot;,&quot;partnership_detail&quot;:&quot;{&quot;partnership_firm_pan&quot;:&quot;BMMPG9018G&quot;,&quot;partnership_pan_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;partnership_pan_link_password&quot;:&quot;12345678&quot;,&quot;partnership_deed_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;partnership_deed_link_password&quot;:&quot;12345678&quot;,&quot;beneficiary_owner_details_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;beneficiary_owner_details_link_password&quot;:&quot;12345678&quot;}&quot;,&quot;private_entity_detail&quot;:&quot;{&quot;cin_number&quot;:&quot;L21091KA2019OPC141331&quot;,&quot;cin_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;cin_link_password&quot;:&quot;12345678&quot;,&quot;moa_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;moa_link_password&quot;:&quot;12345678&quot;,&quot;aoa_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;aoa_link_password&quot;:&quot;12345678&quot;,&quot;board_resoultion_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;board_resoultion_link_password&quot;:&quot;12345678&quot;,&quot;share_holding_pattern_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;share_holding_pattern_link_password&quot;:&quot;12345678&quot;,&quot;other_company_proof&quot;:&quot;ABC12345&quot;,&quot;other_company_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_company_proof_link_password&quot;:&quot;12345678&quot;}&quot;}</td>  </tr>    </tbody>       </table>   <h4>DisbursementAccounts</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>bank_name</td>     <td>string</td>     <td></td>          <td>Name of the bank where disbursement needs to be done</td>       <td>HDFC</td>  </tr>        <tr>     <td>bank_account_type</td>     <td>string</td>     <td></td>          <td>Account type - Savings/Current/Overdraft/CC</td>       <td>savings</td>  </tr>        <tr>     <td>account_name</td>     <td>string</td>     <td></td>          <td>Bank account name where disbursement needs to be done</td>       <td>Arya</td>  </tr>        <tr>     <td>bank_branch_name</td>     <td>string</td>     <td></td>          <td>Bank branch name where disbursement needs to be done</td>       <td>Nandanam</td>  </tr>        <tr>     <td>ifsc_code</td>     <td>string</td>     <td></td>          <td>Bank IFSC wheredisbursement needs to be done</td>       <td>HDFC000123</td>  </tr>        <tr>     <td>entity_type</td>     <td>string</td>     <td></td>          <td>dealer / sub_dealer / originator / existing_lender / end_customer</td>       <td>dealer</td>  </tr>        <tr>     <td>account_no</td>     <td>integer</td>     <td></td>          <td>Account number of bank where disbursement needs to be done</td>       <td>987656453423</td>  </tr>        <tr>     <td>amount</td>     <td>integer</td>     <td></td>          <td>Amount to be transferred to particular Vendor/borrower</td>       <td>1000000</td>  </tr>    </tbody>       </table>   <h4>VideoKycDetail</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>profile_id</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Profile ID of the case as per the video KYC vendor</td>       <td>ABC12345</td>  </tr>        <tr>     <td>account_id</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Account ID of the case as per the video KYC vendor</td>       <td>ABC12345</td>  </tr>        <tr>     <td>key</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Key as per the video KYC vendor</td>       <td>abc@123</td>  </tr>    </tbody>       </table>   <h4>LoanData</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>pan_number</td>     <td>string</td>     <td></td>          <td>PAN Number of the Customer (10 digit Alphanumeric)</td>       <td>POIUY1234H</td>  </tr>        <tr>     <td>pan_link</td>     <td>array</td>     <td></td>          <td>PAN Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>pan_link_password</td>     <td>string</td>     <td></td>          <td>PAN Document Link</td>       <td>12345678</td>  </tr>        <tr>     <td>form_60_link</td>     <td>array</td>     <td></td>          <td>Form 60 Doument Link (If applicable)</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>form_60_link_password</td>     <td>string</td>     <td></td>          <td>Form 60 Doument Link Password (If applicable)</td>       <td>12345678</td>  </tr>        <tr>     <td>aadhar_number</td>     <td>string</td>     <td></td>          <td>Aadhar Number of the Customer (12 digits)</td>       <td>987612345432</td>  </tr>        <tr>     <td>aadhar_number_link</td>     <td>array</td>     <td></td>          <td>Aadhar Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>aadhar_number_link_password</td>     <td>string</td>     <td></td>          <td>Aadhar Document Link</td>       <td>12345678</td>  </tr>        <tr>     <td>voter_id_number</td>     <td>string</td>     <td></td>          <td>Voter ID Number of the Customer</td>       <td>RTG2291234</td>  </tr>        <tr>     <td>voter_id_number_link</td>     <td>array</td>     <td></td>          <td>Voter Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>voter_id_number_link_password</td>     <td>string</td>     <td></td>          <td>Voter Document Link</td>       <td>12345678</td>  </tr>        <tr>     <td>driving_license_number</td>     <td>string</td>     <td></td>          <td>Driving License Number of the Customer</td>       <td>TN0112345</td>  </tr>        <tr>     <td>driving_license_number_link</td>     <td>array</td>     <td></td>          <td>Driving License Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>driving_license_number_link_password</td>     <td>string</td>     <td></td>          <td>Driving License Document Link</td>       <td>12345678</td>  </tr>        <tr>     <td>passport_number</td>     <td>string</td>     <td></td>          <td>Passport Number of the Customer</td>       <td>L4018345</td>  </tr>        <tr>     <td>passport_link</td>     <td>array</td>     <td></td>          <td>Passport Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>passport_link_password</td>     <td>string</td>     <td></td>          <td>Passport Document Link</td>       <td>12345678</td>  </tr>        <tr>     <td>video_image_link</td>     <td>array</td>     <td></td>          <td>Video Image of the Applicant</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>video_image_link_password</td>     <td>string</td>     <td></td>          <td>Video Image of the Applicant</td>       <td>12345678</td>  </tr>        <tr>     <td>video_kyc_detail</td>     <td>object</td>     <td></td>      <td>Refer table VideoKycDetail for attributes</td>       <td>{&quot;profile_id&quot;:&quot;ABC12345&quot;,&quot;account_id&quot;:&quot;ABC12345&quot;,&quot;key&quot;:&quot;abc@123&quot;}</td>  </tr>        <tr>     <td>other_kyc_number</td>     <td>string</td>     <td></td>          <td>KYC Number of the Customer</td>       <td>ABC12345</td>  </tr>        <tr>     <td>other_kyc_number_link</td>     <td>array</td>     <td></td>          <td>KYC Image of the Customer</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>other_kyc_number_link_password</td>     <td>string</td>     <td></td>          <td>KYC Image of the Customer</td>       <td>12345678</td>  </tr>        <tr>     <td>rent_agreement_link</td>     <td>array</td>     <td></td>          <td>Rent Agreement Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>rent_agreement_link_password</td>     <td>string</td>     <td></td>          <td>Rent Agreement Document Link</td>       <td>12345678</td>  </tr>        <tr>     <td>utility_bills_link</td>     <td>array</td>     <td></td>          <td>Utility Bills Copies (If any)</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>utility_bills_link_password</td>     <td>string</td>     <td></td>          <td>Utility Bills Copies (If any)</td>       <td>12345678</td>  </tr>        <tr>     <td>photo_link</td>     <td>array</td>     <td></td>          <td>Photo Image of the Customer</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>photo_link_password</td>     <td>string</td>     <td></td>          <td>Photo Image of the Customer</td>       <td>12345678</td>  </tr>        <tr>     <td>employer_tier</td>     <td>string</td>     <td></td>          <td>tier_1, tier_2 etc. for  the employer</td>       <td>tier_1</td>  </tr>        <tr>     <td>employment_type</td>     <td>string</td>     <td></td>          <td>Salaried / Self-Employed</td>       <td>salaried</td>  </tr>        <tr>     <td>employment_details_name</td>     <td>string</td>     <td></td>          <td>Employer Name</td>       <td>Credavenue</td>  </tr>        <tr>     <td>employment_details_address</td>     <td>string</td>     <td></td>          <td>Office Address</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>employment_details_years_of_experience</td>     <td>number</td>     <td>float</td>          <td>Applicant&#39;s years of experience in the current organization</td>       <td>3.0</td>  </tr>        <tr>     <td>employment_details_designation</td>     <td>string</td>     <td></td>          <td>Applicant&#39;s Current Designation</td>       <td>IT Consultant</td>  </tr>        <tr>     <td>employement_vintage_current_organisation</td>     <td>string</td>     <td></td>          <td>Vintage</td>       <td>3</td>  </tr>        <tr>     <td>payslip_link</td>     <td>array</td>     <td></td>          <td>Last 3 Months Payslips</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>payslip_link_password</td>     <td>string</td>     <td></td>          <td>Last 3 Months Payslips</td>       <td>12345678</td>  </tr>        <tr>     <td>tds_certificate_link</td>     <td>array</td>     <td></td>          <td>Last 3 Years TDS Certificate</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>tds_certificate_link_password</td>     <td>string</td>     <td></td>          <td>Last 3 Years TDS Certificate</td>       <td>12345678</td>  </tr>    </tbody>       </table>   <h4>BureauJson</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>  </tbody>       </table>   <h4>BureauReportData</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>name_of_bureau</td>     <td>string</td>     <td></td>          <td>Cibil / Experian / Himark</td>       <td>cibil</td>  </tr>        <tr>     <td>bureau_vintage</td>     <td>integer</td>     <td></td>          <td>Vintage in the bureau. Number of years from the first trade line</td>       <td>3</td>  </tr>        <tr>     <td>bureau_score</td>     <td>integer</td>     <td></td>          <td>Bureau Score</td>       <td>650</td>  </tr>        <tr>     <td>bureau_report_link</td>     <td>array</td>     <td></td>          <td>Document of the bureau</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bureau_report_link_password</td>     <td>string</td>     <td></td>          <td>Document of the bureau - Password</td>       <td>12345678</td>  </tr>        <tr>     <td>bureau_json_link</td>     <td>array</td>     <td></td>          <td>Bureau Json placed in a link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bureau_json_link_password</td>     <td>string</td>     <td></td>          <td>Bureau Json placed in a link - Password</td>       <td>12345678</td>  </tr>        <tr>     <td>bureau_json</td>     <td>array</td>     <td></td>          <td>Refer table BureauJson for attributes</td>       <td>[{},{}]</td>  </tr>        <tr>     <td>commercial_bureau_score</td>     <td>integer</td>     <td></td>          <td>CRIF score</td>       <td>330</td>  </tr>        <tr>     <td>commercial_bureau_score_link</td>     <td>array</td>     <td></td>          <td>Commercial Bureau Document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>commercial_bureau_score_link_password</td>     <td>string</td>     <td></td>          <td>Commercial Bureau Document Password</td>       <td>12345678</td>  </tr>        <tr>     <td>partner_score_on_the_customer</td>     <td>integer</td>     <td></td>          <td>Score Captured by the Partner</td>       <td>800</td>  </tr>        <tr>     <td>total_existing_obligations</td>     <td>integer</td>     <td></td>          <td>Total Existing Obligations basis the Bureau Report</td>       <td>25000</td>  </tr>        <tr>     <td>credit_card_limit</td>     <td>integer</td>     <td></td>          <td>Total Credit Card Limit basis the Bureau Report</td>       <td>30000</td>  </tr>        <tr>     <td>number_of_credit_cards</td>     <td>integer</td>     <td></td>          <td>Total Number of Credit Cards per Bureau Report</td>       <td>3</td>  </tr>        <tr>     <td>number_of_unsecured_loans</td>     <td>integer</td>     <td></td>          <td>Total Number of Unsecured Loans per Bureau Report</td>       <td>2</td>  </tr>        <tr>     <td>value_of_total_unsecured_loans</td>     <td>number</td>     <td>float</td>          <td>Total value of unsecured loans</td>       <td>20000.0</td>  </tr>        <tr>     <td>number_of_loans</td>     <td>integer</td>     <td></td>          <td>Total Number of Loans per Bureau Report</td>       <td>2</td>  </tr>        <tr>     <td>value_of_total_loans</td>     <td>number</td>     <td>float</td>          <td>Total value of loans</td>       <td>20000.0</td>  </tr>        <tr>     <td>number_of_enquiries_3months</td>     <td>integer</td>     <td></td>          <td>Number of Enquiries in the Last 3 Months per Bureau Report</td>       <td>3</td>  </tr>        <tr>     <td>number_of_enquiries_6months</td>     <td>integer</td>     <td></td>          <td>Number of Enquiries in the Last 6 Months per Bureau Report</td>       <td>3</td>  </tr>        <tr>     <td>number_of_enquiries_12months</td>     <td>integer</td>     <td></td>          <td>Number of Enquiries in the Last 12 Months per Bureau Report</td>       <td>4</td>  </tr>        <tr>     <td>number_of_writeoff_suitfiled_settled_12months</td>     <td>integer</td>     <td></td>          <td>Number of Writeoff Suitfiled Settled in the Last 12 Months</td>       <td>4</td>  </tr>        <tr>     <td>max_dpd_tradeline_12months</td>     <td>integer</td>     <td></td>          <td>Maximum DPD Tradeline in the Last 12 Months</td>       <td>6</td>  </tr>        <tr>     <td>max_overdue_tradeline</td>     <td>integer</td>     <td></td>          <td>Maximum Overdue Tradeline</td>       <td>6</td>  </tr>        <tr>     <td>total_overdue_amount_12months</td>     <td>number</td>     <td>float</td>          <td>Total Overdue Amount in the Last 12 Months</td>       <td>10000.0</td>  </tr>        <tr>     <td>loan_amount_settled_12months</td>     <td>number</td>     <td>float</td>          <td>Loan Amount Settled in the Last 12 Months</td>       <td>25000.0</td>  </tr>        <tr>     <td>nature_of_loan_settled1</td>     <td>string</td>     <td></td>          <td>The nature of past loan settlement if any (Loan 1) - Settled/ Closed/ Written-off</td>       <td>settled</td>  </tr>        <tr>     <td>nature_of_loan_settled2</td>     <td>string</td>     <td></td>          <td>The nature of past loan settlement if any (Loan 2) - Settled/ Closed/ Written-off</td>       <td>closed</td>  </tr>        <tr>     <td>total_emi_bounces</td>     <td>integer</td>     <td></td>          <td>Total EMI Bounces</td>       <td>3</td>  </tr>        <tr>     <td>emi_bounces_6months</td>     <td>integer</td>     <td></td>          <td>EMI Bounces in the Last 6 Months</td>       <td>3</td>  </tr>        <tr>     <td>emi_bounces_12months</td>     <td>integer</td>     <td></td>          <td>EMI Bounces in the Last 12 Months</td>       <td>3</td>  </tr>    </tbody>       </table>   <h4>PartnershipDetail</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>partnership_firm_pan</td>     <td>string</td>     <td></td>          <td>PAN number of partnership</td>       <td>BMMPG9018G</td>  </tr>        <tr>     <td>partnership_pan_link</td>     <td>string</td>     <td></td>          <td>PAN image of partnership</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>partnership_pan_link_password</td>     <td>string</td>     <td></td>          <td>PAN image password of partnership</td>       <td>12345678</td>  </tr>        <tr>     <td>partnership_deed_link</td>     <td>string</td>     <td></td>          <td>Partnership deed image</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>partnership_deed_link_password</td>     <td>string</td>     <td></td>          <td>Partnership deed image password</td>       <td>12345678</td>  </tr>        <tr>     <td>beneficiary_owner_details_link</td>     <td>string</td>     <td></td>          <td>Shareholding pattern of the firm</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>beneficiary_owner_details_link_password</td>     <td>string</td>     <td></td>          <td>Shareholding pattern of the firm - password</td>       <td>12345678</td>  </tr>    </tbody>       </table>   <h4>PrivateEntityDetail</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>cin_number</td>     <td>string</td>     <td></td>          <td>CIN number in case of a company</td>       <td>L21091KA2019OPC141331</td>  </tr>        <tr>     <td>cin_link</td>     <td>string</td>     <td></td>          <td>CIN image</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>cin_link_password</td>     <td>string</td>     <td></td>          <td>CIN image password</td>       <td>12345678</td>  </tr>        <tr>     <td>moa_link</td>     <td>string</td>     <td></td>          <td>MOA image</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>moa_link_password</td>     <td>string</td>     <td></td>          <td>MOA image password</td>       <td>12345678</td>  </tr>        <tr>     <td>aoa_link</td>     <td>string</td>     <td></td>          <td>AOA image</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>aoa_link_password</td>     <td>string</td>     <td></td>          <td>AOA image password</td>       <td>12345678</td>  </tr>        <tr>     <td>board_resoultion_link</td>     <td>string</td>     <td></td>          <td>Board resolution image</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>board_resoultion_link_password</td>     <td>string</td>     <td></td>          <td>Board resolution image password</td>       <td>12345678</td>  </tr>        <tr>     <td>share_holding_pattern_link</td>     <td>string</td>     <td></td>          <td>Shareholding pattern image</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>share_holding_pattern_link_password</td>     <td>string</td>     <td></td>          <td>Shareholding pattern image password</td>       <td>12345678</td>  </tr>        <tr>     <td>other_company_proof</td>     <td>string</td>     <td></td>          <td>Free flowing text</td>       <td>ABC12345</td>  </tr>        <tr>     <td>other_company_proof_link</td>     <td>array</td>     <td></td>          <td>Image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>other_company_proof_link_password</td>     <td>string</td>     <td></td>          <td>Image password</td>       <td>12345678</td>  </tr>    </tbody>       </table>   <h4>BusinessData</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>business_pan_number</td>     <td>string</td>     <td></td>          <td>PAN number of business</td>       <td>BMMPG9018G</td>  </tr>        <tr>     <td>business_pan_link</td>     <td>string</td>     <td></td>          <td>PAN image of business</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_pan_link_password</td>     <td>string</td>     <td></td>          <td>PAN image password of business</td>       <td>12345678</td>  </tr>        <tr>     <td>business_rc_number</td>     <td>string</td>     <td></td>          <td>Registration number of the business</td>       <td>U72200MH2009PLC123456</td>  </tr>        <tr>     <td>business_rc_link</td>     <td>string</td>     <td></td>          <td>Image of the RC</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_rc_link_password</td>     <td>string</td>     <td></td>          <td>Image password of the RC</td>       <td>12345678</td>  </tr>        <tr>     <td>business_gst_number</td>     <td>string</td>     <td></td>          <td>Business GST number</td>       <td>29ABCDE1234F2Z5</td>  </tr>        <tr>     <td>business_gst_copy_link</td>     <td>string</td>     <td></td>          <td>Business GST image</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_gst_copy_link_password</td>     <td>string</td>     <td></td>          <td>Business GST image password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_udyog_aadhar_number</td>     <td>string</td>     <td></td>          <td>Business Udyog Aadhar Number</td>       <td>794065346725</td>  </tr>        <tr>     <td>business_udyog_aadhar_link</td>     <td>string</td>     <td></td>          <td>Business Udyog Aadhar Document</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_udyog_aadhar_link_password</td>     <td>string</td>     <td></td>          <td>Business Udyog Aadhar Document Password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_ssi_number</td>     <td>string</td>     <td></td>          <td>Small scall industries registration number</td>       <td>7589297314</td>  </tr>        <tr>     <td>business_ssi_link</td>     <td>string</td>     <td></td>          <td>Small scall industries registration document</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_ssi_link_password</td>     <td>string</td>     <td></td>          <td>Small scall industries registration document password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_shops_est_number</td>     <td>string</td>     <td></td>          <td>Shop establishment number</td>       <td>2017086025</td>  </tr>        <tr>     <td>business_shops_est_link</td>     <td>string</td>     <td></td>          <td>Shop establishment document</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_shops_est_link_password</td>     <td>string</td>     <td></td>          <td>Shop establishment document password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_factory_regn_number</td>     <td>string</td>     <td></td>          <td>Factory riegistration number</td>       <td>TVEIQ0615232</td>  </tr>        <tr>     <td>business_factory_regn_link</td>     <td>string</td>     <td></td>          <td>Factory riegistration document</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_factory_regn_link_password</td>     <td>string</td>     <td></td>          <td>Factory riegistration document password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_trade_license_number</td>     <td>string</td>     <td></td>          <td>Trade license number</td>       <td>EA131102014709112</td>  </tr>        <tr>     <td>business_trade_license_link</td>     <td>string</td>     <td></td>          <td>Trade license document</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_trade_license_link_password</td>     <td>string</td>     <td></td>          <td>Trade license document password</td>       <td>12345678</td>  </tr>        <tr>     <td>business_place_photo_link</td>     <td>string</td>     <td></td>          <td>Business place photo image</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_place_photo_link_password</td>     <td>string</td>     <td></td>          <td>Business place photo image</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_continuity_proof_link</td>     <td>string</td>     <td></td>          <td>Business continuity proof document</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>business_continuity_proof_link_password</td>     <td>string</td>     <td></td>          <td>Business continuity proof document password</td>       <td>12345678</td>  </tr>        <tr>     <td>other_business_address_proof_number</td>     <td>string</td>     <td></td>          <td>any other adddress proof number</td>       <td>ABC12345</td>  </tr>        <tr>     <td>other_business_address_proof_link</td>     <td>array</td>     <td></td>          <td>any other adddress proof image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>other_business_address_proof_link_password</td>     <td>string</td>     <td></td>          <td>any other adddress proof image password</td>       <td>12345678</td>  </tr>        <tr>     <td>no_of_business_authorised_persons</td>     <td>string</td>     <td></td>          <td>Number of authorized person for business</td>       <td>3</td>  </tr>        <tr>     <td>partnership_detail</td>     <td>object</td>     <td></td>     <td>Refer table PartnershipDetail for attributes</td>       <td>{&quot;partnership_firm_pan&quot;:&quot;BMMPG9018G&quot;,&quot;partnership_pan_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;partnership_pan_link_password&quot;:&quot;12345678&quot;,&quot;partnership_deed_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;partnership_deed_link_password&quot;:&quot;12345678&quot;,&quot;beneficiary_owner_details_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;beneficiary_owner_details_link_password&quot;:&quot;12345678&quot;}</td>  </tr>        <tr>     <td>private_entity_detail</td>     <td>object</td>           <td>Refer table PrivateEntityDetail for attributes</td>       <td>{&quot;cin_number&quot;:&quot;L21091KA2019OPC141331&quot;,&quot;cin_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;cin_link_password&quot;:&quot;12345678&quot;,&quot;moa_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;moa_link_password&quot;:&quot;12345678&quot;,&quot;aoa_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;aoa_link_password&quot;:&quot;12345678&quot;,&quot;board_resoultion_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;board_resoultion_link_password&quot;:&quot;12345678&quot;,&quot;share_holding_pattern_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;share_holding_pattern_link_password&quot;:&quot;12345678&quot;,&quot;other_company_proof&quot;:&quot;ABC12345&quot;,&quot;other_company_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_company_proof_link_password&quot;:&quot;12345678&quot;}</td>  </tr>    </tbody>       </table>      #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>    <tbody>     <tr>       <td class=\"org-right\">201</td>       <td class=\"org-left\">Created</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Invalid request format</li>           <li>Missing required params</li>       </ul></td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">422</td>       <td class=\"org-left\">Unprocessable Entity</td>       <td class=\"org-left\"><ul>           <li>Tranche Number Already Taken</li>           <li>Loan Not Found</li>           <li>Document not found/accessible</li>       </td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>     # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_tranche(loan_id, client_name, body_create_tranche, async_req=True)
        >>> result = thread.get()

        Args:
            loan_id (str): Client Loan ID as provided during loan creation
            client_name (str): Name of the client
            body_create_tranche (BodyCreateTranche):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            ResponseCreateTranche
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['loan_id'] = \
            loan_id
        kwargs['client_name'] = \
            client_name
        kwargs['body_create_tranche'] = \
            body_create_tranche
        return self.create_tranche_endpoint.call_with_http_info(**kwargs)

    def disburse_loan(
        self,
        product_id,
        client_name,
        loan_id,
        body_disburse_loan,
        **kwargs
    ):
        """#Disburse Loan  # noqa: E501

        Disburse Loan API  This endpoint can be used to disburse the loan.    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>first_repayment_date</td>     <td>string</td>     <td>date</td>          <td>First repayment date as per repayment schedule</td>       <td>2021-02-02</td>  </tr>        <tr>     <td>disbursement_date</td>     <td>string</td>     <td>date</td>          <td>Disbursement date to the end customer</td>       <td>2021-01-02</td>  </tr>   <tr>     <td>disbursement_value_date</td>     <td>string</td>     <td>date</td>          <td>Date on which loan id disbursed</td>       <td>2021-12-05</td>  </tr>     <tr>     <td>instrument_number</td>     <td>string</td>     <td></td>          <td>UTR / Cheque Number</td>       <td>UTR123456</td>  </tr>        <tr>     <td>instrument_type</td>     <td>string</td>     <td></td>          <td>RTGS / NEFT / UPI / Cheque</td>       <td>NEFT</td>  </tr>        <tr>     <td>penny_test_status</td>     <td>boolean</td>     <td>boolean</td>          <td>Penny Test Status</td>       <td>true</td>  </tr>        <tr>     <td>penny_test_report_link</td>     <td>array</td>     <td></td>          <td>Penny Test Status Report Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>penny_test_report_link_password</td>     <td>string</td>     <td></td>          <td>Penny Test Status Report Link Password</td>       <td>12345678</td>  </tr>        <tr>     <td>disbursement_accounts</td>     <td>array</td>     <td></td>          <td>Refer table DisbursementAccounts for attributes</td>       <td>[{&quot;account_no&quot;:&quot;42710779755&quot;,&quot;disbursement_date&quot;:&quot;2021-01-02&quot;,&quot;disbursement_value_date&quot;:&quot;2021-12-05&quot;,&quot;disbursed_amount&quot;:100000.0,&quot;instrument_number&quot;:&quot;UTR123456&quot;,&quot;instrument_type&quot;:&quot;NEFT&quot;},{&quot;account_no&quot;:&quot;42710779755&quot;,&quot;disbursement_date&quot;:&quot;2021-01-02&quot;,&quot;disbursement_value_date&quot;:&quot;2021-12-05&quot;,&quot;disbursed_amount&quot;:100000.0,&quot;instrument_number&quot;:&quot;UTR123456&quot;,&quot;instrument_type&quot;:&quot;NEFT&quot;}]</td>  </tr>    </tbody>       </table>   <h4>DisbursementAccounts</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>account_no</td>     <td>string</td>     <td></td>          <td>Account number of the bank where disbursement needs to be done</td>       <td>42710779755</td>  </tr>        <tr>     <td>disbursement_date</td>     <td>string</td>     <td>date</td>          <td>Disbursement date to the end customer</td>       <td>2021-01-02</td>  </tr>   <tr>     <td>disbursement_value_date</td>     <td>string</td>     <td>date</td>          <td>Date on which loan id disbursed</td>       <td>2021-12-05</td>  </tr>     <tr>     <td>disbursed_amount</td>     <td>number</td>     <td>float</td>          <td>Disbursed Amount</td>       <td>100000.0</td>  </tr>        <tr>     <td>instrument_number</td>     <td>string</td>     <td></td>          <td>UTR / Cheque Number</td>       <td>UTR123456</td>  </tr>        <tr>     <td>instrument_type</td>     <td>string</td>     <td></td>          <td>RTGS / NEFT / UPI / Cheque</td>       <td>NEFT</td>  </tr>    </tbody>       </table>     #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.disburse_loan(product_id, client_name, loan_id, body_disburse_loan, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            body_disburse_loan (BodyDisburseLoan):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            AgreementSignedSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['body_disburse_loan'] = \
            body_disburse_loan
        return self.disburse_loan_endpoint.call_with_http_info(**kwargs)

    def get_collection_details(
        self,
        product_id,
        client_name,
        loan_id,
        **kwargs
    ):
        """Get Collection Details  # noqa: E501

        # Get Collection Details  This API endpoint can be used to get the Payment details.  #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <colgroup> <col  class=\"org-right\" />  <col  class=\"org-left\" />  <col  class=\"org-left\" /> </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-right\">Code</th> <th scope=\"col\" class=\"org-left\">Message</th> <th scope=\"col\" class=\"org-left\">Reason</th> </tr> </thead>  <tbody> <tr> <td class=\"org-right\">200</td> <td class=\"org-left\">OK</td> <td class=\"org-left\">Success</td> </tr>   <tr> <td class=\"org-right\">401</td> <td class=\"org-left\">Unauthorized</td> <td class=\"org-left\">Invalid API Key</td> </tr>   <tr> <td class=\"org-right\">404</td> <td class=\"org-left\">Not found</td> <td class=\"org-left\">Loan not found</td> </tr>   <tr> <td class=\"org-right\">500</td> <td class=\"org-left\">Internal Server Error</td> <td class=\"org-left\">Error occurred in the backend</td> </tr> </tbody> </table>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_collection_details(product_id, client_name, loan_id, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            GetPaymentSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        return self.get_collection_details_endpoint.call_with_http_info(**kwargs)

    def get_interest_accrual(
        self,
        product_id,
        client_name,
        loan_id,
        file_id,
        **kwargs
    ):
        """#Get Interest Accrual  # noqa: E501

        Get Interest Accrual API    #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_interest_accrual(product_id, client_name, loan_id, file_id, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            file_id (str): File ID returned in the response of upload interest accrual

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            AgreementSignedSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['file_id'] = \
            file_id
        return self.get_interest_accrual_endpoint.call_with_http_info(**kwargs)

    def get_loan_details(
        self,
        product_id,
        client_name,
        loan_id,
        **kwargs
    ):
        """#Get Loan Details  # noqa: E501

        Get Loan Details  This API endpoint can be used to get the loan details. The possible loan status values are  ## Loan Status  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <colgroup> <col  class=\"org-left\" />  <col  class=\"org-left\" /> </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-left\">State</th> <th scope=\"col\" class=\"org-left\">Description</th> </tr> </thead>  <tbody> <tr> <td class=\"org-left\">new</td> <td class=\"org-left\">When the loan is created</td> </tr>   <tr> <td class=\"org-left\">approved</td> <td class=\"org-left\">When the loan is approved by the investor</td> </tr>   <tr> <td class=\"org-left\">rejected</td> <td class=\"org-left\">When the loan is rejected by the investor</td> </tr>   <tr> <td class=\"org-left\">agreement_signed</td> <td class=\"org-left\">When end borrower agreement/EKYC is signed/collected</td> </tr>   <tr> <td class=\"org-left\">disbursement_ready</td> <td class=\"org-left\">When investor is ready to disburse the funds</td> </tr>   <tr> <td class=\"org-left\">dropped</td> <td class=\"org-left\">When the loan gets rejected by the investor at agreement signed state</td> </tr>   <tr> <td class=\"org-left\">disbursed</td> <td class=\"org-left\">When the loan moves to the disbursed state by the investor from agreement signed state</td> </tr>   <tr> <td class=\"org-left\">matured</td> <td class=\"org-left\">After closure of all installments, the loan moves to the matured state</td> </tr> </tbody> </table>   #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <colgroup> <col  class=\"org-right\" />  <col  class=\"org-left\" />  <col  class=\"org-left\" /> </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-right\">Code</th> <th scope=\"col\" class=\"org-left\">Message</th> <th scope=\"col\" class=\"org-left\">Reason</th> </tr> </thead>  <tbody> <tr> <td class=\"org-right\">200</td> <td class=\"org-left\">OK</td> <td class=\"org-left\">Success</td> </tr>   <tr> <td class=\"org-right\">401</td> <td class=\"org-left\">Unauthorized</td> <td class=\"org-left\">Invalid API Key</td> </tr>   <tr> <td class=\"org-right\">404</td> <td class=\"org-left\">Not found</td> <td class=\"org-left\">Loan not found</td> </tr>   <tr> <td class=\"org-right\">500</td> <td class=\"org-left\">Internal Server Error</td> <td class=\"org-left\">Error occurred in the backend</td> </tr> </tbody> </table>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_loan_details(product_id, client_name, loan_id, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            BodyGetLoanDetails
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        return self.get_loan_details_endpoint.call_with_http_info(**kwargs)

    def get_repayment_schedule_details(
        self,
        product_id,
        client_name,
        loan_id,
        **kwargs
    ):
        """#Get Repayment Schedule Details  # noqa: E501

        Get RS Details  This API endpoint can be used to get the repayment schedule details of the loan.  #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <colgroup> <col  class=\"org-right\" />  <col  class=\"org-left\" />  <col  class=\"org-left\" /> </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-right\">Code</th> <th scope=\"col\" class=\"org-left\">Message</th> <th scope=\"col\" class=\"org-left\">Reason</th> </tr> </thead>  <tbody> <tr> <td class=\"org-right\">200</td> <td class=\"org-left\">OK</td> <td class=\"org-left\">Success</td> </tr>   <tr> <td class=\"org-right\">401</td> <td class=\"org-left\">Unauthorized</td> <td class=\"org-left\">Invalid API Key</td> </tr>   <tr> <td class=\"org-right\">404</td> <td class=\"org-left\">Not found</td> <td class=\"org-left\">Loan not found</td> </tr>   <tr> <td class=\"org-right\">500</td> <td class=\"org-left\">Internal Server Error</td> <td class=\"org-left\">Error occurred in the backend</td> </tr> </tbody> </table>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_repayment_schedule_details(product_id, client_name, loan_id, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            GetRSSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        return self.get_repayment_schedule_details_endpoint.call_with_http_info(**kwargs)

    def get_tranche_details(
        self,
        product_id,
        client_name,
        loan_id,
        id,
        **kwargs
    ):
        """#Get Tranche Details  # noqa: E501

        Get Tranche Details  This API endpoint can be used to get the tranche details of loan.  #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <colgroup> <col  class=\"org-right\" />  <col  class=\"org-left\" />  <col  class=\"org-left\" /> </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-right\">Code</th> <th scope=\"col\" class=\"org-left\">Message</th> <th scope=\"col\" class=\"org-left\">Reason</th> </tr> </thead>  <tbody> <tr> <td class=\"org-right\">200</td> <td class=\"org-left\">OK</td> <td class=\"org-left\">Success</td> </tr>   <tr> <td class=\"org-right\">401</td> <td class=\"org-left\">Unauthorized</td> <td class=\"org-left\">Invalid API Key</td> </tr>   <tr> <td class=\"org-right\">404</td> <td class=\"org-left\">Not found</td> <td class=\"org-left\">Loan not found</td> </tr>   <tr> <td class=\"org-right\">500</td> <td class=\"org-left\">Internal Server Error</td> <td class=\"org-left\">Error occurred in the backend</td> </tr> </tbody> </table>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_tranche_details(product_id, client_name, loan_id, id, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            id (float): Tranche Number of Loan

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['id'] = \
            id
        return self.get_tranche_details_endpoint.call_with_http_info(**kwargs)

    def property_review(
        self,
        product_id,
        client_name,
        loan_id,
        body_property_review,
        **kwargs
    ):
        """#Property Review  # noqa: E501

        Property Review API  This endpoint is used for SME Secured to share the Property details or documents after the loan is credit approved by lender.   **Expected Loan Status: \"credit_approved\"**    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>legal_report_link</td>     <td>array</td>     <td></td>          <td>LEGAL REPORT LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>validation_report_link</td>     <td>array</td>     <td></td>          <td>VALUATION REPORT LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>collateral_photo_link</td>     <td>array</td>     <td></td>          <td>COLLATERAL PHOTO LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>field_verification_report_link</td>     <td>array</td>     <td></td>          <td>FIELD VERIFICATION REPORT LINK</td>       <td>[&quot;12345678&quot;, &quot;12345678&quot;]</td>  </tr>        <tr>     <td>tele_verification_report_link</td>     <td>array</td>     <td></td>          <td>TELE VERIFICATION REPORT LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>property_inspection_report_link</td>     <td>array</td>     <td></td>          <td>PROPERTY INSPECTION REPORT LINK</td>       <td>[&quot;12345678&quot;, &quot;12345678&quot;]</td>  </tr>        <tr>     <td>unit_visit_report_link</td>     <td>array</td>     <td></td>          <td>UNIT VISIT REPORT LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>cersai_check_report_link</td>     <td>array</td>     <td></td>          <td>DRF Image</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>balance_transfer_report_link</td>     <td>array</td>     <td></td>          <td>BALANCE TRANSFER REPORT LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>noc_from_existing_lender_link</td>     <td>array</td>     <td></td>          <td>NOC FROM EXISTING LENDER LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>property_tax_card_or_receipt_link</td>     <td>array</td>     <td></td>          <td>PROPERTY TAX CARD/RECEIPT_LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>water_tax_or_receipt_link</td>     <td>array</td>     <td></td>          <td>WATER TAX CARD/RECEIPT_LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>eb_card_link</td>     <td>array</td>     <td></td>          <td>EB CARD LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>mod_receipt_link</td>     <td>array</td>     <td></td>          <td>MOD RECEIPT_LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>entire_set_of_property_documents_link</td>     <td>array</td>     <td></td>          <td>ENTIRE SET OF PROPERTY DOCUMENTS LINK</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>    </tbody>       </table>    #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.property_review(product_id, client_name, loan_id, body_property_review, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            body_property_review (BodyPropertyReview):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            PropertyReviewSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['body_property_review'] = \
            body_property_review
        return self.property_review_endpoint.call_with_http_info(**kwargs)

    def update_advance_collection(
        self,
        product_id,
        client_name,
        loan_id,
        advance_payment_id,
        body_update_advance_collection,
        **kwargs
    ):
        """#Update Advance Collection  # noqa: E501

        Update Advance Collection API    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>investor_transfer_date</td>     <td>string</td>     <td>date</td>          <td>Date when originator transferred the amount to investor (YYYY-MM-DD)</td>       <td>2017-01-02</td>  </tr>    </tbody>       </table>    #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.update_advance_collection(product_id, client_name, loan_id, advance_payment_id, body_update_advance_collection, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            advance_payment_id (str): Advance Payment ID returned in Create Advance API
            body_update_advance_collection (BodyUpdateAdvanceCollection):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            RequestSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['advance_payment_id'] = \
            advance_payment_id
        kwargs['body_update_advance_collection'] = \
            body_update_advance_collection
        return self.update_advance_collection_endpoint.call_with_http_info(**kwargs)

    def update_collection_entry(
        self,
        product_id,
        client_name,
        loan_id,
        payment_id,
        body_update_collection_entry,
        **kwargs
    ):
        """#Update Collection Entry  # noqa: E501

        Update Collection API    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>investor_transfer_date</td>     <td>string</td>     <td>date</td>          <td>Date when originator transferred the amount to investor (YYYY-MM-DD)</td>       <td>2021-02-02</td>  </tr>    </tbody>       </table>     #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.update_collection_entry(product_id, client_name, loan_id, payment_id, body_update_collection_entry, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            payment_id (str): Payment Reference/Instrument Number as provided during collection creation
            body_update_collection_entry (BodyUpdateCollectionEntry):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            AgreementSignedSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['payment_id'] = \
            payment_id
        kwargs['body_update_collection_entry'] = \
            body_update_collection_entry
        return self.update_collection_entry_endpoint.call_with_http_info(**kwargs)

    def update_loan(
        self,
        product_id,
        client_name,
        loan_id,
        body_update_loan,
        **kwargs
    ):
        """#Update Loan  # noqa: E501

        Update Loan API  This endpoint can be used to update the loan status to agreement signed.  **Expected Loan Status: \"approved\"**    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>principal_amount</td>     <td>number</td>     <td>float</td>          <td>Total Loan Amount to the Borrower (in Rupees)</td>       <td>1000000.0</td>  </tr>        <tr>     <td>loan_amount</td>     <td>number</td>     <td>float</td>          <td>Total Loan Amount</td>       <td>1000000.0</td>  </tr>        <tr>     <td>interest_rate</td>     <td>number</td>     <td>float</td>          <td>Reducing balance interest rate of the customer in %. This is the interest rate to be mentioned in the sanction letter as well</td>       <td>20.2</td>  </tr>        <tr>     <td>tenure</td>     <td>integer</td>     <td></td>          <td>Tenure of the loan</td>       <td>12</td>  </tr>        <tr>     <td>tenure_frequency</td>     <td>string</td>     <td></td>          <td>Daily / Weekly / Monthly</td>       <td>monthly</td>  </tr>        <tr>     <td>repayment_frequency</td>     <td>string</td>     <td></td>          <td>Daily / Weekly / Monthly / Bullet</td>       <td>monthly</td>  </tr>        <tr>     <td>number_of_repayments</td>     <td>integer</td>     <td></td>          <td>Number of repayments as per the repayment schedule</td>       <td>12</td>  </tr>        <tr>     <td>disbursement_accounts</td>     <td>array</td>     <td></td>          <td>Refer table DisbursementAccounts for attributes</td>       <td>[{&quot;id&quot;:&quot;1&quot;,&quot;account_type&quot;:&quot;borrower&quot;,&quot;bank_name&quot;:&quot;HDFC&quot;,&quot;bank_account_type&quot;:&quot;savings&quot;,&quot;account_name&quot;:&quot;Arya&quot;,&quot;bank_branch_name&quot;:&quot;Nandanam&quot;,&quot;ifsc_code&quot;:&quot;HDFC000123&quot;,&quot;entity_type&quot;:&quot;end_customer&quot;,&quot;account_no&quot;:&quot;54321678912&quot;,&quot;amount&quot;:100000.0},{&quot;id&quot;:&quot;1&quot;,&quot;account_type&quot;:&quot;borrower&quot;,&quot;bank_name&quot;:&quot;HDFC&quot;,&quot;bank_account_type&quot;:&quot;savings&quot;,&quot;account_name&quot;:&quot;Arya&quot;,&quot;bank_branch_name&quot;:&quot;Nandanam&quot;,&quot;ifsc_code&quot;:&quot;HDFC000123&quot;,&quot;entity_type&quot;:&quot;end_customer&quot;,&quot;account_no&quot;:&quot;54321678912&quot;,&quot;amount&quot;:100000.0}]</td>  </tr>    </tbody>       </table>   <h4>DisbursementAccounts</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>id</td>     <td>string</td>     <td></td>          <td>ID as provided in Get Loan Details API</td>       <td>1</td>  </tr>        <tr>     <td>account_type</td>     <td>string</td>     <td></td>          <td>Borrower/Existing Lender</td>       <td>borrower</td>  </tr>        <tr>     <td>bank_name</td>     <td>string</td>     <td></td>          <td>Name of the bank where disbursement needs to be done</td>       <td>HDFC</td>  </tr>        <tr>     <td>bank_account_type</td>     <td>string</td>     <td></td>          <td>Account type - Savings/Current/Overdraft/CC</td>       <td>savings</td>  </tr>        <tr>     <td>account_name</td>     <td>string</td>     <td></td>          <td>Bank account name where disbursement needs to be done</td>       <td>Arya</td>  </tr>        <tr>     <td>bank_branch_name</td>     <td>string</td>     <td></td>          <td>Bank branch name where disbursement needs to be done</td>       <td>Nandanam</td>  </tr>        <tr>     <td>ifsc_code</td>     <td>string</td>     <td></td>          <td>Bank IFSC where disbursement needs to be done</td>       <td>HDFC000123</td>  </tr>        <tr>     <td>entity_type</td>     <td>string</td>     <td></td>          <td>Dealer / Sub-Dealer / Originator / Existing Lender / End Customer</td>       <td>end_customer</td>  </tr>        <tr>     <td>account_no</td>     <td>string</td>     <td></td>          <td>Account number of the bank where disbursement needs to be done</td>       <td>54321678912</td>  </tr>        <tr>     <td>amount</td>     <td>number</td>     <td>float</td>          <td>Amount to be transferred to particular Vendor/Borrower</td>       <td>100000.0</td>  </tr>    </tbody>       </table>     #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.update_loan(product_id, client_name, loan_id, body_update_loan, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            body_update_loan (BodyUpdateLoan):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            RequestSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['body_update_loan'] = \
            body_update_loan
        return self.update_loan_endpoint.call_with_http_info(**kwargs)

    def update_post_disbursement(
        self,
        product_id,
        client_name,
        loan_id,
        body_update_post_disbursement,
        **kwargs
    ):
        """#Update Post Disbursement  # noqa: E501

        Update Post Disbursement API    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>customer_type</td>     <td>string</td>     <td></td>          <td>Individual / Corporate</td>       <td>individual</td>  </tr>        <tr>     <td>customer_category</td>     <td>string</td>     <td></td>          <td>Salaried, Self-Empolyed</td>       <td>salaried</td>  </tr>        <tr>     <td>first_name</td>     <td>string</td>     <td></td>          <td>First Name of the Customer</td>       <td>Neeraj</td>  </tr>        <tr>     <td>middle_name</td>     <td>string</td>     <td></td>          <td>Middle Name of the Customer</td>       <td>Kumar</td>  </tr>        <tr>     <td>last_name</td>     <td>string</td>     <td></td>          <td>Last Name of the Customer</td>       <td>Chopra</td>  </tr>        <tr>     <td>gender</td>     <td>string</td>     <td></td>          <td>M / F / O</td>       <td>M</td>  </tr>        <tr>     <td>date_of_birth</td>     <td>string</td>     <td>date</td>          <td>Date of birth in YYYY-MM-DD</td>       <td>1995-12-05</td>  </tr>        <tr>     <td>age</td>     <td>integer</td>     <td></td>          <td>Age in years</td>       <td>26</td>  </tr>        <tr>     <td>mobile_number</td>     <td>integer</td>     <td></td>          <td>Mobile Number of the Customer (10 digits)</td>       <td>9876543210</td>  </tr>        <tr>     <td>email</td>     <td>string</td>     <td></td>          <td>Permanent Email id of the Customer</td>       <td>minato@gmail.com</td>  </tr>        <tr>     <td>official_email_id</td>     <td>string</td>     <td></td>          <td>Official Email ID of the Customer</td>       <td>minato_namikaze@credavenue.com</td>  </tr>        <tr>     <td>current_address</td>     <td>string</td>     <td></td>          <td>Current address of the applicant. Free flowing text</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>current_city</td>     <td>string</td>     <td></td>          <td>City in which applicant is currently residing. Free flowing for now</td>       <td>Chennai</td>  </tr>        <tr>     <td>current_district</td>     <td>string</td>     <td></td>          <td>District in which applicant is currently residing. Free flowing for now</td>       <td>Chennai</td>  </tr>        <tr>     <td>current_state</td>     <td>string</td>     <td></td>          <td>State in which applicant is currently residing. Free flowing for now</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>current_pincode</td>     <td>integer</td>     <td></td>          <td>Pincode of the current address</td>       <td>600089</td>  </tr>        <tr>     <td>residence_type_current_address</td>     <td>string</td>     <td></td>          <td>rented / owned / leased</td>       <td>rented</td>  </tr>        <tr>     <td>years_of_stay_in_current_address</td>     <td>integer</td>     <td></td>          <td>How many years stayed in the current address</td>       <td>5</td>  </tr>        <tr>     <td>permanent_address</td>     <td>string</td>     <td></td>          <td>Permanent address of the customer. Free flowing for now</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>permanent_city</td>     <td>string</td>     <td></td>          <td>Permanent city of the customer. Free flowing for now</td>       <td>Chennai</td>  </tr>        <tr>     <td>permanent_district</td>     <td>string</td>     <td></td>          <td>Permanent district of the customer. Free flowing for now</td>       <td>Chennai</td>  </tr>        <tr>     <td>permanent_state</td>     <td>string</td>     <td></td>          <td>Permanent state of the customer. Free flowing for now</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>permanent_pincode</td>     <td>integer</td>     <td></td>          <td>Permanent pincode of the customer. Free flowing for now</td>       <td>600089</td>  </tr>        <tr>     <td>residence_type_permanent_address</td>     <td>string</td>     <td></td>          <td>rented / owned / leased</td>       <td>owned</td>  </tr>        <tr>     <td>years_of_stay_in_permanent_address</td>     <td>integer</td>     <td></td>          <td>How many years stayed in the permanent address</td>       <td>5</td>  </tr>        <tr>     <td>marital_status</td>     <td>string</td>     <td></td>          <td>married / unmarried</td>       <td>unmarried</td>  </tr>        <tr>     <td>religion</td>     <td>string</td>     <td></td>          <td>Religion of customer. Free flow text</td>       <td>Hindu</td>  </tr>        <tr>     <td>nationality</td>     <td>string</td>     <td></td>          <td>Nationality of customer. Free flow text</td>       <td>indian</td>  </tr>        <tr>     <td>father_name</td>     <td>string</td>     <td></td>          <td>Father name of customer. Free flow text</td>       <td>Dan Kato</td>  </tr>        <tr>     <td>mother_name</td>     <td>string</td>     <td></td>          <td>Mother name of customer; Free flow text</td>       <td>Tsunade Senju</td>  </tr>        <tr>     <td>spouse_name</td>     <td>string</td>     <td></td>          <td>Spouse name of customer; Free flow text</td>       <td>Kushina Uzumaki</td>  </tr>        <tr>     <td>education_qualification</td>     <td>string</td>     <td></td>          <td>Educational Qualifications</td>       <td>MBA</td>  </tr>        <tr>     <td>net_monthly_income</td>     <td>number</td>     <td>float</td>          <td>Monthly Income of the Customer (in Rupees)</td>       <td>10000.0</td>  </tr>        <tr>     <td>annual_income</td>     <td>number</td>     <td>float</td>          <td>Annual income of the customer in number (don’t convert into thousand/lacs etc)</td>       <td>120000.0</td>  </tr>        <tr>     <td>no_of_dependants</td>     <td>integer</td>     <td></td>          <td>Number of dependants</td>       <td>3</td>  </tr>        <tr>     <td>occupation</td>     <td>string</td>     <td></td>          <td>salaried / business / retired / self_employed and others</td>       <td>salaried</td>  </tr>        <tr>     <td>pan_number</td>     <td>string</td>     <td></td>          <td>PAN number of customer</td>       <td>BMMPH9018G</td>  </tr>        <tr>     <td>pan_number_link</td>     <td>array</td>     <td></td>          <td>PAN image of the document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>form_60_link</td>     <td>array</td>     <td></td>          <td>Form 60 If applicable</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>aadhar_number</td>     <td>string</td>     <td></td>          <td>Aadhar number of customer</td>       <td>794065231234</td>  </tr>        <tr>     <td>aadhar_link</td>     <td>array</td>     <td></td>          <td>Aadhar image of the document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>voter_id_number</td>     <td>string</td>     <td></td>          <td>Voter ID Number of customer</td>       <td>RTG2291234</td>  </tr>        <tr>     <td>voting_id_link</td>     <td>array</td>     <td></td>          <td>Voter ID image of the document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>driving_license_number</td>     <td>string</td>     <td></td>          <td>Driving license number of customer</td>       <td>TN0112345</td>  </tr>        <tr>     <td>driving_license_link</td>     <td>array</td>     <td></td>          <td>Driving License image of the document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>passport_number</td>     <td>string</td>     <td></td>          <td>Passport number of customer</td>       <td>L4018345</td>  </tr>        <tr>     <td>passport_link</td>     <td>array</td>     <td></td>          <td>Passport image of the document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>video_image_link</td>     <td>array</td>     <td></td>          <td>Video KYC of the Applicant</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>video_kyc_detail</td>     <td>object</td>        <td></td>     <td>Refer table VideoKycDetail for attributes</td>       <td>{&quot;profile_id&quot;:&quot;AB12345&quot;,&quot;account_id&quot;:&quot;AB12345&quot;,&quot;key&quot;:&quot;abc@123&quot;}</td>  </tr>        <tr>     <td>other_kyc_number</td>     <td>string</td>     <td></td>          <td>KYC Number of the Customer</td>       <td>ABC1234</td>  </tr>        <tr>     <td>other_kyc_link</td>     <td>array</td>     <td></td>          <td>KYC Image of the Customer</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>rent_agreement_link</td>     <td>array</td>     <td></td>          <td>KYC number of customer</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>utility_bills_link</td>     <td>array</td>     <td></td>          <td>Utility bills link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>photo_link</td>     <td>array</td>     <td></td>          <td>Photo Image of the Customer</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>employment_type</td>     <td>string</td>     <td></td>          <td>salaried / self_employed</td>       <td>self_employed</td>  </tr>        <tr>     <td>employment_details_name</td>     <td>string</td>     <td></td>          <td>Employer name. Free flowing text</td>       <td>Credavenue</td>  </tr>        <tr>     <td>employment_details_address</td>     <td>string</td>     <td></td>          <td>Office address. Free flowing text</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>employment_details_years_of_experience</td>     <td>number</td>     <td>float</td>          <td>Applicant Number of years in the current organization</td>       <td>5.0</td>  </tr>        <tr>     <td>employment_details_designation</td>     <td>string</td>     <td></td>          <td>Designation in current role, free flowing text</td>       <td>Manager</td>  </tr>        <tr>     <td>employement_vintage_current_organisation</td>     <td>integer</td>     <td></td>          <td>No of Years in the same Organisation</td>       <td>3</td>  </tr>        <tr>     <td>payslip_link</td>     <td>array</td>     <td></td>          <td>Last three month pay slip</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>tds_certificate_link</td>     <td>array</td>     <td></td>          <td>Last Three Year TDS Certificate Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>name_of_bureau</td>     <td>string</td>     <td></td>          <td>Cibil / Experian / Himark</td>       <td>cibil</td>  </tr>        <tr>     <td>bureau_vintage</td>     <td>integer</td>     <td></td>          <td>Vintage in the bureau. Number of years from the first trade line</td>       <td>3</td>  </tr>        <tr>     <td>bureau_score</td>     <td>integer</td>     <td></td>          <td>Bureau Score</td>       <td>650</td>  </tr>        <tr>     <td>bureau_report_link</td>     <td>array</td>     <td></td>          <td>Document of the bureau</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>commercial_bureau_score</td>     <td>integer</td>     <td></td>          <td>CRIF score</td>       <td>330</td>  </tr>        <tr>     <td>commercial_bureau_score_link</td>     <td>array</td>     <td></td>          <td>Commercial Bureau Document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>partner_score_on_the_customer</td>     <td>number</td>     <td>float</td>          <td>Score Captured by the Partner</td>       <td>800.0</td>  </tr>        <tr>     <td>total_existing_obligations</td>     <td>integer</td>     <td></td>          <td>Total Existing Obligations basis the Bureau Report</td>       <td>25000</td>  </tr>        <tr>     <td>credit_card_limit</td>     <td>integer</td>     <td></td>          <td>Total Credit Card Limit basis the Bureau Report</td>       <td>30000</td>  </tr>        <tr>     <td>number_of_credit_cards</td>     <td>integer</td>     <td></td>          <td>Total Number of Credit Cards per Bureau Report</td>       <td>3</td>  </tr>        <tr>     <td>number_of_unsecured_loans</td>     <td>integer</td>     <td></td>          <td>Total Number of Unsecured Loans per Bureau Report</td>       <td>2</td>  </tr>        <tr>     <td>value_of_total_unsecured_loans</td>     <td>number</td>     <td>float</td>          <td>Total value of unsecured loans</td>       <td>20000.0</td>  </tr>        <tr>     <td>number_of_loans</td>     <td>integer</td>     <td></td>          <td>Total Number of Loans per Bureau Report</td>       <td>2</td>  </tr>        <tr>     <td>value_of_total_loans</td>     <td>number</td>     <td>float</td>          <td>Total value of loans</td>       <td>20000.0</td>  </tr>        <tr>     <td>number_of_enquiries_3months</td>     <td>integer</td>     <td></td>          <td>Number of Enquiries in the Last 3 Months per Bureau Report</td>       <td>3</td>  </tr>        <tr>     <td>number_of_enquiries_6months</td>     <td>integer</td>     <td></td>          <td>Number of Enquiries in the Last 6 Months per Bureau Report</td>       <td>3</td>  </tr>        <tr>     <td>number_of_enquiries_12months</td>     <td>integer</td>     <td></td>          <td>Number of Enquiries in the Last 12 Months per Bureau Report</td>       <td>4</td>  </tr>        <tr>     <td>number_of_writeoff_suitfiled_settled_12months</td>     <td>integer</td>     <td></td>          <td>Number of Writeoff Suitfiled Settled in the Last 12 Months</td>       <td>4</td>  </tr>        <tr>     <td>max_dpd_tradeline_12months</td>     <td>integer</td>     <td></td>          <td>Maximum DPD Tradeline in the Last 12 Months</td>       <td>6</td>  </tr>        <tr>     <td>max_overdue_tradeline</td>     <td>integer</td>     <td></td>          <td>Maximum Overdue Tradeline</td>       <td>6</td>  </tr>        <tr>     <td>total_overdue_amount_12months</td>     <td>number</td>     <td>float</td>          <td>Total Overdue Amount in the Last 12 Months</td>       <td>10000.0</td>  </tr>        <tr>     <td>loan_amount_settled_12months</td>     <td>number</td>     <td>float</td>          <td>Loan Amount Settled in the Last 12 Months</td>       <td>25000.0</td>  </tr>        <tr>     <td>nature_of_loan_settled1</td>     <td>string</td>     <td></td>          <td>The nature of past loan settlement if any (Loan 1) - Settled/ Closed/ Written-off</td>       <td>settled</td>  </tr>        <tr>     <td>nature_of_loan_settled2</td>     <td>string</td>     <td></td>          <td>The nature of past loan settlement if any (Loan 2) - Settled/ Closed/ Written-off</td>       <td>closed</td>  </tr>        <tr>     <td>total_emi_bounces</td>     <td>integer</td>     <td></td>          <td>Total EMI Bounces</td>       <td>3</td>  </tr>        <tr>     <td>emi_bounces_6months</td>     <td>integer</td>     <td></td>          <td>EMI Bounces in the Last 6 Months</td>       <td>3</td>  </tr>        <tr>     <td>emi_bounces_12months</td>     <td>integer</td>     <td></td>          <td>EMI Bounces in the Last 12 Months</td>       <td>3</td>  </tr>        <tr>     <td>bank_statement</td>     <td>object</td>      <td></td>       <td>Refer table BankStatement for attributes</td>       <td>{&quot;bank_statement_savings_account_12_months_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bank_statement_current_account_12_months_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;no_of_inward_chq_returns_savings_account&quot;:3,&quot;no_of_outward_chq_returns_savings_account&quot;:4,&quot;no_of_inward_chq_returns_current_account&quot;:5,&quot;no_of_outward_chq_returns_current_account&quot;:6,&quot;bank_account_type_for_assessment&quot;:&quot;savings&quot;,&quot;perfios_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;finbit_link&quot;:&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;abb&quot;:25000.0,&quot;abd&quot;:10000.0}</td>  </tr>        <tr>     <td>financial_data</td>     <td>object</td>        <td></td>     <td>Refer table FinancialData for attributes</td>       <td>{&quot;annual_business_turnover&quot;:1000000.0,&quot;annual_gross_profit&quot;:8000000.0,&quot;annual_business_ebitda&quot;:5000000.0,&quot;monthly_net_profit&quot;:14000.0,&quot;annual_net_profit&quot;:30000000.0,&quot;gst_return_year_1_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;gst_return_year_2_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;gst_return_year_3_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;it_return_year_1_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;it_return_year_2_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;it_return_year_3_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;other_income_assessment_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;cam_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;cfa_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]}</td>  </tr>        <tr>     <td>co_applicants</td>     <td>array</td>     <td></td>          <td>Refer table CoApplicants for attributes</td>       <td>[{&quot;relationship_with_applicant&quot;:&quot;father&quot;,&quot;first_name&quot;:&quot;Minato&quot;,&quot;middle_name&quot;:&quot;Kumar&quot;,&quot;last_name&quot;:&quot;Namikaze&quot;,&quot;gender&quot;:&quot;M&quot;,&quot;date_of_birth&quot;:&quot;1995-12-05&quot;,&quot;age&quot;:26,&quot;mobile_number&quot;:9876543210,&quot;email&quot;:&quot;minato@gmail.com&quot;,&quot;current_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;current_city&quot;:&quot;Chennai&quot;,&quot;current_district&quot;:&quot;Chennai&quot;,&quot;current_state&quot;:&quot;tamil_nadu&quot;,&quot;current_pincode&quot;:600089,&quot;residence_type_current_address&quot;:&quot;rented&quot;,&quot;years_of_stay_in_current_address&quot;:5,&quot;permanent_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;permanent_city&quot;:&quot;Chennai&quot;,&quot;permanent_district&quot;:&quot;Chennai&quot;,&quot;permanent_state&quot;:&quot;tamil_nadu&quot;,&quot;permanent_pincode&quot;:600089,&quot;residence_type_permanent_address&quot;:&quot;owned&quot;,&quot;years_of_stay_in_permanent_address&quot;:5,&quot;marital_status&quot;:&quot;unmarried&quot;,&quot;religion&quot;:&quot;buddhist&quot;,&quot;nationality&quot;:&quot;indian&quot;,&quot;father_name&quot;:&quot;Dan Kato&quot;,&quot;mother_name&quot;:&quot;Tsunade Senju&quot;,&quot;spouse_name&quot;:&quot;Kushina Uzumaki&quot;,&quot;education&quot;:&quot;Hokage&quot;,&quot;annual_income&quot;:120000.0,&quot;income_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bank_statement_12_months_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;pan_number&quot;:&quot;BMMPG9018Y&quot;,&quot;pan_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;aadhar_number&quot;:&quot;794065346725&quot;,&quot;aadhar_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;voter_id_number&quot;:&quot;RTG2291234&quot;,&quot;voting_id_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;driving_license_number&quot;:&quot;TN01123345&quot;,&quot;driving_license_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;passport_number&quot;:&quot;L4018345&quot;,&quot;passport_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;video_kyc_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;video_kyc_profile_id&quot;:&quot;ABC12345&quot;,&quot;video_kyc_account_id&quot;:&quot;ABC12345&quot;,&quot;video_kyc_key&quot;:&quot;abc_123&quot;,&quot;other_kyc_number&quot;:&quot;ABC12456&quot;,&quot;other_kyc_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;rent_agreement_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;utility_bills_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bureau_score&quot;:700,&quot;bureau_report_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;partner_score&quot;:3},{&quot;relationship_with_applicant&quot;:&quot;father&quot;,&quot;first_name&quot;:&quot;Minato&quot;,&quot;middle_name&quot;:&quot;Kumar&quot;,&quot;last_name&quot;:&quot;Namikaze&quot;,&quot;gender&quot;:&quot;M&quot;,&quot;date_of_birth&quot;:&quot;1995-12-05&quot;,&quot;age&quot;:26,&quot;mobile_number&quot;:9876543210,&quot;email&quot;:&quot;minato@gmail.com&quot;,&quot;current_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;current_city&quot;:&quot;Chennai&quot;,&quot;current_district&quot;:&quot;Chennai&quot;,&quot;current_state&quot;:&quot;tamil_nadu&quot;,&quot;current_pincode&quot;:600089,&quot;residence_type_current_address&quot;:&quot;rented&quot;,&quot;years_of_stay_in_current_address&quot;:5,&quot;permanent_address&quot;:&quot;2, Mount Road, Teynampet&quot;,&quot;permanent_city&quot;:&quot;Chennai&quot;,&quot;permanent_district&quot;:&quot;Chennai&quot;,&quot;permanent_state&quot;:&quot;tamil_nadu&quot;,&quot;permanent_pincode&quot;:600089,&quot;residence_type_permanent_address&quot;:&quot;owned&quot;,&quot;years_of_stay_in_permanent_address&quot;:5,&quot;marital_status&quot;:&quot;unmarried&quot;,&quot;religion&quot;:&quot;buddhist&quot;,&quot;nationality&quot;:&quot;indian&quot;,&quot;father_name&quot;:&quot;Dan Kato&quot;,&quot;mother_name&quot;:&quot;Tsunade Senju&quot;,&quot;spouse_name&quot;:&quot;Kushina Uzumaki&quot;,&quot;education&quot;:&quot;Hokage&quot;,&quot;annual_income&quot;:120000.0,&quot;income_proof_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bank_statement_12_months_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;pan_number&quot;:&quot;BMMPG9018Y&quot;,&quot;pan_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;aadhar_number&quot;:&quot;794065346725&quot;,&quot;aadhar_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;voter_id_number&quot;:&quot;RTG2291234&quot;,&quot;voting_id_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;driving_license_number&quot;:&quot;TN01123345&quot;,&quot;driving_license_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;passport_number&quot;:&quot;L4018345&quot;,&quot;passport_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;video_kyc_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;video_kyc_profile_id&quot;:&quot;ABC12345&quot;,&quot;video_kyc_account_id&quot;:&quot;ABC12345&quot;,&quot;video_kyc_key&quot;:&quot;abc_123&quot;,&quot;other_kyc_number&quot;:&quot;ABC12456&quot;,&quot;other_kyc_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;rent_agreement_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;utility_bills_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;photo_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;bureau_score&quot;:700,&quot;bureau_report_link&quot;:[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;,&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;],&quot;partner_score&quot;:3}]</td>  </tr>        <tr>     <td>abb_emi_ratio</td>     <td>number</td>     <td>float</td>          <td>Average Bank balance to EMI</td>       <td>2.0</td>  </tr>        <tr>     <td>dscr</td>     <td>number</td>     <td>float</td>          <td>Debt Service Coverage Ratio</td>       <td>3.0</td>  </tr>        <tr>     <td>foir</td>     <td>number</td>     <td>float</td>          <td>Fixed Obligations to Income Ratio</td>       <td>4.0</td>  </tr>        <tr>     <td>ltr</td>     <td>number</td>     <td>float</td>          <td>Loan Transfer Ratio</td>       <td>5.0</td>  </tr>        <tr>     <td>eligibility_loan_amount</td>     <td>number</td>     <td>float</td>          <td>Eligibility Loan amount</td>       <td>40000.0</td>  </tr>        <tr>     <td>insurance_details</td>     <td>array</td>     <td></td>          <td>Refer table InsuranceDetails for attributes</td>       <td>[{&quot;insurance_type&quot;:&quot;credit&quot;,&quot;insurer_name&quot;:&quot;Tata AIG&quot;,&quot;nominee_details&quot;:&quot;Neeraj&quot;,&quot;relationship&quot;:&quot;friend&quot;,&quot;premium&quot;:100000.0,&quot;insurance_amount&quot;:300000.0,&quot;policy_number&quot;:&quot;ABC12345&quot;},{&quot;insurance_type&quot;:&quot;credit&quot;,&quot;insurer_name&quot;:&quot;Tata AIG&quot;,&quot;nominee_details&quot;:&quot;Neeraj&quot;,&quot;relationship&quot;:&quot;friend&quot;,&quot;premium&quot;:100000.0,&quot;insurance_amount&quot;:300000.0,&quot;policy_number&quot;:&quot;ABC12345&quot;}]</td>  </tr>        <tr>     <td>references</td>     <td>array</td>     <td></td>          <td>Refer table References for attributes</td>       <td>[{&quot;name&quot;:&quot;Neeraj Chopra&quot;,&quot;address&quot;:&quot;221B, Baker Street, Chennai&quot;,&quot;pincode&quot;:&quot;600001&quot;,&quot;phone&quot;:&quot;9876543210&quot;},{&quot;name&quot;:&quot;Neeraj Chopra&quot;,&quot;address&quot;:&quot;221B, Baker Street, Chennai&quot;,&quot;pincode&quot;:&quot;600001&quot;,&quot;phone&quot;:&quot;9876543210&quot;}]</td>  </tr>        <tr>     <td>psl_flag</td>     <td>string</td>     <td></td>          <td>Does this loan belong to Priority Sector Lending?</td>       <td>t</td>  </tr>        <tr>     <td>psl_description</td>     <td>string</td>     <td></td>          <td>Description on Priority Sector Lending</td>       <td>psl_description_47</td>  </tr>        <tr>     <td>psl_code</td>     <td>string</td>     <td></td>          <td>Priority Sector Lending code</td>       <td>psl_code_65</td>  </tr>        <tr>     <td>psl_proof_link</td>     <td>array</td>     <td></td>          <td>Any documents as proof for PSL</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>loan_agreement_link</td>     <td>array</td>     <td></td>          <td>Loan Agreement Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>sanction_letter_link</td>     <td>array</td>     <td></td>          <td>Sanction letter Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>laf_link</td>     <td>array</td>     <td></td>          <td>LAF Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>self_declaration_letter_link</td>     <td>array</td>     <td></td>          <td>Self declaration form link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>authorisation_letter_link</td>     <td>array</td>     <td></td>          <td>Authorisation letter link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>enach_pdc_link</td>     <td>array</td>     <td></td>          <td>eNACH PDC Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>guarantor_agreements_link</td>     <td>array</td>     <td></td>          <td>Guarantor Agreements Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>    </tbody>       </table>   <h4>VideoKycDetail</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>profile_id</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Profile ID of the case as per the video KYC vendor</td>       <td>AB12345</td>  </tr>        <tr>     <td>account_id</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Account ID of the case as per the video KYC vendor</td>       <td>AB12345</td>  </tr>        <tr>     <td>key</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Key as per the video KYC vendor</td>       <td>abc@123</td>  </tr>    </tbody>       </table>   <h4>BankStatement</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>bank_statement_savings_account_12_months_link</td>     <td>array</td>     <td></td>          <td>Savings bank account statement for last 12 months</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bank_statement_current_account_12_months_link</td>     <td>array</td>     <td></td>          <td>Current account bank details for last 12 months</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>no_of_inward_chq_returns_savings_account</td>     <td>integer</td>     <td></td>          <td>Number of inward cheque returns in savings account</td>       <td>3</td>  </tr>        <tr>     <td>no_of_outward_chq_returns_savings_account</td>     <td>integer</td>     <td></td>          <td>Number of outward cheque returns in savings account</td>       <td>4</td>  </tr>        <tr>     <td>no_of_inward_chq_returns_current_account</td>     <td>integer</td>     <td></td>          <td>Number of inward cheque returns in current account</td>       <td>5</td>  </tr>        <tr>     <td>no_of_outward_chq_returns_current_account</td>     <td>integer</td>     <td></td>          <td>Number of outward cheque returns in current account</td>       <td>6</td>  </tr>        <tr>     <td>bank_account_type_for_assessment</td>     <td>string</td>     <td></td>          <td>Savings / Current / Overdraft / CC</td>       <td>savings</td>  </tr>        <tr>     <td>perfios_link</td>     <td>string</td>     <td></td>          <td>Perfios report in form of document</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>finbit_link</td>     <td>string</td>     <td></td>          <td>Finbit Link</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>abb</td>     <td>number</td>     <td>float</td>          <td>Average Bank Balance maintaiend on the EMI dates (Calculated by the Originator for the Last 12 Months)</td>       <td>25000.0</td>  </tr>        <tr>     <td>abd</td>     <td>number</td>     <td>float</td>          <td>Average Monthly Bank Deposits for the Last 12 Months</td>       <td>10000.0</td>  </tr>    </tbody>       </table>   <h4>FinancialData</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>annual_business_turnover</td>     <td>number</td>     <td>float</td>          <td>Annual Business Turnover (in Rupees)</td>       <td>1000000.0</td>  </tr>        <tr>     <td>annual_gross_profit</td>     <td>number</td>     <td>float</td>          <td>Annual Gross Profit (in Rupees)</td>       <td>8000000.0</td>  </tr>        <tr>     <td>annual_business_ebitda</td>     <td>number</td>     <td>float</td>          <td>Annual Business EBITDA (in Rupees)</td>       <td>5000000.0</td>  </tr>        <tr>     <td>monthly_net_profit</td>     <td>number</td>     <td>float</td>          <td>Monthly Net Profit (in Rupees)</td>       <td>14000.0</td>  </tr>        <tr>     <td>annual_net_profit</td>     <td>number</td>     <td>float</td>          <td>Net Profit After Tax (in Rupees)</td>       <td>30000000.0</td>  </tr>        <tr>     <td>gst_return_year_1_link</td>     <td>array</td>     <td></td>          <td>GST return image for last year</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>gst_return_year_2_link</td>     <td>array</td>     <td></td>          <td>GST return image for last year -1</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>gst_return_year_3_link</td>     <td>array</td>     <td></td>          <td>GST return image for last year -2</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>it_return_year_1_link</td>     <td>array</td>     <td></td>          <td>IT return image for last year</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>it_return_year_2_link</td>     <td>array</td>     <td></td>          <td>IT return image for last year -1</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>it_return_year_3_link</td>     <td>array</td>     <td></td>          <td>IT return image for last year - 2</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>other_income_assessment_proof_link</td>     <td>array</td>     <td></td>          <td>Image of other bills</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>cam_link</td>     <td>array</td>     <td></td>          <td>CAM Document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>cfa_link</td>     <td>array</td>     <td></td>          <td>CFA Document</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>    </tbody>       </table>   <h4>CoApplicants</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>relationship_with_applicant</td>     <td>string</td>     <td></td>          <td>Father/Mother/Brother/Son/Daughter/Friend/Other relative</td>       <td>father</td>  </tr>        <tr>     <td>first_name</td>     <td>string</td>     <td></td>          <td>First Name of the CoApplicant</td>       <td>Minato</td>  </tr>        <tr>     <td>middle_name</td>     <td>string</td>     <td></td>          <td>Middle Name of the CoApplicant</td>       <td>Kumar</td>  </tr>        <tr>     <td>last_name</td>     <td>string</td>     <td></td>          <td>Last Name of the CoApplicant</td>       <td>Namikaze</td>  </tr>        <tr>     <td>gender</td>     <td>string</td>     <td></td>          <td>M / F / O</td>       <td>M</td>  </tr>        <tr>     <td>date_of_birth</td>     <td>string</td>     <td>date</td>          <td>Date of Birth (YYYY-MM-DD)</td>       <td>1995-12-05</td>  </tr>        <tr>     <td>age</td>     <td>integer</td>     <td></td>          <td>Age in years</td>       <td>26</td>  </tr>        <tr>     <td>mobile_number</td>     <td>integer</td>     <td></td>          <td>Mobile Number of the CoApplicant (10 digits)</td>       <td>9876543210</td>  </tr>        <tr>     <td>email</td>     <td>string</td>     <td></td>          <td>Personal Email ID of the CoApplicant</td>       <td>minato@gmail.com</td>  </tr>        <tr>     <td>current_address</td>     <td>string</td>     <td></td>          <td>Free flowing text</td>       <td>2, Mount Road, Teynampet</td>  </tr>        <tr>     <td>current_city</td>     <td>string</td>     <td></td>          <td>City in which CoApplicant is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>current_district</td>     <td>string</td>     <td></td>          <td>District in which CoApplicant is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>current_state</td>     <td>string</td>     <td></td>          <td>State in which CoApplicant is currently residing</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>current_pincode</td>     <td>integer</td>     <td></td>          <td>Pincode of the current address</td>       <td>600089</td>  </tr>        <tr>     <td>residence_type_current_address</td>     <td>string</td>     <td></td>          <td>rented / owned / leased</td>       <td>rented</td>  </tr>        <tr>     <td>years_of_stay_in_current_address</td>     <td>integer</td>     <td></td>          <td>How many years stayed in the current address</td>       <td>5</td>  </tr>        <tr>     <td>permanent_address</td>     <td>string</td>     <td></td>          <td>Free flowing text</td>       <td>2, Mount Road, Teynampet</td>  </tr>        <tr>     <td>permanent_city</td>     <td>string</td>     <td></td>          <td>City in which CoApplicant is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>permanent_district</td>     <td>string</td>     <td></td>          <td>District in which CoApplicant is currently residing</td>       <td>Chennai</td>  </tr>        <tr>     <td>permanent_state</td>     <td>string</td>     <td></td>          <td>State in which CoApplicant is currently residing</td>       <td>tamil_nadu</td>  </tr>        <tr>     <td>permanent_pincode</td>     <td>integer</td>     <td></td>          <td>Pincode of the current address</td>       <td>600089</td>  </tr>        <tr>     <td>residence_type_permanent_address</td>     <td>string</td>     <td></td>          <td>rented / owned / leased</td>       <td>owned</td>  </tr>        <tr>     <td>years_of_stay_in_permanent_address</td>     <td>integer</td>     <td></td>          <td>How many years stayed in the permanent address</td>       <td>5</td>  </tr>        <tr>     <td>marital_status</td>     <td>string</td>     <td></td>          <td>Married / Unmarried</td>       <td>unmarried</td>  </tr>        <tr>     <td>religion</td>     <td>string</td>     <td></td>          <td>Religion of the CoApplicant</td>       <td>buddhist</td>  </tr>        <tr>     <td>nationality</td>     <td>string</td>     <td></td>          <td>Nationality of the CoApplicant</td>       <td>indian</td>  </tr>        <tr>     <td>father_name</td>     <td>string</td>     <td></td>          <td>Father Name of the CoApplicant</td>       <td>Dan Kato</td>  </tr>        <tr>     <td>mother_name</td>     <td>string</td>     <td></td>          <td>Mother Name of the CoApplicant</td>       <td>Tsunade Senju</td>  </tr>        <tr>     <td>spouse_name</td>     <td>string</td>     <td></td>          <td>Spouse Name of the CoApplicant</td>       <td>Kushina Uzumaki</td>  </tr>        <tr>     <td>education</td>     <td>string</td>     <td></td>          <td>Free flowing text</td>       <td>Hokage</td>  </tr>        <tr>     <td>annual_income</td>     <td>number</td>     <td>float</td>          <td>Annual Income of the CoApplicant (in Rupees)</td>       <td>120000.0</td>  </tr>        <tr>     <td>income_proof_link</td>     <td>array</td>     <td></td>          <td>CoApplicant Income Proof Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bank_statement_12_months_link</td>     <td>array</td>     <td></td>          <td>CoApplicant Bank Statement Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>pan_number</td>     <td>string</td>     <td></td>          <td>PAN Number of the CoApplicant (10 digit Alphanumeric)</td>       <td>BMMPG9018Y</td>  </tr>        <tr>     <td>pan_link</td>     <td>array</td>     <td></td>          <td>PAN Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>aadhar_number</td>     <td>string</td>     <td></td>          <td>Aadhar Number of the CoApplicant (12 digits)</td>       <td>794065346725</td>  </tr>        <tr>     <td>aadhar_link</td>     <td>array</td>     <td></td>          <td>Aadhar Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>voter_id_number</td>     <td>string</td>     <td></td>          <td>Voter ID Number of the CoApplicant</td>       <td>RTG2291234</td>  </tr>        <tr>     <td>voting_id_link</td>     <td>array</td>     <td></td>          <td>Voter Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>driving_license_number</td>     <td>string</td>     <td></td>          <td>Driving License Number of the CoApplicant</td>       <td>TN01123345</td>  </tr>        <tr>     <td>driving_license_link</td>     <td>array</td>     <td></td>          <td>Driving License Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>passport_number</td>     <td>string</td>     <td></td>          <td>Passport Number of the CoApplicant</td>       <td>L4018345</td>  </tr>        <tr>     <td>passport_link</td>     <td>array</td>     <td></td>          <td>Passport Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>video_kyc_link</td>     <td>array</td>     <td></td>          <td>Video KYC of the CoApplicant</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>video_kyc_profile_id</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Profile ID of the case as per the video KYC vendor</td>       <td>ABC12345</td>  </tr>        <tr>     <td>video_kyc_account_id</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Account ID of the case as per the video KYC vendor</td>       <td>ABC12345</td>  </tr>        <tr>     <td>video_kyc_key</td>     <td>string</td>     <td></td>          <td>Required if video KYC is done. Key as per the video KYC vendor</td>       <td>abc_123</td>  </tr>        <tr>     <td>other_kyc_number</td>     <td>string</td>     <td></td>          <td>KYC Number of the CoApplicant</td>       <td>ABC12456</td>  </tr>        <tr>     <td>other_kyc_link</td>     <td>array</td>     <td></td>          <td>KYC Image of the CoApplicant</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>rent_agreement_link</td>     <td>array</td>     <td></td>          <td>CoApplicant Rent Agreement Document Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>utility_bills_link</td>     <td>array</td>     <td></td>          <td>Utility Bills Copies (If any)</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>photo_link</td>     <td>array</td>     <td></td>          <td>Photo Image of the CoApplicant</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>bureau_score</td>     <td>integer</td>     <td></td>          <td>Bureau Score of the CoApplicant</td>       <td>700</td>  </tr>        <tr>     <td>bureau_report_link</td>     <td>array</td>     <td></td>          <td>CoApplicant&#39;s Bureau Report Link</td>       <td>[&quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;, &quot;https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg&quot;]</td>  </tr>        <tr>     <td>partner_score</td>     <td>integer</td>     <td></td>          <td>Score Captured by the Partner</td>       <td>3</td>  </tr>    </tbody>       </table>   <h4>InsuranceDetails</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>insurance_type</td>     <td>string</td>     <td></td>          <td>Enter &#39;credit&#39;</td>       <td>credit</td>  </tr>        <tr>     <td>insurer_name</td>     <td>string</td>     <td></td>          <td>Loan Insurer Name</td>       <td>Tata AIG</td>  </tr>        <tr>     <td>nominee_details</td>     <td>string</td>     <td></td>          <td>Applicable if Credit Shield insurance is taken. Name of the nominee to be provided</td>       <td>Neeraj</td>  </tr>        <tr>     <td>relationship</td>     <td>string</td>     <td></td>          <td>Applicable if Credit Shield insurance is taken. Relationship of nominee to be provided</td>       <td>friend</td>  </tr>        <tr>     <td>premium</td>     <td>number</td>     <td>float</td>          <td>Applicable if Credit Shield insurance is taken. Premium amount</td>       <td>100000.0</td>  </tr>        <tr>     <td>insurance_amount</td>     <td>number</td>     <td>float</td>          <td>Applicable if Credit Shield insurance is taken. Total insurance amount</td>       <td>300000.0</td>  </tr>        <tr>     <td>policy_number</td>     <td>string</td>     <td></td>          <td>Applicable if Credit Shield insurance is taken. Policy number</td>       <td>ABC12345</td>  </tr>    </tbody>       </table>   <h4>References</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>name</td>     <td>string</td>     <td></td>          <td>Name of reference</td>       <td>Neeraj Chopra</td>  </tr>        <tr>     <td>address</td>     <td>string</td>     <td></td>          <td>Address details of reference</td>       <td>221B, Baker Street, Chennai</td>  </tr>        <tr>     <td>pincode</td>     <td>string</td>     <td></td>          <td>Pincode of reference address</td>       <td>600001</td>  </tr>        <tr>     <td>phone</td>     <td>string</td>     <td></td>          <td>Phone number of reference</td>       <td>9876543210</td>  </tr>    </tbody>       </table>    #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>     ## INDIAN STATES  - jammu_kashmir - himachal_pradesh - punjab - chandigarh - uttaranchal - haryana - delhi - rajasthan - uttar_pradesh - bihar - sikkim - arunachal_pradesh - nagaland - manipur - mizoram - tripura - meghalaya - assam - west_bengal - jharkhand - orissa - chhattisgarh - madhya_pradesh - gujarat - daman_diu - dadra_nagar_haveli - maharashtra - andhra_pradesh - karnataka - goa - lakshadweep - kerala - tamil_nadu - pondicherry - andaman_nicobar_islands - telangana  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.update_post_disbursement(product_id, client_name, loan_id, body_update_post_disbursement, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            body_update_post_disbursement (BodyUpdatePostDisbursement):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            RequestSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['body_update_post_disbursement'] = \
            body_update_post_disbursement
        return self.update_post_disbursement_endpoint.call_with_http_info(**kwargs)

    def update_repayment_schedule(
        self,
        product_id,
        client_name,
        loan_id,
        body_update_repayment_schedule,
        **kwargs
    ):
        """#Update Repayment Schedule  # noqa: E501

        Update Repayment Schedule API  This endpoint can be used to update the repayment schedules.    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>repayment_schedules</td>     <td>array</td>     <td></td>          <td>Refer table RepaymentSchedules for attributes</td>       <td>[{&quot;installment_no&quot;:1,&quot;due_date&quot;:&quot;2021-01-01&quot;,&quot;principal&quot;:10000.0,&quot;interest&quot;:100.0,&quot;amount&quot;:10200.0,&quot;pos&quot;:100000.0,&quot;other_charges&quot;:100.0},{&quot;installment_no&quot;:1,&quot;due_date&quot;:&quot;2021-01-01&quot;,&quot;principal&quot;:10000.0,&quot;interest&quot;:100.0,&quot;amount&quot;:10200.0,&quot;pos&quot;:100000.0,&quot;other_charges&quot;:100.0}]</td>  </tr>    </tbody>       </table>   <h4>RepaymentSchedules</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>installment_no</td>     <td>integer</td>     <td></td>          <td>Installment Number</td>       <td>1</td>  </tr>        <tr>     <td>due_date</td>     <td>string</td>     <td>date</td>          <td>Installment Due Date (YYYY-MM-DD)</td>       <td>2021-01-01</td>  </tr>        <tr>     <td>principal</td>     <td>number</td>     <td>float</td>          <td>Principal to be paid in the installment</td>       <td>10000.0</td>  </tr>        <tr>     <td>interest</td>     <td>number</td>     <td>float</td>          <td>Interest to be paid in the installment</td>       <td>100.0</td>  </tr>        <tr>     <td>amount</td>     <td>number</td>     <td>float</td>          <td>Total EMI amount</td>       <td>10200.0</td>  </tr>        <tr>     <td>pos</td>     <td>number</td>     <td>float</td>          <td>Closing principal outstanding</td>       <td>100000.0</td>  </tr>        <tr>     <td>other_charges</td>     <td>number</td>     <td>float</td>          <td>Other Charges</td>       <td>100.0</td>  </tr>    </tbody>       </table>     #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.update_repayment_schedule(product_id, client_name, loan_id, body_update_repayment_schedule, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            body_update_repayment_schedule (BodyUpdateRepaymentSchedule):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            GetRSSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['body_update_repayment_schedule'] = \
            body_update_repayment_schedule
        return self.update_repayment_schedule_endpoint.call_with_http_info(**kwargs)

    def upload_interest_accruals(
        self,
        product_id,
        client_name,
        loan_id,
        body_upload_interest_accruals,
        **kwargs
    ):
        """#Upload Interest Accruals  # noqa: E501

        Upload Interest Accruals API    <h4>Request Parameters</h4>  <table>   <thead>     <tr>       <th>Field</th>       <th>Type</th>       <th>Format</th>              <th>Description</th>       <th>Example</th>     </tr>   </thead>   <tbody>      <tr>     <td>file_link</td>     <td>string</td>     <td></td>          <td>Interest Accrual File URL</td>       <td>https://cdn.pixabay.com/photo/2017/06/22/20/22/green-2432374_1280.jpg</td>  </tr>        <tr>     <td>file_link_password</td>     <td>string</td>     <td></td>          <td>Interest Accrual File URL</td>       <td>12345678</td>  </tr>    </tbody>       </table>     #### Response Codes  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">   <thead>     <tr>       <th scope=\"col\" class=\"org-right\">Code</th>       <th scope=\"col\" class=\"org-left\">Message</th>       <th scope=\"col\" class=\"org-left\">Reason</th>     </tr>   </thead>   <tbody>     <tr>       <td class=\"org-right\">204</td>       <td class=\"org-left\">No content</td>       <td class=\"org-left\">Success</td>     </tr>     <tr>       <td class=\"org-right\">401</td>       <td class=\"org-left\">Unauthorized</td>       <td class=\"org-left\">Invalid API Key</td>     </tr>     <tr>       <td class=\"org-right\">400</td>       <td class=\"org-left\">Bad Request</td>       <td class=\"org-left\"><ul><li>Failed due to invalid request format</li>           <li>Missing required parameters</li>           <li>Loan is in invalid state</li>       </td>     </tr>     <tr>       <td class=\"org-right\">404</td>       <td class=\"org-left\">Not found</td>       <td class=\"org-left\">Loan not found</td>     </tr>     <tr>       <td class=\"org-right\">500</td>       <td class=\"org-left\">Internal Server Error</td>       <td class=\"org-left\">Error occurred in the backend</td>     </tr>   </tbody> </table>    # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.upload_interest_accruals(product_id, client_name, loan_id, body_upload_interest_accruals, async_req=True)
        >>> result = thread.get()

        Args:
            product_id (str): Product Code given by CoLending
            client_name (str): Name of the client
            loan_id (str): Client Loan ID as provided during loan creation
            body_upload_interest_accruals (BodyUploadInterestAccruals):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            RequestSuccess
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['product_id'] = \
            product_id
        kwargs['client_name'] = \
            client_name
        kwargs['loan_id'] = \
            loan_id
        kwargs['body_upload_interest_accruals'] = \
            body_upload_interest_accruals
        return self.upload_interest_accruals_endpoint.call_with_http_info(**kwargs)

