"""
    Allcloud (Allcloud)

    # Integration Document  The following are the endpoints to be called during and pre/post disbursement state of a loan.  ## Authentication  Authentication details and host will be shared privately.  ## Workflow  **Create Loan** is the initial endpoint to be called to create a loan. Loan will be processed in the background and the status of loan will be provided through the configured Webhook. However, the client can also poll the server via the **Get Loan Details** endpoint to know the loan's status(**Get Loan Details** is rate throttled and polling this API will be restricted). Loan's shall be considered rejected if proper response is not available within 10minutes.  All other endpoints are self-explanatory and can be retried upto 3 times before marking as failure.  ## Allowed Links  All Link attributes should contain 1. Accessible File Link URL which can be Public/Expiry URL/Whitelisted File Server Link(Write to tech.colending@credavenue.com for obtaining our IP address to whitelist) 2. File Link URL with Header Authentication (Header values should be shared with tech.colending@credavenue.com)  ## Allowed Fields Length <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">  <colgroup>  <col  class=\"org-left\" />  <col  class=\"org-left\" />  </colgroup> <thead> <tr> <th scope=\"col\" class=\"org-left\">Data Type</th> <th scope=\"col\" class=\"org-left\">Max Length</th> </tr> </thead>  <tbody> <tr> <td class=\"org-left\">String</td> <td class=\"org-left\">65,535 bytes</td> </tr>  <tr> <td class=\"org-left\">Float</td> <td class=\"org-left\">8 bytes</td> </tr>  <tr> <td class=\"org-left\">Integer</td> <td class=\"org-left\">4 bytes</td> </tr>  <tr> <td class=\"org-left\">Date</td> <td class=\"org-left\">10 characters</td> </tr>  </tbody> </table>  # Webhooks  Webhooks can be configured for the below events  1. Loan status change      Response Payload :      {         \"product_id\": \"\",         \"client_loan_id\": \"\",         \"principal_amount\": \"\",         \"interest_rate\": \"\",         \"tenure\": \"\",         \"tenure_frequency\": \"MONTHLY\",         \"cibil_score\": \"\",         \"purpose\": \"\",         \"repayment_frequency\":\"\",         \"number_of_repayments\": \"\",         \"status\": \"\",         \"principal_outstanding\": \"\",         \"reject_reason\": \"\"     }          Statuses : ['new', 'approved', 'rejected', 'agreement_signed', 'dropped', 'disbursement_ready', 'disbursed', 'matured', 'partner_settled']     2. Loan disbursement details (Disbursed through razorpay)      Callback Payload:      {         \"client_loan_id\":\"\",         \"status\":\"borrower_disbursed\",         \"disbursed_date\":\"\",         \"utr_number\":\"\",         \"disbursement_type\":\"\",         \"payment_reversed\": \"TRUE/FALSE\",         \"disbursement_amount\":\"\",         \"investor_disbursed_amount\": \"\",         \"partner_disbursed_amount\": \"\",         \"differential_interest\":\"\",         \"investor_differential_interest\":\"\",         \"partner_differential_interest\":\"\",         \"differential_days\":\"\",         \"interest_start_date\":\"\",         \"investor_processing_fee\":\"\",         \"partner_processing_fee\":\"\",         \"investor_stamp_duty\":\"\",         \"partner_stamp_duty\":\"\",         \"investor_documentation_charges\":\"\",         \"partner_documentation_charges\":\"\"     }  Provide the following details to configure the webhooks 1. callback URL 2. authentication for the callback URL (header authentication)    # Validations  **PAN**  - **Example**: ABGPA1232P - **Sequence**: First five digits will be alpha, next four will be Numerical and again last single digit will be alpha  **GSTIN**  - **Example**: 33AAACT2727Q1ZV - **Sequence**: First two digits is Numerical, Next is PAN sequence as specified above, again thirteenth digit will be numerical, fourteenth digit is alpha, last digit will be alpha or numerical  **CIN**  - **Example**: U65929TN2017PTC117196 - **Sequence**: First digit is Alpha, next 5 numeric digits, next two alpha, next set of 4 numeric digits, Next 3 alpha, last 6 numeric digits  **PASSPORT**  - **Example**: A2096457 - **Sequence**: Total 8 digits, first digit is Alpha, remaining digits are numerical  **AADHAR NO**  - The standard 12 digits numerical.  **MOBILE NO**  - **Sequence**: 10 numerical digits  **IFSC CODE**  - **Example**: PUNB0596600 - **Sequence**: First four alpha, next fifth digit is 0 (zero) always and last six digit is alpha/numeric. Totally 11 digits.  **PIN CODE**  - 6 numerical digits  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Contact: support@colending.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from credavenue_colending.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
)
from ..model_utils import OpenApiModel
from credavenue_colending.exceptions import ApiAttributeError


def lazy_import():
    from credavenue_colending.model.body_create_loan_assets import BodyCreateLoanAssets
    from credavenue_colending.model.body_create_loan_bank_statement import BodyCreateLoanBankStatement
    from credavenue_colending.model.body_create_loan_business import BodyCreateLoanBusiness
    from credavenue_colending.model.body_create_loan_co_applicants import BodyCreateLoanCoApplicants
    from credavenue_colending.model.body_create_loan_deviation_details import BodyCreateLoanDeviationDetails
    from credavenue_colending.model.body_create_loan_disbursement_accounts import BodyCreateLoanDisbursementAccounts
    from credavenue_colending.model.body_create_loan_financial_data import BodyCreateLoanFinancialData
    from credavenue_colending.model.body_create_loan_guarantors import BodyCreateLoanGuarantors
    from credavenue_colending.model.body_create_loan_insurance_details import BodyCreateLoanInsuranceDetails
    from credavenue_colending.model.body_create_loan_linked_loan_infos import BodyCreateLoanLinkedLoanInfos
    from credavenue_colending.model.body_create_loan_references import BodyCreateLoanReferences
    from credavenue_colending.model.body_create_loan_sourcing_detail import BodyCreateLoanSourcingDetail
    from credavenue_colending.model.body_create_loan_tranches import BodyCreateLoanTranches
    from credavenue_colending.model.body_create_loan_video_kyc_detail import BodyCreateLoanVideoKycDetail
    globals()['BodyCreateLoanAssets'] = BodyCreateLoanAssets
    globals()['BodyCreateLoanBankStatement'] = BodyCreateLoanBankStatement
    globals()['BodyCreateLoanBusiness'] = BodyCreateLoanBusiness
    globals()['BodyCreateLoanCoApplicants'] = BodyCreateLoanCoApplicants
    globals()['BodyCreateLoanDeviationDetails'] = BodyCreateLoanDeviationDetails
    globals()['BodyCreateLoanDisbursementAccounts'] = BodyCreateLoanDisbursementAccounts
    globals()['BodyCreateLoanFinancialData'] = BodyCreateLoanFinancialData
    globals()['BodyCreateLoanGuarantors'] = BodyCreateLoanGuarantors
    globals()['BodyCreateLoanInsuranceDetails'] = BodyCreateLoanInsuranceDetails
    globals()['BodyCreateLoanLinkedLoanInfos'] = BodyCreateLoanLinkedLoanInfos
    globals()['BodyCreateLoanReferences'] = BodyCreateLoanReferences
    globals()['BodyCreateLoanSourcingDetail'] = BodyCreateLoanSourcingDetail
    globals()['BodyCreateLoanTranches'] = BodyCreateLoanTranches
    globals()['BodyCreateLoanVideoKycDetail'] = BodyCreateLoanVideoKycDetail


class BodyCreateLoan(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
    }

    @cached_property
    def additional_properties_type():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded
        """
        lazy_import()
        return (bool, date, datetime, dict, float, int, list, str, none_type,)  # noqa: E501

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        lazy_import()
        return {
            'customer_type': (str,),  # noqa: E501
            'customer_category': (str,),  # noqa: E501
            'client_customer_id': (str,),  # noqa: E501
            'title': (str,),  # noqa: E501
            'first_name': (str,),  # noqa: E501
            'middle_name': (str,),  # noqa: E501
            'last_name': (str,),  # noqa: E501
            'gender': (str,),  # noqa: E501
            'date_of_birth': (date,),  # noqa: E501
            'age': (int,),  # noqa: E501
            'mobile_number': (int,),  # noqa: E501
            'phone_number': (int,),  # noqa: E501
            'email': (str,),  # noqa: E501
            'official_email_id': (str,),  # noqa: E501
            'place_of_birth': (str,),  # noqa: E501
            'current_address': (str,),  # noqa: E501
            'current_village': (str,),  # noqa: E501
            'current_city_tier': (str,),  # noqa: E501
            'current_city': (str,),  # noqa: E501
            'current_district': (str,),  # noqa: E501
            'current_state': (str,),  # noqa: E501
            'current_country': (str,),  # noqa: E501
            'current_pincode': (int,),  # noqa: E501
            'residence_type_current_address': (str,),  # noqa: E501
            'years_of_stay_in_current_address': (int,),  # noqa: E501
            'permanent_address': (str,),  # noqa: E501
            'permanent_city': (str,),  # noqa: E501
            'permanent_city_tier': (str,),  # noqa: E501
            'permanent_district': (str,),  # noqa: E501
            'permanent_state': (str,),  # noqa: E501
            'permanent_pincode': (int,),  # noqa: E501
            'residence_type_permanent_address': (str,),  # noqa: E501
            'years_of_stay_in_permanent_address': (int,),  # noqa: E501
            'mailing_address': (str,),  # noqa: E501
            'marital_status': (str,),  # noqa: E501
            'religion': (str,),  # noqa: E501
            'nationality': (str,),  # noqa: E501
            'father_name': (str,),  # noqa: E501
            'mother_name': (str,),  # noqa: E501
            'spouse_name': (str,),  # noqa: E501
            'education_qualification': (str,),  # noqa: E501
            'net_monthly_income': (float,),  # noqa: E501
            'annual_income': (float,),  # noqa: E501
            'no_of_dependants': (int,),  # noqa: E501
            'occupation': (str,),  # noqa: E501
            'partner_score_on_the_customer': (float,),  # noqa: E501
            'politically_exposed': (str,),  # noqa: E501
            'income_source': (str,),  # noqa: E501
            'applicant_profession': (str,),  # noqa: E501
            'caution_negative_profile': (str,),  # noqa: E501
            'udyam_number': (str,),  # noqa: E501
            'pan_check': (str,),  # noqa: E501
            'dedupe_status': (str,),  # noqa: E501
            'pan_number': (str,),  # noqa: E501
            'pan_number_link': ([str],),  # noqa: E501
            'pan_number_link_password': (str,),  # noqa: E501
            'form_60_link': ([str],),  # noqa: E501
            'form_60_link_password': (str,),  # noqa: E501
            'aadhar_number': (str,),  # noqa: E501
            'aadhar_number_link': ([str],),  # noqa: E501
            'aadhar_number_link_password': (str,),  # noqa: E501
            'voter_id_number': (str,),  # noqa: E501
            'voting_id_link': ([str],),  # noqa: E501
            'voting_id_link_password': (str,),  # noqa: E501
            'driving_license_number': (str,),  # noqa: E501
            'driving_license_number_link': ([str],),  # noqa: E501
            'driving_license_number_link_password': (str,),  # noqa: E501
            'driving_license_expiry_date': (date,),  # noqa: E501
            'passport_number': (str,),  # noqa: E501
            'passport_number_link': ([str],),  # noqa: E501
            'passport_number_link_password': (str,),  # noqa: E501
            'video_image_link': ([str],),  # noqa: E501
            'video_image_link_password': (str,),  # noqa: E501
            'video_kyc_detail': (BodyCreateLoanVideoKycDetail,),  # noqa: E501
            'other_kyc_number': (str,),  # noqa: E501
            'other_kyc_link': ([str],),  # noqa: E501
            'other_kyc_link_password': (str,),  # noqa: E501
            'rent_agreement_link': ([str],),  # noqa: E501
            'rent_agreement_link_password': (str,),  # noqa: E501
            'utility_bills_link': ([str],),  # noqa: E501
            'utility_bills_link_password': (str,),  # noqa: E501
            'photo_link': ([str],),  # noqa: E501
            'photo_link_password': (str,),  # noqa: E501
            'employer_tier': (str,),  # noqa: E501
            'employer_category': (str,),  # noqa: E501
            'employment_type': (str,),  # noqa: E501
            'employment_details_name': (str,),  # noqa: E501
            'employment_details_address': (str,),  # noqa: E501
            'employment_details_years_of_experience': (float,),  # noqa: E501
            'employment_details_designation': (str,),  # noqa: E501
            'employement_vintage_current_organisation': (int,),  # noqa: E501
            'total_work_experience': (float,),  # noqa: E501
            'payslip_link': ([str],),  # noqa: E501
            'payslip_link_password': (str,),  # noqa: E501
            'tds_certificate_link': ([str],),  # noqa: E501
            'tds_certificate_link_password': (str,),  # noqa: E501
            'ckyc_download_identifier': (str,),  # noqa: E501
            'business': (BodyCreateLoanBusiness,),  # noqa: E501
            'guarantors': ([BodyCreateLoanGuarantors],),  # noqa: E501
            'co_applicants': ([BodyCreateLoanCoApplicants],),  # noqa: E501
            'bank_statement': (BodyCreateLoanBankStatement,),  # noqa: E501
            'name_of_bureau': (str,),  # noqa: E501
            'bureau_vintage': (int,),  # noqa: E501
            'bureau_score': (int,),  # noqa: E501
            'bureau_report_json_link': ([str],),  # noqa: E501
            'bureau_report_json_link_password': (str,),  # noqa: E501
            'bureau_json_link': ([str],),  # noqa: E501
            'bureau_json_link_password': (str,),  # noqa: E501
            'bureau_json': ([str],),  # noqa: E501
            'commercial_bureau_score': (int,),  # noqa: E501
            'commercial_bureau_score_link': ([str],),  # noqa: E501
            'commercial_bureau_score_link_password': (str,),  # noqa: E501
            'partner_score_on_the_customer_including_bureau_report': (float,),  # noqa: E501
            'total_existing_obligations': (int,),  # noqa: E501
            'credit_card_limit': (int,),  # noqa: E501
            'no_of_credit_cards': (int,),  # noqa: E501
            'total_number_of_unsecured_loans': (int,),  # noqa: E501
            'value_of_total_unsecured_loans': (float,),  # noqa: E501
            'writeoff_amount_suitfiled_settled_in_last_36_months': (float,),  # noqa: E501
            'dpd_days_last_1_month': (int,),  # noqa: E501
            'dpd_days_last_3_months': (int,),  # noqa: E501
            'total_number_of_loans': (int,),  # noqa: E501
            'value_of_total_loans': (float,),  # noqa: E501
            'number_of_enquiries_3months': (int,),  # noqa: E501
            'number_of_enquiries_6months': (int,),  # noqa: E501
            'number_of_enquiries_12months': (int,),  # noqa: E501
            'number_of_writeoff_suitfiled_settled_in_the_last_12_months': (int,),  # noqa: E501
            'max_dpd_tradeline_last_12months': (int,),  # noqa: E501
            'max_overdue_tradeline': (int,),  # noqa: E501
            'total_overdue_amount_in_last_12m': (float,),  # noqa: E501
            'amount_of_loan_settled_in_last_12m': (float,),  # noqa: E501
            'nature_of_loan_settled1': (str,),  # noqa: E501
            'nature_of_loan_settled2': (str,),  # noqa: E501
            'total_emi_bounces': (int,),  # noqa: E501
            'bounces_in_last_6m': (int,),  # noqa: E501
            'bounces_in_last_12m': (int,),  # noqa: E501
            'bureau_validity_date': (date,),  # noqa: E501
            'financial_data': (BodyCreateLoanFinancialData,),  # noqa: E501
            'abb_emi_ratio': (float,),  # noqa: E501
            'dscr': (float,),  # noqa: E501
            'foir': (float,),  # noqa: E501
            'ltr': (float,),  # noqa: E501
            'insr': (float,),  # noqa: E501
            'eligibility_as_per_insr': (float,),  # noqa: E501
            'eligibility_as_per_foir': (float,),  # noqa: E501
            'eligibility_as_per_ltv': (float,),  # noqa: E501
            'eligibility_loan_amount': (float,),  # noqa: E501
            'fcf': (int,),  # noqa: E501
            'emi_obligations': (int,),  # noqa: E501
            'viability_ratio': (float,),  # noqa: E501
            'loan_eligibility_to_income_ratio': (int,),  # noqa: E501
            'risk_category': (str,),  # noqa: E501
            'salary_credit_declared_income': (int,),  # noqa: E501
            'product_id': (str,),  # noqa: E501
            'client_loan_id': (str,),  # noqa: E501
            'application_id': (str,),  # noqa: E501
            'loan_cycle': (int,),  # noqa: E501
            'partner_branch_code': (str,),  # noqa: E501
            'partner_branch_name': (str,),  # noqa: E501
            'product_type': (str,),  # noqa: E501
            'partner_product_code': (str,),  # noqa: E501
            'partner_scheme_code': (str,),  # noqa: E501
            'category': (str,),  # noqa: E501
            'sub_category': (str,),  # noqa: E501
            'purpose': (str,),  # noqa: E501
            'disbursement_type': (str,),  # noqa: E501
            'number_of_tranches': (int,),  # noqa: E501
            'end_borrower_amount': (float,),  # noqa: E501
            'existing_lender_amount': (float,),  # noqa: E501
            'principal_amount': (float,),  # noqa: E501
            'interest_rate': (float,),  # noqa: E501
            'interest_type': (str,),  # noqa: E501
            'tenure': (int,),  # noqa: E501
            'tenure_frequency': (str,),  # noqa: E501
            'repayment_frequency': (str,),  # noqa: E501
            'number_of_repayments': (int,),  # noqa: E501
            'first_repayment_date': (date,),  # noqa: E501
            'repayment_mode': (str,),  # noqa: E501
            'advance_emi': (float,),  # noqa: E501
            'umrn': (str,),  # noqa: E501
            'interest_start_date': (date,),  # noqa: E501
            'differential_interest': (float,),  # noqa: E501
            'processing_fee': (float,),  # noqa: E501
            'stamp_duty': (float,),  # noqa: E501
            'insurance_charges': (float,),  # noqa: E501
            'documentation_charges': (float,),  # noqa: E501
            'other_charges': (float,),  # noqa: E501
            'loan_plr_type': (str,),  # noqa: E501
            'loan_plr_rate': (float,),  # noqa: E501
            'spread_id': (str,),  # noqa: E501
            'loan_emi': (float,),  # noqa: E501
            'rcu_status': (str,),  # noqa: E501
            'surrogate': (str,),  # noqa: E501
            'sub_class': (str,),  # noqa: E501
            'weaker_section': (str,),  # noqa: E501
            'disbursement_accounts': ([BodyCreateLoanDisbursementAccounts],),  # noqa: E501
            'assets': ([BodyCreateLoanAssets],),  # noqa: E501
            'references': ([BodyCreateLoanReferences],),  # noqa: E501
            'insurance_details': ([BodyCreateLoanInsuranceDetails],),  # noqa: E501
            'psl_flag': (str,),  # noqa: E501
            'psl_description': (str,),  # noqa: E501
            'psl_code': (str,),  # noqa: E501
            'psl_proof_link': ([str],),  # noqa: E501
            'psl_proof_link_password': (str,),  # noqa: E501
            'tranches': ([BodyCreateLoanTranches],),  # noqa: E501
            'linked_loan_infos': ([BodyCreateLoanLinkedLoanInfos],),  # noqa: E501
            'sourcing_detail': (BodyCreateLoanSourcingDetail,),  # noqa: E501
            'deviation_details': ([BodyCreateLoanDeviationDetails],),  # noqa: E501
        }

    @cached_property
    def discriminator():
        return None


    attribute_map = {
        'customer_type': 'customer_type',  # noqa: E501
        'customer_category': 'customer_category',  # noqa: E501
        'client_customer_id': 'client_customer_id',  # noqa: E501
        'title': 'title',  # noqa: E501
        'first_name': 'first_name',  # noqa: E501
        'middle_name': 'middle_name',  # noqa: E501
        'last_name': 'last_name',  # noqa: E501
        'gender': 'gender',  # noqa: E501
        'date_of_birth': 'date_of_birth',  # noqa: E501
        'age': 'age',  # noqa: E501
        'mobile_number': 'mobile_number',  # noqa: E501
        'phone_number': 'phone_number',  # noqa: E501
        'email': 'email',  # noqa: E501
        'official_email_id': 'official_email_id',  # noqa: E501
        'place_of_birth': 'place_of_birth',  # noqa: E501
        'current_address': 'current_address',  # noqa: E501
        'current_village': 'current_village',  # noqa: E501
        'current_city_tier': 'current_city_tier',  # noqa: E501
        'current_city': 'current_city',  # noqa: E501
        'current_district': 'current_district',  # noqa: E501
        'current_state': 'current_state',  # noqa: E501
        'current_country': 'current_country',  # noqa: E501
        'current_pincode': 'current_pincode',  # noqa: E501
        'residence_type_current_address': 'residence_type_current_address',  # noqa: E501
        'years_of_stay_in_current_address': 'years_of_stay_in_current_address',  # noqa: E501
        'permanent_address': 'permanent_address',  # noqa: E501
        'permanent_city': 'permanent_city',  # noqa: E501
        'permanent_city_tier': 'permanent_city_tier',  # noqa: E501
        'permanent_district': 'permanent_district',  # noqa: E501
        'permanent_state': 'permanent_state',  # noqa: E501
        'permanent_pincode': 'permanent_pincode',  # noqa: E501
        'residence_type_permanent_address': 'residence_type_permanent_address',  # noqa: E501
        'years_of_stay_in_permanent_address': 'years_of_stay_in_permanent_address',  # noqa: E501
        'mailing_address': 'mailing_address',  # noqa: E501
        'marital_status': 'marital_status',  # noqa: E501
        'religion': 'religion',  # noqa: E501
        'nationality': 'nationality',  # noqa: E501
        'father_name': 'father_name',  # noqa: E501
        'mother_name': 'mother_name',  # noqa: E501
        'spouse_name': 'spouse_name',  # noqa: E501
        'education_qualification': 'education_qualification',  # noqa: E501
        'net_monthly_income': 'net_monthly_income',  # noqa: E501
        'annual_income': 'annual_income',  # noqa: E501
        'no_of_dependants': 'no_of_dependants',  # noqa: E501
        'occupation': 'occupation',  # noqa: E501
        'partner_score_on_the_customer': 'partner_score_on_the_customer',  # noqa: E501
        'politically_exposed': 'politically_exposed',  # noqa: E501
        'income_source': 'income_source',  # noqa: E501
        'applicant_profession': 'applicant_profession',  # noqa: E501
        'caution_negative_profile': 'caution_negative_profile',  # noqa: E501
        'udyam_number': 'udyam_number',  # noqa: E501
        'pan_check': 'pan_check',  # noqa: E501
        'dedupe_status': 'dedupe_status',  # noqa: E501
        'pan_number': 'pan_number',  # noqa: E501
        'pan_number_link': 'pan_number_link',  # noqa: E501
        'pan_number_link_password': 'pan_number_link_password',  # noqa: E501
        'form_60_link': 'form_60_link',  # noqa: E501
        'form_60_link_password': 'form_60_link_password',  # noqa: E501
        'aadhar_number': 'aadhar_number',  # noqa: E501
        'aadhar_number_link': 'aadhar_number_link',  # noqa: E501
        'aadhar_number_link_password': 'aadhar_number_link_password',  # noqa: E501
        'voter_id_number': 'voter_id_number',  # noqa: E501
        'voting_id_link': 'voting_id_link',  # noqa: E501
        'voting_id_link_password': 'voting_id_link_password',  # noqa: E501
        'driving_license_number': 'driving_license_number',  # noqa: E501
        'driving_license_number_link': 'driving_license_number_link',  # noqa: E501
        'driving_license_number_link_password': 'driving_license_number_link_password',  # noqa: E501
        'driving_license_expiry_date': 'driving_license_expiry_date',  # noqa: E501
        'passport_number': 'passport_number',  # noqa: E501
        'passport_number_link': 'passport_number_link',  # noqa: E501
        'passport_number_link_password': 'passport_number_link_password',  # noqa: E501
        'video_image_link': 'video_image_link',  # noqa: E501
        'video_image_link_password': 'video_image_link_password',  # noqa: E501
        'video_kyc_detail': 'video_kyc_detail',  # noqa: E501
        'other_kyc_number': 'other_kyc_number',  # noqa: E501
        'other_kyc_link': 'other_kyc_link',  # noqa: E501
        'other_kyc_link_password': 'other_kyc_link_password',  # noqa: E501
        'rent_agreement_link': 'rent_agreement_link',  # noqa: E501
        'rent_agreement_link_password': 'rent_agreement_link_password',  # noqa: E501
        'utility_bills_link': 'utility_bills_link',  # noqa: E501
        'utility_bills_link_password': 'utility_bills_link_password',  # noqa: E501
        'photo_link': 'photo_link',  # noqa: E501
        'photo_link_password': 'photo_link_password',  # noqa: E501
        'employer_tier': 'employer_tier',  # noqa: E501
        'employer_category': 'employer_category',  # noqa: E501
        'employment_type': 'employment_type',  # noqa: E501
        'employment_details_name': 'employment_details_name',  # noqa: E501
        'employment_details_address': 'employment_details_address',  # noqa: E501
        'employment_details_years_of_experience': 'employment_details_years_of_experience',  # noqa: E501
        'employment_details_designation': 'employment_details_designation',  # noqa: E501
        'employement_vintage_current_organisation': 'employement_vintage_current_organisation',  # noqa: E501
        'total_work_experience': 'total_work_experience',  # noqa: E501
        'payslip_link': 'payslip_link',  # noqa: E501
        'payslip_link_password': 'payslip_link_password',  # noqa: E501
        'tds_certificate_link': 'tds_certificate_link',  # noqa: E501
        'tds_certificate_link_password': 'tds_certificate_link_password',  # noqa: E501
        'ckyc_download_identifier': 'ckyc_download_identifier', # noqa: E501
        'business': 'business',  # noqa: E501
        'guarantors': 'guarantors',  # noqa: E501
        'co_applicants': 'co_applicants',  # noqa: E501
        'bank_statement': 'bank_statement',  # noqa: E501
        'name_of_bureau': 'name_of_bureau',  # noqa: E501
        'bureau_vintage': 'bureau_vintage',  # noqa: E501
        'bureau_score': 'bureau_score',  # noqa: E501
        'bureau_report_json_link': 'bureau_report_json_link',  # noqa: E501
        'bureau_report_json_link_password': 'bureau_report_json_link_password',  # noqa: E501
        'bureau_json_link': 'bureau_json_link',  # noqa: E501
        'bureau_json_link_password': 'bureau_json_link_password',  # noqa: E501
        'bureau_json': 'bureau_json',  # noqa: E501
        'commercial_bureau_score': 'commercial_bureau_score',  # noqa: E501
        'commercial_bureau_score_link': 'commercial_bureau_score_link',  # noqa: E501
        'commercial_bureau_score_link_password': 'commercial_bureau_score_link_password',  # noqa: E501
        'partner_score_on_the_customer_including_bureau_report': 'partner_score_on_the_customer_including_bureau_report',  # noqa: E501
        'total_existing_obligations': 'total_existing_obligations',  # noqa: E501
        'credit_card_limit': 'credit_card_limit',  # noqa: E501
        'no_of_credit_cards': 'no_of_credit_cards',  # noqa: E501
        'total_number_of_unsecured_loans': 'total_number_of_unsecured_loans',  # noqa: E501
        'value_of_total_unsecured_loans': 'value_of_total_unsecured_loans',  # noqa: E501
        'writeoff_amount_suitfiled_settled_in_last_36_months': 'writeoff_amount_suitfiled_settled_in_last_36_months',  # noqa: E501
        'dpd_days_last_1_month': 'dpd_days_last_1_month',  # noqa: E501
        'dpd_days_last_3_months': 'dpd_days_last_3_months',  # noqa: E501
        'total_number_of_loans': 'total_number_of_loans',  # noqa: E501
        'value_of_total_loans': 'value_of_total_loans',  # noqa: E501
        'number_of_enquiries_3months': 'number_of_enquiries_3months',  # noqa: E501
        'number_of_enquiries_6months': 'number_of_enquiries_6months',  # noqa: E501
        'number_of_enquiries_12months': 'number_of_enquiries_12months',  # noqa: E501
        'number_of_writeoff_suitfiled_settled_in_the_last_12_months': 'number_of_writeoff_suitfiled_settled_in_the_last_12_months',  # noqa: E501
        'max_dpd_tradeline_last_12months': 'max_dpd_tradeline_last_12months',  # noqa: E501
        'max_overdue_tradeline': 'max_overdue_tradeline',  # noqa: E501
        'total_overdue_amount_in_last_12m': 'total_overdue_amount_in_last_12m',  # noqa: E501
        'amount_of_loan_settled_in_last_12m': 'amount_of_loan_settled_in_last_12m',  # noqa: E501
        'nature_of_loan_settled1': 'nature_of_loan_settled1',  # noqa: E501
        'nature_of_loan_settled2': 'nature_of_loan_settled2',  # noqa: E501
        'total_emi_bounces': 'total_emi_bounces',  # noqa: E501
        'bounces_in_last_6m': 'bounces_in_last_6m',  # noqa: E501
        'bounces_in_last_12m': 'bounces_in_last_12m',  # noqa: E501
        'bureau_validity_date': 'bureau_validity_date',  # noqa: E501
        'financial_data': 'financial_data',  # noqa: E501
        'abb_emi_ratio': 'abb_emi_ratio',  # noqa: E501
        'dscr': 'dscr',  # noqa: E501
        'foir': 'foir',  # noqa: E501
        'ltr': 'ltr',  # noqa: E501
        'insr': 'insr',  # noqa: E501
        'eligibility_as_per_insr': 'eligibility_as_per_insr',  # noqa: E501
        'eligibility_as_per_foir': 'eligibility_as_per_foir',  # noqa: E501
        'eligibility_as_per_ltv': 'eligibility_as_per_ltv',  # noqa: E501
        'eligibility_loan_amount': 'eligibility_loan_amount',  # noqa: E501
        'fcf': 'fcf',  # noqa: E501
        'emi_obligations': 'emi_obligations',  # noqa: E501
        'viability_ratio': 'viability_ratio',  # noqa: E501
        'loan_eligibility_to_income_ratio': 'loan_eligibility_to_income_ratio',  # noqa: E501
        'risk_category': 'risk_category',  # noqa: E501
        'salary_credit_declared_income': 'salary_credit_declared_income',  # noqa: E501
        'product_id': 'product_id',  # noqa: E501
        'client_loan_id': 'client_loan_id',  # noqa: E501
        'application_id': 'application_id',  # noqa: E501
        'loan_cycle': 'loan_cycle',  # noqa: E501
        'partner_branch_code': 'partner_branch_code',  # noqa: E501
        'partner_branch_name': 'partner_branch_name',  # noqa: E501
        'product_type': 'product_type',  # noqa: E501
        'partner_product_code': 'partner_product_code',  # noqa: E501
        'partner_scheme_code': 'partner_scheme_code',  # noqa: E501
        'category': 'category',  # noqa: E501
        'sub_category': 'sub_category',  # noqa: E501
        'purpose': 'purpose',  # noqa: E501
        'disbursement_type': 'disbursement_type',  # noqa: E501
        'number_of_tranches': 'number_of_tranches',  # noqa: E501
        'end_borrower_amount': 'end_borrower_amount',  # noqa: E501
        'existing_lender_amount': 'existing_lender_amount',  # noqa: E501
        'principal_amount': 'principal_amount',  # noqa: E501
        'interest_rate': 'interest_rate',  # noqa: E501
        'interest_type': 'interest_type',  # noqa: E501
        'tenure': 'tenure',  # noqa: E501
        'tenure_frequency': 'tenure_frequency',  # noqa: E501
        'repayment_frequency': 'repayment_frequency',  # noqa: E501
        'number_of_repayments': 'number_of_repayments',  # noqa: E501
        'first_repayment_date': 'first_repayment_date',  # noqa: E501
        'repayment_mode': 'repayment_mode',  # noqa: E501
        'advance_emi': 'advance_emi',  # noqa: E501
        'umrn': 'umrn',  # noqa: E501
        'interest_start_date': 'interest_start_date',  # noqa: E501
        'differential_interest': 'differential_interest',  # noqa: E501
        'processing_fee': 'processing_fee',  # noqa: E501
        'stamp_duty': 'stamp_duty',  # noqa: E501
        'insurance_charges': 'insurance_charges',  # noqa: E501
        'documentation_charges': 'documentation_charges',  # noqa: E501
        'other_charges': 'other_charges',  # noqa: E501
        'loan_plr_type': 'loan_plr_type',  # noqa: E501
        'loan_plr_rate': 'loan_plr_rate',  # noqa: E501
        'spread_id': 'spread_id',  # noqa: E501
        'loan_emi': 'loan_emi',  # noqa: E501
        'rcu_status': 'rcu_status',  # noqa: E501
        'surrogate': 'surrogate',  # noqa: E501
        'sub_class': 'sub_class',  # noqa: E501
        'weaker_section': 'weaker_section',  # noqa: E501
        'disbursement_accounts': 'disbursement_accounts',  # noqa: E501
        'assets': 'assets',  # noqa: E501
        'references': 'references',  # noqa: E501
        'insurance_details': 'insurance_details',  # noqa: E501
        'psl_flag': 'psl_flag',  # noqa: E501
        'psl_description': 'psl_description',  # noqa: E501
        'psl_code': 'psl_code',  # noqa: E501
        'psl_proof_link': 'psl_proof_link',  # noqa: E501
        'psl_proof_link_password': 'psl_proof_link_password',  # noqa: E501
        'tranches': 'tranches',  # noqa: E501
        'linked_loan_infos': 'linked_loan_infos',  # noqa: E501
        'sourcing_detail': 'sourcing_detail',  # noqa: E501
        'deviation_details': 'deviation_details',  # noqa: E501
    }

    read_only_vars = {
    }

    _composed_schemas = {}

    @classmethod
    @convert_js_args_to_python_args
    def _from_openapi_data(cls, *args, **kwargs):  # noqa: E501
        """BodyCreateLoan - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            customer_type (str): Individual / Corporate. [optional]  # noqa: E501
            customer_category (str): Salaried, Self-Empolyed. [optional]  # noqa: E501
            client_customer_id (str): Customer id as per partners CRM/LOS. [optional]  # noqa: E501
            title (str): Mr / Ms. [optional]  # noqa: E501
            first_name (str): First Name of the Customer. [optional]  # noqa: E501
            middle_name (str): Middle Name of the Customer. [optional]  # noqa: E501
            last_name (str): Last Name of the Customer. [optional]  # noqa: E501
            gender (str): M / F / O. [optional]  # noqa: E501
            date_of_birth (date): Date of birth in YYYY-MM-DD. [optional]  # noqa: E501
            age (int): Age in years. [optional]  # noqa: E501
            mobile_number (int): Mobile Number of the Customer (10 digits). [optional]  # noqa: E501
            phone_number (int): Contact Number of the Customer. [optional]  # noqa: E501
            email (str): Permanent Email id of the Customer. [optional]  # noqa: E501
            official_email_id (str): Official Email ID of the Customer. [optional]  # noqa: E501
            place_of_birth (str): Place of birth of the Customer. [optional]  # noqa: E501
            current_address (str): Current address of the applicant. Free flowing text. [optional]  # noqa: E501
            current_village (str): Village in which applicant is currently residing. Free flowing for now. [optional]  # noqa: E501
            current_city_tier (str): tier_1, tier_2 etc. for the current city. [optional]  # noqa: E501
            current_city (str): City in which applicant is currently residing. Free flowing for now. [optional]  # noqa: E501
            current_district (str): District in which applicant is currently residing. Free flowing for now. [optional]  # noqa: E501
            current_state (str): State in which applicant is currently residing. Free flowing for now. [optional]  # noqa: E501
            current_country (str): Country in which applicant is currently residing. Free flowing for now. [optional]  # noqa: E501
            current_pincode (int): Pincode of the current address. [optional]  # noqa: E501
            residence_type_current_address (str): rented / owned / leased. [optional]  # noqa: E501
            years_of_stay_in_current_address (int): How many years stayed in the current address. [optional]  # noqa: E501
            permanent_address (str): Permanent address of the customer. Free flowing for now. [optional]  # noqa: E501
            permanent_city (str): Permanent city of the customer. Free flowing for now. [optional]  # noqa: E501
            permanent_city_tier (str): tier_1, tier_2 etc. for the permanent city. [optional]  # noqa: E501
            permanent_district (str): Permanent district of the customer. Free flowing for now. [optional]  # noqa: E501
            permanent_state (str): Permanent state of the customer. Free flowing for now. [optional]  # noqa: E501
            permanent_pincode (int): Permanent pincode of the customer. Free flowing for now. [optional]  # noqa: E501
            residence_type_permanent_address (str): rented / owned / leased. [optional]  # noqa: E501
            years_of_stay_in_permanent_address (int): How many years stayed in the permanent address. [optional]  # noqa: E501
            mailing_address (str): Mailing address of the customer. Free flowing text. [optional]  # noqa: E501
            marital_status (str): married / unmarried. [optional]  # noqa: E501
            religion (str): Religion of customer. Free flow text. [optional]  # noqa: E501
            nationality (str): Nationality of customer. Free flow text. [optional]  # noqa: E501
            father_name (str): Father name of customer. Free flow text. [optional]  # noqa: E501
            mother_name (str): Mother name of customer; Free flow text. [optional]  # noqa: E501
            spouse_name (str): Spouse name of customer; Free flow text. [optional]  # noqa: E501
            education_qualification (str): Educational Qualifications. [optional]  # noqa: E501
            net_monthly_income (float): Monthly Income of the Customer (in Rupees). [optional]  # noqa: E501
            annual_income (float): Annual income of the customer in number (don’t convert into thousand/lacs etc). [optional]  # noqa: E501
            no_of_dependants (int): Number of dependants. [optional]  # noqa: E501
            occupation (str): salaried / business / retired / self_employed and others. [optional]  # noqa: E501
            partner_score_on_the_customer (float): Partner score. [optional]  # noqa: E501
            politically_exposed (str): Political Exposure of the Customer. [optional]  # noqa: E501
            income_source (str): Cash / Cheque / Fund transfer. [optional]  # noqa: E501
            applicant_profession (str): Profession of the Customer. [optional]  # noqa: E501
            caution_negative_profile (str): Is the customer categories as a negative profile?. [optional]  # noqa: E501
            udyam_number (str): Udyam Number of the Customer. [optional]  # noqa: E501
            pan_check (str): Result of the pan check. [optional]  # noqa: E501
            dedupe_status (str): Result of the dedupe. [optional]  # noqa: E501
            pan_number (str): PAN number of customer. [optional]  # noqa: E501
            pan_number_link ([str]): PAN image of the document. [optional]  # noqa: E501
            pan_number_link_password (str): PAN image password. [optional]  # noqa: E501
            form_60_link ([str]): Form 60 If applicable. [optional]  # noqa: E501
            form_60_link_password (str): Form 60 password If applicable. [optional]  # noqa: E501
            aadhar_number (str): Aadhar number of customer. [optional]  # noqa: E501
            aadhar_number_link ([str]): Aadhar image of the document. [optional]  # noqa: E501
            aadhar_number_link_password (str): Aadhar image password. [optional]  # noqa: E501
            voter_id_number (str): Voter ID Number of customer. [optional]  # noqa: E501
            voting_id_link ([str]): Voter ID image of the document. [optional]  # noqa: E501
            voting_id_link_password (str): Voter ID image password. [optional]  # noqa: E501
            driving_license_number (str): Driving license number of customer. [optional]  # noqa: E501
            driving_license_number_link ([str]): Driving License image of the document. [optional]  # noqa: E501
            driving_license_number_link_password (str): Driving license image password. [optional]  # noqa: E501
            driving_license_expiry_date (date): Expiry date of driving license. [optional]  # noqa: E501
            passport_number (str): Passport number of customer. [optional]  # noqa: E501
            passport_number_link ([str]): Passport image of the document. [optional]  # noqa: E501
            passport_number_link_password (str): Passport image password. [optional]  # noqa: E501
            video_image_link ([str]): Video KYC of the Applicant. [optional]  # noqa: E501
            video_image_link_password (str): Video KYC link password. [optional]  # noqa: E501
            video_kyc_detail (BodyCreateLoanVideoKycDetail): [optional]  # noqa: E501
            other_kyc_number (str): KYC Number of the Customer. [optional]  # noqa: E501
            other_kyc_link ([str]): KYC Image of the Customer. [optional]  # noqa: E501
            other_kyc_link_password (str): KYC Image link password. [optional]  # noqa: E501
            rent_agreement_link ([str]): KYC number of customer. [optional]  # noqa: E501
            rent_agreement_link_password (str): Rent agreement link password. [optional]  # noqa: E501
            utility_bills_link ([str]): Utility bills link. [optional]  # noqa: E501
            utility_bills_link_password (str): Utility bills link password. [optional]  # noqa: E501
            photo_link ([str]): Photo Image of the Customer. [optional]  # noqa: E501
            photo_link_password (str): Photo Image password. [optional]  # noqa: E501
            employer_tier (str): tier_1, tier_2 etc. for  the employer. [optional]  # noqa: E501
            employer_category (str): Category of the employer. [optional]  # noqa: E501
            employment_type (str): salaried / self_employed. [optional]  # noqa: E501
            employment_details_name (str): Employer name. Free flowing text. [optional]  # noqa: E501
            employment_details_address (str): Office address. Free flowing text. [optional]  # noqa: E501
            employment_details_years_of_experience (float): Applicant Number of years in the current organization. [optional]  # noqa: E501
            employment_details_designation (str): Designation in current role, free flowing text. [optional]  # noqa: E501
            employement_vintage_current_organisation (int): No of Years in the same Organisation. [optional]  # noqa: E501
            total_work_experience (float): Total years of experience. [optional]  # noqa: E501
            payslip_link ([str]): Last three month pay slip. [optional]  # noqa: E501
            payslip_link_password (str): Last three month pay slip link password. [optional]  # noqa: E501
            tds_certificate_link ([str]): Last Three Year TDS Certificate Link. [optional]  # noqa: E501
            tds_certificate_link_password (str): Last Three Year TDS Certificate Link. [optional]  # noqa: E501
            ckyc_download_identifier (str): CKYC Download Identifier. [optional]  # noqa: E501
            business (BodyCreateLoanBusiness): [optional]  # noqa: E501
            guarantors ([BodyCreateLoanGuarantors]): Refer table Guarantors for attributes. [optional]  # noqa: E501
            co_applicants ([BodyCreateLoanCoApplicants]): Refer table CoApplicants for attributes. [optional]  # noqa: E501
            bank_statement (BodyCreateLoanBankStatement): [optional]  # noqa: E501
            name_of_bureau (str): Cibil / Experian / Himark. [optional]  # noqa: E501
            bureau_vintage (int): Vintage in the bureau. Number of years from the first trade line. [optional]  # noqa: E501
            bureau_score (int): Bureau Score. [optional]  # noqa: E501
            bureau_report_json_link ([str]): Document of the bureau. [optional]  # noqa: E501
            bureau_report_json_link_password (str): Document of the bureau - Password. [optional]  # noqa: E501
            bureau_json_link ([str]): Bureau Json placed in a link. [optional]  # noqa: E501
            bureau_json_link_password (str): Bureau Json placed in a link - Password. [optional]  # noqa: E501
            bureau_json ([str]): Bureau Json response. [optional]  # noqa: E501
            commercial_bureau_score (int): CRIF score. [optional]  # noqa: E501
            commercial_bureau_score_link ([str]): Commercial Bureau Document. [optional]  # noqa: E501
            commercial_bureau_score_link_password (str): Commercial Bureau Document Password. [optional]  # noqa: E501
            partner_score_on_the_customer_including_bureau_report (float): Score Captured by the Partner. [optional]  # noqa: E501
            total_existing_obligations (int): Total Existing Obligations basis the Bureau Report. [optional]  # noqa: E501
            credit_card_limit (int): Total Credit Card Limit basis the Bureau Report. [optional]  # noqa: E501
            no_of_credit_cards (int): Total Number of Credit Cards per Bureau Report. [optional]  # noqa: E501
            total_number_of_unsecured_loans (int): Total Number of Unsecured Loans per Bureau Report. [optional]  # noqa: E501
            value_of_total_unsecured_loans (float): Total value of unsecured loans. [optional]  # noqa: E501
            writeoff_amount_suitfiled_settled_in_last_36_months (float): Amount of writeoffs settled in last 36 months. [optional]  # noqa: E501
            dpd_days_last_1_month (int): Number of DPD in last 1 month. [optional]  # noqa: E501
            dpd_days_last_3_months (int): Number of DPD in last 3 months. [optional]  # noqa: E501
            total_number_of_loans (int): Total Number of Loans per Bureau Report. [optional]  # noqa: E501
            value_of_total_loans (float): Total value of loans. [optional]  # noqa: E501
            number_of_enquiries_3months (int): Number of Enquiries in the Last 3 Months per Bureau Report. [optional]  # noqa: E501
            number_of_enquiries_6months (int): Number of Enquiries in the Last 6 Months per Bureau Report. [optional]  # noqa: E501
            number_of_enquiries_12months (int): Number of Enquiries in the Last 12 Months per Bureau Report. [optional]  # noqa: E501
            number_of_writeoff_suitfiled_settled_in_the_last_12_months (int): Number of Writeoff Suitfiled Settled in the Last 12 Months. [optional]  # noqa: E501
            max_dpd_tradeline_last_12months (int): Maximum DPD Tradeline in the Last 12 Months. [optional]  # noqa: E501
            max_overdue_tradeline (int): Maximum Overdue Tradeline. [optional]  # noqa: E501
            total_overdue_amount_in_last_12m (float): Total Overdue Amount in the Last 12 Months. [optional]  # noqa: E501
            amount_of_loan_settled_in_last_12m (float): Loan Amount Settled in the Last 12 Months. [optional]  # noqa: E501
            nature_of_loan_settled1 (str): The nature of past loan settlement if any (Loan 1) - Settled/ Closed/ Written-off. [optional]  # noqa: E501
            nature_of_loan_settled2 (str): The nature of past loan settlement if any (Loan 2) - Settled/ Closed/ Written-off. [optional]  # noqa: E501
            total_emi_bounces (int): Total EMI Bounces. [optional]  # noqa: E501
            bounces_in_last_6m (int): EMI Bounces in the Last 6 Months. [optional]  # noqa: E501
            bounces_in_last_12m (int): EMI Bounces in the Last 12 Months. [optional]  # noqa: E501
            bureau_validity_date (date): Validity of bureau report. [optional]  # noqa: E501
            financial_data (BodyCreateLoanFinancialData): [optional]  # noqa: E501
            abb_emi_ratio (float): Average Bank balance to EMI. [optional]  # noqa: E501
            dscr (float): Debt Service Coverage Ratio. [optional]  # noqa: E501
            foir (float): Fixed Obligations to Income Ratio. [optional]  # noqa: E501
            ltr (float): Loan Transfer Ratio. [optional]  # noqa: E501
            insr (float): INSR. [optional]  # noqa: E501
            eligibility_as_per_insr (float): Eligibility as per INSR. [optional]  # noqa: E501
            eligibility_as_per_foir (float): Eligibility as per FOIR. [optional]  # noqa: E501
            eligibility_as_per_ltv (float): Eligibility as per LTV. [optional]  # noqa: E501
            eligibility_loan_amount (float): Eligibility Loan amount. [optional]  # noqa: E501
            fcf (int): Free Cash Flows. [optional]  # noqa: E501
            emi_obligations (int): Existing EMI obligations. [optional]  # noqa: E501
            viability_ratio (float): Net Assets/ Debt. [optional]  # noqa: E501
            loan_eligibility_to_income_ratio (int): The ratio of loan amount eligible to the personal income. [optional]  # noqa: E501
            risk_category (str): Risk Category. [optional]  # noqa: E501
            salary_credit_declared_income (int): Ratio of salary credit to customer account to the income declared. [optional]  # noqa: E501
            product_id (str): Product ID created in CA. [optional]  # noqa: E501
            client_loan_id (str): Loan ID as per Partner&#39;s LMS. [optional]  # noqa: E501
            application_id (str): Application ID as per Partner&#39;s CRM/LOS. [optional]  # noqa: E501
            loan_cycle (int): Denotes the Cycle number of the loan given to the borrower. [optional]  # noqa: E501
            partner_branch_code (str): Branch Code as per Partner&#39;s LOS. [optional]  # noqa: E501
            partner_branch_name (str): Branch Name as per Partner&#39;s LOS. [optional]  # noqa: E501
            product_type (str): [optional]  # noqa: E501
            partner_product_code (str): Product code as per partners LOS/LMS. [optional]  # noqa: E501
            partner_scheme_code (str): [optional]  # noqa: E501
            category (str): secured / unsecured. [optional]  # noqa: E501
            sub_category (str): bt / top_up / fresh. [optional]  # noqa: E501
            purpose (str): Free flowing text. [optional]  # noqa: E501
            disbursement_type (str): Tranche / Single Disbursement. [optional]  # noqa: E501
            number_of_tranches (int): Total number of Tranches. [optional]  # noqa: E501
            end_borrower_amount (float): End borrower amount in case of multiple disbursals. [optional]  # noqa: E501
            existing_lender_amount (float): Existing Lender Amount in case of multiple disbursals. [optional]  # noqa: E501
            principal_amount (float): Total loan amount in Rs (Overall amount to the borrower). [optional]  # noqa: E501
            interest_rate (float): Reducing balance interest rate of the customer in %. This is the interest rate to be mentioned in the sanction letter as well. [optional]  # noqa: E501
            interest_type (str): Interest Type of the Loan. [optional]  # noqa: E501
            tenure (int): Tenure of the loan. [optional]  # noqa: E501
            tenure_frequency (str): Whether the tenure is monthly/yearly/weekly. [optional]  # noqa: E501
            repayment_frequency (str): Daily/Weekly/Once in 2 weeks/Monthly/Quarterly/Bullet. [optional]  # noqa: E501
            number_of_repayments (int): Number of repayments as per the repayment schedule. [optional]  # noqa: E501
            first_repayment_date (date): First repayment date as per the repayment schedule (YYYY-MM-DD). [optional]  # noqa: E501
            repayment_mode (str): Cash / NACH. [optional]  # noqa: E501
            advance_emi (float): Advance EMI Amount (If collected any). [optional]  # noqa: E501
            umrn (str): To update if UMRN generated at this stage, else in PDD stage. [optional]  # noqa: E501
            interest_start_date (date): Pre Emi interest due date. [optional]  # noqa: E501
            differential_interest (float): Broken Period Interest Amount (in Rupees). [optional]  # noqa: E501
            processing_fee (float): Processing Fee (Inclusive of GST). [optional]  # noqa: E501
            stamp_duty (float): Stamp duty amount. [optional]  # noqa: E501
            insurance_charges (float): Insurance premium inclusive of GST. [optional]  # noqa: E501
            documentation_charges (float): Total documentation charges inclusive of GST. [optional]  # noqa: E501
            other_charges (float): Any Other Charges Inclusive of GST. [optional]  # noqa: E501
            loan_plr_type (str): [optional]  # noqa: E501
            loan_plr_rate (float): Prime Lending Rate of the loan. [optional]  # noqa: E501
            spread_id (str): [optional]  # noqa: E501
            loan_emi (float): EMI of the loan. [optional]  # noqa: E501
            rcu_status (str): Document Verification Status (Y/N). [optional]  # noqa: E501
            surrogate (str): Surrogate. [optional]  # noqa: E501
            sub_class (str): Sub Class. [optional]  # noqa: E501
            weaker_section (str): Whether the borrower belongs to the weaker section as defined under RBI norms. [optional]  # noqa: E501
            disbursement_accounts ([BodyCreateLoanDisbursementAccounts]): Refer table DisbursementAccounts for attributes. [optional]  # noqa: E501
            assets ([BodyCreateLoanAssets]): Refer table Assets for attributes. [optional]  # noqa: E501
            references ([BodyCreateLoanReferences]): Refer table References for attributes. [optional]  # noqa: E501
            insurance_details ([BodyCreateLoanInsuranceDetails]): Refer table InsuranceDetails for attributes. [optional]  # noqa: E501
            psl_flag (str): Does this loan belong to Priority Sector Lending?. [optional]  # noqa: E501
            psl_description (str): Description on Priority Sector Lending. [optional]  # noqa: E501
            psl_code (str): Priority Sector Lending code. [optional]  # noqa: E501
            psl_proof_link ([str]): Any documents as proof for PSL. [optional]  # noqa: E501
            psl_proof_link_password (str): Document Password. [optional]  # noqa: E501
            tranches ([BodyCreateLoanTranches]): Refer table Tranches for attributes. [optional]  # noqa: E501
            linked_loan_infos ([BodyCreateLoanLinkedLoanInfos]): Refer table LinkedLoanInfos for attributes. [optional]  # noqa: E501
            sourcing_detail (BodyCreateLoanSourcingDetail): [optional]  # noqa: E501
            deviation_details ([BodyCreateLoanDeviationDetails]): Refer table DeviationDetails for attributes. [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        self = super(OpenApiModel, cls).__new__(cls)

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
        return self

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
    ])

    @convert_js_args_to_python_args
    def __init__(self, *args, **kwargs):  # noqa: E501
        """BodyCreateLoan - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            customer_type (str): Individual / Corporate. [optional]  # noqa: E501
            customer_category (str): Salaried, Self-Empolyed. [optional]  # noqa: E501
            client_customer_id (str): Customer id as per partners CRM/LOS. [optional]  # noqa: E501
            title (str): Mr / Ms. [optional]  # noqa: E501
            first_name (str): First Name of the Customer. [optional]  # noqa: E501
            middle_name (str): Middle Name of the Customer. [optional]  # noqa: E501
            last_name (str): Last Name of the Customer. [optional]  # noqa: E501
            gender (str): M / F / O. [optional]  # noqa: E501
            date_of_birth (date): Date of birth in YYYY-MM-DD. [optional]  # noqa: E501
            age (int): Age in years. [optional]  # noqa: E501
            mobile_number (int): Mobile Number of the Customer (10 digits). [optional]  # noqa: E501
            phone_number (int): Contact Number of the Customer. [optional]  # noqa: E501
            email (str): Permanent Email id of the Customer. [optional]  # noqa: E501
            official_email_id (str): Official Email ID of the Customer. [optional]  # noqa: E501
            place_of_birth (str): Place of birth of the Customer. [optional]  # noqa: E501
            current_address (str): Current address of the applicant. Free flowing text. [optional]  # noqa: E501
            current_village (str): Village in which applicant is currently residing. Free flowing for now. [optional]  # noqa: E501
            current_city_tier (str): tier_1, tier_2 etc. for the current city. [optional]  # noqa: E501
            current_city (str): City in which applicant is currently residing. Free flowing for now. [optional]  # noqa: E501
            current_district (str): District in which applicant is currently residing. Free flowing for now. [optional]  # noqa: E501
            current_state (str): State in which applicant is currently residing. Free flowing for now. [optional]  # noqa: E501
            current_country (str): Country in which applicant is currently residing. Free flowing for now. [optional]  # noqa: E501
            current_pincode (int): Pincode of the current address. [optional]  # noqa: E501
            residence_type_current_address (str): rented / owned / leased. [optional]  # noqa: E501
            years_of_stay_in_current_address (int): How many years stayed in the current address. [optional]  # noqa: E501
            permanent_address (str): Permanent address of the customer. Free flowing for now. [optional]  # noqa: E501
            permanent_city (str): Permanent city of the customer. Free flowing for now. [optional]  # noqa: E501
            permanent_city_tier (str): tier_1, tier_2 etc. for the permanent city. [optional]  # noqa: E501
            permanent_district (str): Permanent district of the customer. Free flowing for now. [optional]  # noqa: E501
            permanent_state (str): Permanent state of the customer. Free flowing for now. [optional]  # noqa: E501
            permanent_pincode (int): Permanent pincode of the customer. Free flowing for now. [optional]  # noqa: E501
            residence_type_permanent_address (str): rented / owned / leased. [optional]  # noqa: E501
            years_of_stay_in_permanent_address (int): How many years stayed in the permanent address. [optional]  # noqa: E501
            mailing_address (str): Mailing address of the customer. Free flowing text. [optional]  # noqa: E501
            marital_status (str): married / unmarried. [optional]  # noqa: E501
            religion (str): Religion of customer. Free flow text. [optional]  # noqa: E501
            nationality (str): Nationality of customer. Free flow text. [optional]  # noqa: E501
            father_name (str): Father name of customer. Free flow text. [optional]  # noqa: E501
            mother_name (str): Mother name of customer; Free flow text. [optional]  # noqa: E501
            spouse_name (str): Spouse name of customer; Free flow text. [optional]  # noqa: E501
            education_qualification (str): Educational Qualifications. [optional]  # noqa: E501
            net_monthly_income (float): Monthly Income of the Customer (in Rupees). [optional]  # noqa: E501
            annual_income (float): Annual income of the customer in number (don’t convert into thousand/lacs etc). [optional]  # noqa: E501
            no_of_dependants (int): Number of dependants. [optional]  # noqa: E501
            occupation (str): salaried / business / retired / self_employed and others. [optional]  # noqa: E501
            partner_score_on_the_customer (float): Partner score. [optional]  # noqa: E501
            politically_exposed (str): Political Exposure of the Customer. [optional]  # noqa: E501
            income_source (str): Cash / Cheque / Fund transfer. [optional]  # noqa: E501
            applicant_profession (str): Profession of the Customer. [optional]  # noqa: E501
            caution_negative_profile (str): Is the customer categories as a negative profile?. [optional]  # noqa: E501
            udyam_number (str): Udyam Number of the Customer. [optional]  # noqa: E501
            pan_check (str): Result of the pan check. [optional]  # noqa: E501
            dedupe_status (str): Result of the dedupe. [optional]  # noqa: E501
            pan_number (str): PAN number of customer. [optional]  # noqa: E501
            pan_number_link ([str]): PAN image of the document. [optional]  # noqa: E501
            pan_number_link_password (str): PAN image password. [optional]  # noqa: E501
            form_60_link ([str]): Form 60 If applicable. [optional]  # noqa: E501
            form_60_link_password (str): Form 60 password If applicable. [optional]  # noqa: E501
            aadhar_number (str): Aadhar number of customer. [optional]  # noqa: E501
            aadhar_number_link ([str]): Aadhar image of the document. [optional]  # noqa: E501
            aadhar_number_link_password (str): Aadhar image password. [optional]  # noqa: E501
            voter_id_number (str): Voter ID Number of customer. [optional]  # noqa: E501
            voting_id_link ([str]): Voter ID image of the document. [optional]  # noqa: E501
            voting_id_link_password (str): Voter ID image password. [optional]  # noqa: E501
            driving_license_number (str): Driving license number of customer. [optional]  # noqa: E501
            driving_license_number_link ([str]): Driving License image of the document. [optional]  # noqa: E501
            driving_license_number_link_password (str): Driving license image password. [optional]  # noqa: E501
            driving_license_expiry_date (date): Expiry date of driving license. [optional]  # noqa: E501
            passport_number (str): Passport number of customer. [optional]  # noqa: E501
            passport_number_link ([str]): Passport image of the document. [optional]  # noqa: E501
            passport_number_link_password (str): Passport image password. [optional]  # noqa: E501
            video_image_link ([str]): Video KYC of the Applicant. [optional]  # noqa: E501
            video_image_link_password (str): Video KYC link password. [optional]  # noqa: E501
            video_kyc_detail (BodyCreateLoanVideoKycDetail): [optional]  # noqa: E501
            other_kyc_number (str): KYC Number of the Customer. [optional]  # noqa: E501
            other_kyc_link ([str]): KYC Image of the Customer. [optional]  # noqa: E501
            other_kyc_link_password (str): KYC Image link password. [optional]  # noqa: E501
            rent_agreement_link ([str]): KYC number of customer. [optional]  # noqa: E501
            rent_agreement_link_password (str): Rent agreement link password. [optional]  # noqa: E501
            utility_bills_link ([str]): Utility bills link. [optional]  # noqa: E501
            utility_bills_link_password (str): Utility bills link password. [optional]  # noqa: E501
            photo_link ([str]): Photo Image of the Customer. [optional]  # noqa: E501
            photo_link_password (str): Photo Image password. [optional]  # noqa: E501
            employer_tier (str): tier_1, tier_2 etc. for  the employer. [optional]  # noqa: E501
            employer_category (str): Category of the employer. [optional]  # noqa: E501
            employment_type (str): salaried / self_employed. [optional]  # noqa: E501
            employment_details_name (str): Employer name. Free flowing text. [optional]  # noqa: E501
            employment_details_address (str): Office address. Free flowing text. [optional]  # noqa: E501
            employment_details_years_of_experience (float): Applicant Number of years in the current organization. [optional]  # noqa: E501
            employment_details_designation (str): Designation in current role, free flowing text. [optional]  # noqa: E501
            employement_vintage_current_organisation (int): No of Years in the same Organisation. [optional]  # noqa: E501
            total_work_experience (float): Total years of experience. [optional]  # noqa: E501
            payslip_link ([str]): Last three month pay slip. [optional]  # noqa: E501
            payslip_link_password (str): Last three month pay slip link password. [optional]  # noqa: E501
            tds_certificate_link ([str]): Last Three Year TDS Certificate Link. [optional]  # noqa: E501
            tds_certificate_link_password (str): Last Three Year TDS Certificate Link. [optional]  # noqa: E501
            ckyc_download_identifier (str): CKYC Download Identifier. [optional]  # noqa: E501
            business (BodyCreateLoanBusiness): [optional]  # noqa: E501
            guarantors ([BodyCreateLoanGuarantors]): Refer table Guarantors for attributes. [optional]  # noqa: E501
            co_applicants ([BodyCreateLoanCoApplicants]): Refer table CoApplicants for attributes. [optional]  # noqa: E501
            bank_statement (BodyCreateLoanBankStatement): [optional]  # noqa: E501
            name_of_bureau (str): Cibil / Experian / Himark. [optional]  # noqa: E501
            bureau_vintage (int): Vintage in the bureau. Number of years from the first trade line. [optional]  # noqa: E501
            bureau_score (int): Bureau Score. [optional]  # noqa: E501
            bureau_report_json_link ([str]): Document of the bureau. [optional]  # noqa: E501
            bureau_report_json_link_password (str): Document of the bureau - Password. [optional]  # noqa: E501
            bureau_json_link ([str]): Bureau Json placed in a link. [optional]  # noqa: E501
            bureau_json_link_password (str): Bureau Json placed in a link - Password. [optional]  # noqa: E501
            bureau_json ([str]): Bureau Json response. [optional]  # noqa: E501
            commercial_bureau_score (int): CRIF score. [optional]  # noqa: E501
            commercial_bureau_score_link ([str]): Commercial Bureau Document. [optional]  # noqa: E501
            commercial_bureau_score_link_password (str): Commercial Bureau Document Password. [optional]  # noqa: E501
            partner_score_on_the_customer_including_bureau_report (float): Score Captured by the Partner. [optional]  # noqa: E501
            total_existing_obligations (int): Total Existing Obligations basis the Bureau Report. [optional]  # noqa: E501
            credit_card_limit (int): Total Credit Card Limit basis the Bureau Report. [optional]  # noqa: E501
            no_of_credit_cards (int): Total Number of Credit Cards per Bureau Report. [optional]  # noqa: E501
            total_number_of_unsecured_loans (int): Total Number of Unsecured Loans per Bureau Report. [optional]  # noqa: E501
            value_of_total_unsecured_loans (float): Total value of unsecured loans. [optional]  # noqa: E501
            writeoff_amount_suitfiled_settled_in_last_36_months (float): Amount of writeoffs settled in last 36 months. [optional]  # noqa: E501
            dpd_days_last_1_month (int): Number of DPD in last 1 month. [optional]  # noqa: E501
            dpd_days_last_3_months (int): Number of DPD in last 3 months. [optional]  # noqa: E501
            total_number_of_loans (int): Total Number of Loans per Bureau Report. [optional]  # noqa: E501
            value_of_total_loans (float): Total value of loans. [optional]  # noqa: E501
            number_of_enquiries_3months (int): Number of Enquiries in the Last 3 Months per Bureau Report. [optional]  # noqa: E501
            number_of_enquiries_6months (int): Number of Enquiries in the Last 6 Months per Bureau Report. [optional]  # noqa: E501
            number_of_enquiries_12months (int): Number of Enquiries in the Last 12 Months per Bureau Report. [optional]  # noqa: E501
            number_of_writeoff_suitfiled_settled_in_the_last_12_months (int): Number of Writeoff Suitfiled Settled in the Last 12 Months. [optional]  # noqa: E501
            max_dpd_tradeline_last_12months (int): Maximum DPD Tradeline in the Last 12 Months. [optional]  # noqa: E501
            max_overdue_tradeline (int): Maximum Overdue Tradeline. [optional]  # noqa: E501
            total_overdue_amount_in_last_12m (float): Total Overdue Amount in the Last 12 Months. [optional]  # noqa: E501
            amount_of_loan_settled_in_last_12m (float): Loan Amount Settled in the Last 12 Months. [optional]  # noqa: E501
            nature_of_loan_settled1 (str): The nature of past loan settlement if any (Loan 1) - Settled/ Closed/ Written-off. [optional]  # noqa: E501
            nature_of_loan_settled2 (str): The nature of past loan settlement if any (Loan 2) - Settled/ Closed/ Written-off. [optional]  # noqa: E501
            total_emi_bounces (int): Total EMI Bounces. [optional]  # noqa: E501
            bounces_in_last_6m (int): EMI Bounces in the Last 6 Months. [optional]  # noqa: E501
            bounces_in_last_12m (int): EMI Bounces in the Last 12 Months. [optional]  # noqa: E501
            bureau_validity_date (date): Validity of bureau report. [optional]  # noqa: E501
            financial_data (BodyCreateLoanFinancialData): [optional]  # noqa: E501
            abb_emi_ratio (float): Average Bank balance to EMI. [optional]  # noqa: E501
            dscr (float): Debt Service Coverage Ratio. [optional]  # noqa: E501
            foir (float): Fixed Obligations to Income Ratio. [optional]  # noqa: E501
            ltr (float): Loan Transfer Ratio. [optional]  # noqa: E501
            insr (float): INSR. [optional]  # noqa: E501
            eligibility_as_per_insr (float): Eligibility as per INSR. [optional]  # noqa: E501
            eligibility_as_per_foir (float): Eligibility as per FOIR. [optional]  # noqa: E501
            eligibility_as_per_ltv (float): Eligibility as per LTV. [optional]  # noqa: E501
            eligibility_loan_amount (float): Eligibility Loan amount. [optional]  # noqa: E501
            fcf (int): Free Cash Flows. [optional]  # noqa: E501
            emi_obligations (int): Existing EMI obligations. [optional]  # noqa: E501
            viability_ratio (float): Net Assets/ Debt. [optional]  # noqa: E501
            loan_eligibility_to_income_ratio (int): The ratio of loan amount eligible to the personal income. [optional]  # noqa: E501
            risk_category (str): Risk Category. [optional]  # noqa: E501
            salary_credit_declared_income (int): Ratio of salary credit to customer account to the income declared. [optional]  # noqa: E501
            product_id (str): Product ID created in CA. [optional]  # noqa: E501
            client_loan_id (str): Loan ID as per Partner&#39;s LMS. [optional]  # noqa: E501
            application_id (str): Application ID as per Partner&#39;s CRM/LOS. [optional]  # noqa: E501
            loan_cycle (int): Denotes the Cycle number of the loan given to the borrower. [optional]  # noqa: E501
            partner_branch_code (str): Branch Code as per Partner&#39;s LOS. [optional]  # noqa: E501
            partner_branch_name (str): Branch Name as per Partner&#39;s LOS. [optional]  # noqa: E501
            product_type (str): [optional]  # noqa: E501
            partner_product_code (str): Product code as per partners LOS/LMS. [optional]  # noqa: E501
            partner_scheme_code (str): [optional]  # noqa: E501
            category (str): secured / unsecured. [optional]  # noqa: E501
            sub_category (str): bt / top_up / fresh. [optional]  # noqa: E501
            purpose (str): Free flowing text. [optional]  # noqa: E501
            disbursement_type (str): Tranche / Single Disbursement. [optional]  # noqa: E501
            number_of_tranches (int): Total number of Tranches. [optional]  # noqa: E501
            end_borrower_amount (float): End borrower amount in case of multiple disbursals. [optional]  # noqa: E501
            existing_lender_amount (float): Existing Lender Amount in case of multiple disbursals. [optional]  # noqa: E501
            principal_amount (float): Total loan amount in Rs (Overall amount to the borrower). [optional]  # noqa: E501
            interest_rate (float): Reducing balance interest rate of the customer in %. This is the interest rate to be mentioned in the sanction letter as well. [optional]  # noqa: E501
            interest_type (str): Interest Type of the Loan. [optional]  # noqa: E501
            tenure (int): Tenure of the loan. [optional]  # noqa: E501
            tenure_frequency (str): Whether the tenure is monthly/yearly/weekly. [optional]  # noqa: E501
            repayment_frequency (str): Daily/Weekly/Once in 2 weeks/Monthly/Quarterly/Bullet. [optional]  # noqa: E501
            number_of_repayments (int): Number of repayments as per the repayment schedule. [optional]  # noqa: E501
            first_repayment_date (date): First repayment date as per the repayment schedule (YYYY-MM-DD). [optional]  # noqa: E501
            repayment_mode (str): Cash / NACH. [optional]  # noqa: E501
            advance_emi (float): Advance EMI Amount (If collected any). [optional]  # noqa: E501
            umrn (str): To update if UMRN generated at this stage, else in PDD stage. [optional]  # noqa: E501
            interest_start_date (date): Pre Emi interest due date. [optional]  # noqa: E501
            differential_interest (float): Broken Period Interest Amount (in Rupees). [optional]  # noqa: E501
            processing_fee (float): Processing Fee (Inclusive of GST). [optional]  # noqa: E501
            stamp_duty (float): Stamp duty amount. [optional]  # noqa: E501
            insurance_charges (float): Insurance premium inclusive of GST. [optional]  # noqa: E501
            documentation_charges (float): Total documentation charges inclusive of GST. [optional]  # noqa: E501
            other_charges (float): Any Other Charges Inclusive of GST. [optional]  # noqa: E501
            loan_plr_type (str): [optional]  # noqa: E501
            loan_plr_rate (float): Prime Lending Rate of the loan. [optional]  # noqa: E501
            spread_id (str): [optional]  # noqa: E501
            loan_emi (float): EMI of the loan. [optional]  # noqa: E501
            rcu_status (str): Document Verification Status (Y/N). [optional]  # noqa: E501
            surrogate (str): Surrogate. [optional]  # noqa: E501
            sub_class (str): Sub Class. [optional]  # noqa: E501
            weaker_section (str): Whether the borrower belongs to the weaker section as defined under RBI norms. [optional]  # noqa: E501
            disbursement_accounts ([BodyCreateLoanDisbursementAccounts]): Refer table DisbursementAccounts for attributes. [optional]  # noqa: E501
            assets ([BodyCreateLoanAssets]): Refer table Assets for attributes. [optional]  # noqa: E501
            references ([BodyCreateLoanReferences]): Refer table References for attributes. [optional]  # noqa: E501
            insurance_details ([BodyCreateLoanInsuranceDetails]): Refer table InsuranceDetails for attributes. [optional]  # noqa: E501
            psl_flag (str): Does this loan belong to Priority Sector Lending?. [optional]  # noqa: E501
            psl_description (str): Description on Priority Sector Lending. [optional]  # noqa: E501
            psl_code (str): Priority Sector Lending code. [optional]  # noqa: E501
            psl_proof_link ([str]): Any documents as proof for PSL. [optional]  # noqa: E501
            psl_proof_link_password (str): Document Password. [optional]  # noqa: E501
            tranches ([BodyCreateLoanTranches]): Refer table Tranches for attributes. [optional]  # noqa: E501
            linked_loan_infos ([BodyCreateLoanLinkedLoanInfos]): Refer table LinkedLoanInfos for attributes. [optional]  # noqa: E501
            sourcing_detail (BodyCreateLoanSourcingDetail): [optional]  # noqa: E501
            deviation_details ([BodyCreateLoanDeviationDetails]): Refer table DeviationDetails for attributes. [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
            if var_name in self.read_only_vars:
                raise ApiAttributeError(f"`{var_name}` is a read-only attribute. Use `from_openapi_data` to instantiate "
                                     f"class with read only attributes.")
